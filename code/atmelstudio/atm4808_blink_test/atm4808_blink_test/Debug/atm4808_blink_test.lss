
atm4808_blink_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00802800  00000412  000004a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000412  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00802802  00802802  000004a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000033fd  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002226  00000000  00000000  00003945  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000325  00000000  00000000  00005b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00005e90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001a23  00000000  00000000  00005ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000003c  00000000  00000000  00007907  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00007943  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 c0 00 	jmp	0x180	; 0x180 <__vector_20>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
  9c:	18 e2       	ldi	r17, 0x28	; 40
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b8 e2       	ldi	r27, 0x28	; 40
  a2:	e2 e1       	ldi	r30, 0x12	; 18
  a4:	f4 e0       	ldi	r31, 0x04	; 4
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
  a8:	05 90       	lpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
  b2:	28 e2       	ldi	r18, 0x28	; 40
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b8 e2       	ldi	r27, 0x28	; 40
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 30       	cpi	r26, 0x03	; 3
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
  c6:	0c 94 07 02 	jmp	0x40e	; 0x40e <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <init>:
volatile uint8_t buttonstate = 0;
volatile uint8_t duty_cycle = 50;
volatile uint8_t duty_cycle_old;

void init(void) {
    CPU_CCP = CCP_IOREG_gc;
  ce:	98 ed       	ldi	r25, 0xD8	; 216
  d0:	94 bf       	out	0x34, r25	; 52
    CPUINT.CTRLA &= ~CPUINT_IVSEL_bm;
  d2:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__TEXT_REGION_LENGTH__+0x700110>
  d6:	8f 7b       	andi	r24, 0xBF	; 191
  d8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__TEXT_REGION_LENGTH__+0x700110>
    CPU_CCP = CCP_IOREG_gc;
  dc:	94 bf       	out	0x34, r25	; 52
    CLKCTRL.MCLKCTRLB = (CLKCTRL_PDIV_2X_gc | CLKCTRL_PEN_bm);          // set prescaler to 2 and enable it
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
    while (CLKCTRL.MCLKSTATUS & CLKCTRL_SOSC_bm) {                      // wait for clock to stabilize
  e4:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x700063>
  e8:	80 fd       	sbrc	r24, 0
  ea:	fc cf       	rjmp	.-8      	; 0xe4 <init+0x16>
        ;
    }
    
    PORTD.DIRSET = PIN3_bm;
  ec:	88 e0       	ldi	r24, 0x08	; 8
  ee:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x700461>
    PORTD.DIRCLR = PIN4_bm;
  f2:	80 e1       	ldi	r24, 0x10	; 16
  f4:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__TEXT_REGION_LENGTH__+0x700462>
    PORTD.PIN4CTRL |= PORT_ISC_FALLING_gc;
  f8:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <__TEXT_REGION_LENGTH__+0x700474>
  fc:	83 60       	ori	r24, 0x03	; 3
  fe:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <__TEXT_REGION_LENGTH__+0x700474>
    
    /* PWM init (using TCA, Dual Slope PWM) */
    /* Set Output Port to PORTA */
    PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTA_gc;
 102:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7005e4>
    /* Set PA2 to output */
    PORTA.DIR |= PIN2_bm;                                
 106:	80 91 00 04 	lds	r24, 0x0400	; 0x800400 <__TEXT_REGION_LENGTH__+0x700400>
 10a:	84 60       	ori	r24, 0x04	; 4
 10c:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <__TEXT_REGION_LENGTH__+0x700400>
    /* Setup TCA Clock and enable it */                                
    TCA0.SINGLE.CTRLA |= (TCA_PRESCALER_BM | TCA_SINGLE_ENABLE_bm);
 110:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <__TEXT_REGION_LENGTH__+0x700a00>
 114:	87 60       	ori	r24, 0x07	; 7
 116:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x700a00>
    /* Set to dual slope PWM */
    TCA0.SINGLE.CTRLB |= TCA_SINGLE_WGMODE_DSBOTTOM_gc;
 11a:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x700a01>
 11e:	87 60       	ori	r24, 0x07	; 7
 120:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x700a01>
    /* Set timer to count clock ticks */
    TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
 124:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x700a09>
 128:	8e 7f       	andi	r24, 0xFE	; 254
 12a:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x700a09>
    /* Setup TCA period for desired FREQUENCY */
    TCA0.SINGLE.PERBUF = PWM_PERIOD(PWM_FREQ);
 12e:	81 e7       	ldi	r24, 0x71	; 113
 130:	92 e0       	ldi	r25, 0x02	; 2
 132:	80 93 36 0a 	sts	0x0A36, r24	; 0x800a36 <__TEXT_REGION_LENGTH__+0x700a36>
 136:	90 93 37 0a 	sts	0x0A37, r25	; 0x800a37 <__TEXT_REGION_LENGTH__+0x700a37>
    /* Setup duty cycle */
    TCA0.SINGLE.CMP2BUF = (uint16_t)((1.0/100) * duty_cycle * PWM_PERIOD(PWM_FREQ));
 13a:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__data_start>
 13e:	70 e0       	ldi	r23, 0x00	; 0
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 0e 01 	call	0x21c	; 0x21c <__floatsisf>
 148:	2a e0       	ldi	r18, 0x0A	; 10
 14a:	37 ed       	ldi	r19, 0xD7	; 215
 14c:	43 e2       	ldi	r20, 0x23	; 35
 14e:	5c e3       	ldi	r21, 0x3C	; 60
 150:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__mulsf3>
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e4       	ldi	r19, 0x40	; 64
 158:	4c e1       	ldi	r20, 0x1C	; 28
 15a:	54 e4       	ldi	r21, 0x44	; 68
 15c:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__mulsf3>
 160:	0e 94 dd 00 	call	0x1ba	; 0x1ba <__fixunssfsi>
 164:	60 93 3c 0a 	sts	0x0A3C, r22	; 0x800a3c <__TEXT_REGION_LENGTH__+0x700a3c>
 168:	70 93 3d 0a 	sts	0x0A3D, r23	; 0x800a3d <__TEXT_REGION_LENGTH__+0x700a3d>
    duty_cycle_old = duty_cycle;
 16c:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__data_start>
 170:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <__data_end>
    /* Disable PWM output by default */
    TCA0.SINGLE.CTRLB |= TCA_SINGLE_CMP2EN_bm;
 174:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x700a01>
 178:	80 64       	ori	r24, 0x40	; 64
 17a:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x700a01>
 17e:	08 95       	ret

00000180 <__vector_20>:
    
}

ISR(PORTD_PORT_vect) {
 180:	1f 92       	push	r1
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	8f 93       	push	r24
//         PORTD.OUTCLR = PIN3_bm;
//     }
//     else {
//         PORTD.OUTSET = PIN3_bm;
//     }
    PORTD.INTFLAGS = PORT_INT4_bm;
 18c:	80 e1       	ldi	r24, 0x10	; 16
 18e:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x700469>
}
 192:	8f 91       	pop	r24
 194:	0f 90       	pop	r0
 196:	0f be       	out	0x3f, r0	; 63
 198:	0f 90       	pop	r0
 19a:	1f 90       	pop	r1
 19c:	18 95       	reti

0000019e <main>:
//     buttonstate = ~buttonstate;
//     TCB0.INTFLAGS |= TCB_CAPT_bm; 
// }

int main(void) {
    init();
 19e:	0e 94 67 00 	call	0xce	; 0xce <init>
    sei();
 1a2:	78 94       	sei
    while (1) {
        if (PORTD.IN & PIN4_bm) {
            PORTD.OUTSET = PIN3_bm;
        }
        else {
            PORTD.OUTCLR = PIN3_bm;
 1a4:	88 e0       	ldi	r24, 0x08	; 8

int main(void) {
    init();
    sei();
    while (1) {
        if (PORTD.IN & PIN4_bm) {
 1a6:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x700468>
 1aa:	94 ff       	sbrs	r25, 4
 1ac:	03 c0       	rjmp	.+6      	; 0x1b4 <main+0x16>
            PORTD.OUTSET = PIN3_bm;
 1ae:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__TEXT_REGION_LENGTH__+0x700465>
 1b2:	f9 cf       	rjmp	.-14     	; 0x1a6 <main+0x8>
        }
        else {
            PORTD.OUTCLR = PIN3_bm;
 1b4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x700466>
 1b8:	f6 cf       	rjmp	.-20     	; 0x1a6 <main+0x8>

000001ba <__fixunssfsi>:
 1ba:	0e 94 51 01 	call	0x2a2	; 0x2a2 <__fp_splitA>
 1be:	88 f0       	brcs	.+34     	; 0x1e2 <__fixunssfsi+0x28>
 1c0:	9f 57       	subi	r25, 0x7F	; 127
 1c2:	98 f0       	brcs	.+38     	; 0x1ea <__fixunssfsi+0x30>
 1c4:	b9 2f       	mov	r27, r25
 1c6:	99 27       	eor	r25, r25
 1c8:	b7 51       	subi	r27, 0x17	; 23
 1ca:	b0 f0       	brcs	.+44     	; 0x1f8 <__fixunssfsi+0x3e>
 1cc:	e1 f0       	breq	.+56     	; 0x206 <__fixunssfsi+0x4c>
 1ce:	66 0f       	add	r22, r22
 1d0:	77 1f       	adc	r23, r23
 1d2:	88 1f       	adc	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	1a f0       	brmi	.+6      	; 0x1de <__fixunssfsi+0x24>
 1d8:	ba 95       	dec	r27
 1da:	c9 f7       	brne	.-14     	; 0x1ce <__fixunssfsi+0x14>
 1dc:	14 c0       	rjmp	.+40     	; 0x206 <__fixunssfsi+0x4c>
 1de:	b1 30       	cpi	r27, 0x01	; 1
 1e0:	91 f0       	breq	.+36     	; 0x206 <__fixunssfsi+0x4c>
 1e2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__fp_zero>
 1e6:	b1 e0       	ldi	r27, 0x01	; 1
 1e8:	08 95       	ret
 1ea:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__fp_zero>
 1ee:	67 2f       	mov	r22, r23
 1f0:	78 2f       	mov	r23, r24
 1f2:	88 27       	eor	r24, r24
 1f4:	b8 5f       	subi	r27, 0xF8	; 248
 1f6:	39 f0       	breq	.+14     	; 0x206 <__fixunssfsi+0x4c>
 1f8:	b9 3f       	cpi	r27, 0xF9	; 249
 1fa:	cc f3       	brlt	.-14     	; 0x1ee <__fixunssfsi+0x34>
 1fc:	86 95       	lsr	r24
 1fe:	77 95       	ror	r23
 200:	67 95       	ror	r22
 202:	b3 95       	inc	r27
 204:	d9 f7       	brne	.-10     	; 0x1fc <__fixunssfsi+0x42>
 206:	3e f4       	brtc	.+14     	; 0x216 <__fixunssfsi+0x5c>
 208:	90 95       	com	r25
 20a:	80 95       	com	r24
 20c:	70 95       	com	r23
 20e:	61 95       	neg	r22
 210:	7f 4f       	sbci	r23, 0xFF	; 255
 212:	8f 4f       	sbci	r24, 0xFF	; 255
 214:	9f 4f       	sbci	r25, 0xFF	; 255
 216:	08 95       	ret

00000218 <__floatunsisf>:
 218:	e8 94       	clt
 21a:	09 c0       	rjmp	.+18     	; 0x22e <__floatsisf+0x12>

0000021c <__floatsisf>:
 21c:	97 fb       	bst	r25, 7
 21e:	3e f4       	brtc	.+14     	; 0x22e <__floatsisf+0x12>
 220:	90 95       	com	r25
 222:	80 95       	com	r24
 224:	70 95       	com	r23
 226:	61 95       	neg	r22
 228:	7f 4f       	sbci	r23, 0xFF	; 255
 22a:	8f 4f       	sbci	r24, 0xFF	; 255
 22c:	9f 4f       	sbci	r25, 0xFF	; 255
 22e:	99 23       	and	r25, r25
 230:	a9 f0       	breq	.+42     	; 0x25c <__floatsisf+0x40>
 232:	f9 2f       	mov	r31, r25
 234:	96 e9       	ldi	r25, 0x96	; 150
 236:	bb 27       	eor	r27, r27
 238:	93 95       	inc	r25
 23a:	f6 95       	lsr	r31
 23c:	87 95       	ror	r24
 23e:	77 95       	ror	r23
 240:	67 95       	ror	r22
 242:	b7 95       	ror	r27
 244:	f1 11       	cpse	r31, r1
 246:	f8 cf       	rjmp	.-16     	; 0x238 <__floatsisf+0x1c>
 248:	fa f4       	brpl	.+62     	; 0x288 <__floatsisf+0x6c>
 24a:	bb 0f       	add	r27, r27
 24c:	11 f4       	brne	.+4      	; 0x252 <__floatsisf+0x36>
 24e:	60 ff       	sbrs	r22, 0
 250:	1b c0       	rjmp	.+54     	; 0x288 <__floatsisf+0x6c>
 252:	6f 5f       	subi	r22, 0xFF	; 255
 254:	7f 4f       	sbci	r23, 0xFF	; 255
 256:	8f 4f       	sbci	r24, 0xFF	; 255
 258:	9f 4f       	sbci	r25, 0xFF	; 255
 25a:	16 c0       	rjmp	.+44     	; 0x288 <__floatsisf+0x6c>
 25c:	88 23       	and	r24, r24
 25e:	11 f0       	breq	.+4      	; 0x264 <__floatsisf+0x48>
 260:	96 e9       	ldi	r25, 0x96	; 150
 262:	11 c0       	rjmp	.+34     	; 0x286 <__floatsisf+0x6a>
 264:	77 23       	and	r23, r23
 266:	21 f0       	breq	.+8      	; 0x270 <__floatsisf+0x54>
 268:	9e e8       	ldi	r25, 0x8E	; 142
 26a:	87 2f       	mov	r24, r23
 26c:	76 2f       	mov	r23, r22
 26e:	05 c0       	rjmp	.+10     	; 0x27a <__floatsisf+0x5e>
 270:	66 23       	and	r22, r22
 272:	71 f0       	breq	.+28     	; 0x290 <__floatsisf+0x74>
 274:	96 e8       	ldi	r25, 0x86	; 134
 276:	86 2f       	mov	r24, r22
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	60 e0       	ldi	r22, 0x00	; 0
 27c:	2a f0       	brmi	.+10     	; 0x288 <__floatsisf+0x6c>
 27e:	9a 95       	dec	r25
 280:	66 0f       	add	r22, r22
 282:	77 1f       	adc	r23, r23
 284:	88 1f       	adc	r24, r24
 286:	da f7       	brpl	.-10     	; 0x27e <__floatsisf+0x62>
 288:	88 0f       	add	r24, r24
 28a:	96 95       	lsr	r25
 28c:	87 95       	ror	r24
 28e:	97 f9       	bld	r25, 7
 290:	08 95       	ret

00000292 <__fp_split3>:
 292:	57 fd       	sbrc	r21, 7
 294:	90 58       	subi	r25, 0x80	; 128
 296:	44 0f       	add	r20, r20
 298:	55 1f       	adc	r21, r21
 29a:	59 f0       	breq	.+22     	; 0x2b2 <__fp_splitA+0x10>
 29c:	5f 3f       	cpi	r21, 0xFF	; 255
 29e:	71 f0       	breq	.+28     	; 0x2bc <__fp_splitA+0x1a>
 2a0:	47 95       	ror	r20

000002a2 <__fp_splitA>:
 2a2:	88 0f       	add	r24, r24
 2a4:	97 fb       	bst	r25, 7
 2a6:	99 1f       	adc	r25, r25
 2a8:	61 f0       	breq	.+24     	; 0x2c2 <__fp_splitA+0x20>
 2aa:	9f 3f       	cpi	r25, 0xFF	; 255
 2ac:	79 f0       	breq	.+30     	; 0x2cc <__fp_splitA+0x2a>
 2ae:	87 95       	ror	r24
 2b0:	08 95       	ret
 2b2:	12 16       	cp	r1, r18
 2b4:	13 06       	cpc	r1, r19
 2b6:	14 06       	cpc	r1, r20
 2b8:	55 1f       	adc	r21, r21
 2ba:	f2 cf       	rjmp	.-28     	; 0x2a0 <__fp_split3+0xe>
 2bc:	46 95       	lsr	r20
 2be:	f1 df       	rcall	.-30     	; 0x2a2 <__fp_splitA>
 2c0:	08 c0       	rjmp	.+16     	; 0x2d2 <__fp_splitA+0x30>
 2c2:	16 16       	cp	r1, r22
 2c4:	17 06       	cpc	r1, r23
 2c6:	18 06       	cpc	r1, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	f1 cf       	rjmp	.-30     	; 0x2ae <__fp_splitA+0xc>
 2cc:	86 95       	lsr	r24
 2ce:	71 05       	cpc	r23, r1
 2d0:	61 05       	cpc	r22, r1
 2d2:	08 94       	sec
 2d4:	08 95       	ret

000002d6 <__fp_zero>:
 2d6:	e8 94       	clt

000002d8 <__fp_szero>:
 2d8:	bb 27       	eor	r27, r27
 2da:	66 27       	eor	r22, r22
 2dc:	77 27       	eor	r23, r23
 2de:	cb 01       	movw	r24, r22
 2e0:	97 f9       	bld	r25, 7
 2e2:	08 95       	ret

000002e4 <__mulsf3>:
 2e4:	0e 94 85 01 	call	0x30a	; 0x30a <__mulsf3x>
 2e8:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__fp_round>
 2ec:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fp_pscA>
 2f0:	38 f0       	brcs	.+14     	; 0x300 <__mulsf3+0x1c>
 2f2:	0e 94 ef 01 	call	0x3de	; 0x3de <__fp_pscB>
 2f6:	20 f0       	brcs	.+8      	; 0x300 <__mulsf3+0x1c>
 2f8:	95 23       	and	r25, r21
 2fa:	11 f0       	breq	.+4      	; 0x300 <__mulsf3+0x1c>
 2fc:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_inf>
 300:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_nan>
 304:	11 24       	eor	r1, r1
 306:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__fp_szero>

0000030a <__mulsf3x>:
 30a:	0e 94 49 01 	call	0x292	; 0x292 <__fp_split3>
 30e:	70 f3       	brcs	.-36     	; 0x2ec <__mulsf3+0x8>

00000310 <__mulsf3_pse>:
 310:	95 9f       	mul	r25, r21
 312:	c1 f3       	breq	.-16     	; 0x304 <__mulsf3+0x20>
 314:	95 0f       	add	r25, r21
 316:	50 e0       	ldi	r21, 0x00	; 0
 318:	55 1f       	adc	r21, r21
 31a:	62 9f       	mul	r22, r18
 31c:	f0 01       	movw	r30, r0
 31e:	72 9f       	mul	r23, r18
 320:	bb 27       	eor	r27, r27
 322:	f0 0d       	add	r31, r0
 324:	b1 1d       	adc	r27, r1
 326:	63 9f       	mul	r22, r19
 328:	aa 27       	eor	r26, r26
 32a:	f0 0d       	add	r31, r0
 32c:	b1 1d       	adc	r27, r1
 32e:	aa 1f       	adc	r26, r26
 330:	64 9f       	mul	r22, r20
 332:	66 27       	eor	r22, r22
 334:	b0 0d       	add	r27, r0
 336:	a1 1d       	adc	r26, r1
 338:	66 1f       	adc	r22, r22
 33a:	82 9f       	mul	r24, r18
 33c:	22 27       	eor	r18, r18
 33e:	b0 0d       	add	r27, r0
 340:	a1 1d       	adc	r26, r1
 342:	62 1f       	adc	r22, r18
 344:	73 9f       	mul	r23, r19
 346:	b0 0d       	add	r27, r0
 348:	a1 1d       	adc	r26, r1
 34a:	62 1f       	adc	r22, r18
 34c:	83 9f       	mul	r24, r19
 34e:	a0 0d       	add	r26, r0
 350:	61 1d       	adc	r22, r1
 352:	22 1f       	adc	r18, r18
 354:	74 9f       	mul	r23, r20
 356:	33 27       	eor	r19, r19
 358:	a0 0d       	add	r26, r0
 35a:	61 1d       	adc	r22, r1
 35c:	23 1f       	adc	r18, r19
 35e:	84 9f       	mul	r24, r20
 360:	60 0d       	add	r22, r0
 362:	21 1d       	adc	r18, r1
 364:	82 2f       	mov	r24, r18
 366:	76 2f       	mov	r23, r22
 368:	6a 2f       	mov	r22, r26
 36a:	11 24       	eor	r1, r1
 36c:	9f 57       	subi	r25, 0x7F	; 127
 36e:	50 40       	sbci	r21, 0x00	; 0
 370:	9a f0       	brmi	.+38     	; 0x398 <__mulsf3_pse+0x88>
 372:	f1 f0       	breq	.+60     	; 0x3b0 <__mulsf3_pse+0xa0>
 374:	88 23       	and	r24, r24
 376:	4a f0       	brmi	.+18     	; 0x38a <__mulsf3_pse+0x7a>
 378:	ee 0f       	add	r30, r30
 37a:	ff 1f       	adc	r31, r31
 37c:	bb 1f       	adc	r27, r27
 37e:	66 1f       	adc	r22, r22
 380:	77 1f       	adc	r23, r23
 382:	88 1f       	adc	r24, r24
 384:	91 50       	subi	r25, 0x01	; 1
 386:	50 40       	sbci	r21, 0x00	; 0
 388:	a9 f7       	brne	.-22     	; 0x374 <__mulsf3_pse+0x64>
 38a:	9e 3f       	cpi	r25, 0xFE	; 254
 38c:	51 05       	cpc	r21, r1
 38e:	80 f0       	brcs	.+32     	; 0x3b0 <__mulsf3_pse+0xa0>
 390:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_inf>
 394:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__fp_szero>
 398:	5f 3f       	cpi	r21, 0xFF	; 255
 39a:	e4 f3       	brlt	.-8      	; 0x394 <__mulsf3_pse+0x84>
 39c:	98 3e       	cpi	r25, 0xE8	; 232
 39e:	d4 f3       	brlt	.-12     	; 0x394 <__mulsf3_pse+0x84>
 3a0:	86 95       	lsr	r24
 3a2:	77 95       	ror	r23
 3a4:	67 95       	ror	r22
 3a6:	b7 95       	ror	r27
 3a8:	f7 95       	ror	r31
 3aa:	e7 95       	ror	r30
 3ac:	9f 5f       	subi	r25, 0xFF	; 255
 3ae:	c1 f7       	brne	.-16     	; 0x3a0 <__mulsf3_pse+0x90>
 3b0:	fe 2b       	or	r31, r30
 3b2:	88 0f       	add	r24, r24
 3b4:	91 1d       	adc	r25, r1
 3b6:	96 95       	lsr	r25
 3b8:	87 95       	ror	r24
 3ba:	97 f9       	bld	r25, 7
 3bc:	08 95       	ret

000003be <__fp_inf>:
 3be:	97 f9       	bld	r25, 7
 3c0:	9f 67       	ori	r25, 0x7F	; 127
 3c2:	80 e8       	ldi	r24, 0x80	; 128
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	60 e0       	ldi	r22, 0x00	; 0
 3c8:	08 95       	ret

000003ca <__fp_nan>:
 3ca:	9f ef       	ldi	r25, 0xFF	; 255
 3cc:	80 ec       	ldi	r24, 0xC0	; 192
 3ce:	08 95       	ret

000003d0 <__fp_pscA>:
 3d0:	00 24       	eor	r0, r0
 3d2:	0a 94       	dec	r0
 3d4:	16 16       	cp	r1, r22
 3d6:	17 06       	cpc	r1, r23
 3d8:	18 06       	cpc	r1, r24
 3da:	09 06       	cpc	r0, r25
 3dc:	08 95       	ret

000003de <__fp_pscB>:
 3de:	00 24       	eor	r0, r0
 3e0:	0a 94       	dec	r0
 3e2:	12 16       	cp	r1, r18
 3e4:	13 06       	cpc	r1, r19
 3e6:	14 06       	cpc	r1, r20
 3e8:	05 06       	cpc	r0, r21
 3ea:	08 95       	ret

000003ec <__fp_round>:
 3ec:	09 2e       	mov	r0, r25
 3ee:	03 94       	inc	r0
 3f0:	00 0c       	add	r0, r0
 3f2:	11 f4       	brne	.+4      	; 0x3f8 <__fp_round+0xc>
 3f4:	88 23       	and	r24, r24
 3f6:	52 f0       	brmi	.+20     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3f8:	bb 0f       	add	r27, r27
 3fa:	40 f4       	brcc	.+16     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fc:	bf 2b       	or	r27, r31
 3fe:	11 f4       	brne	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 400:	60 ff       	sbrs	r22, 0
 402:	04 c0       	rjmp	.+8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 404:	6f 5f       	subi	r22, 0xFF	; 255
 406:	7f 4f       	sbci	r23, 0xFF	; 255
 408:	8f 4f       	sbci	r24, 0xFF	; 255
 40a:	9f 4f       	sbci	r25, 0xFF	; 255
 40c:	08 95       	ret

0000040e <_exit>:
 40e:	f8 94       	cli

00000410 <__stop_program>:
 410:	ff cf       	rjmp	.-2      	; 0x410 <__stop_program>
