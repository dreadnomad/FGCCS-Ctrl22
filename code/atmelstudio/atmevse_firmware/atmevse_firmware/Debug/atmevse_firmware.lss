
atmevse_firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00802800  00001cc9  00001b7d  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000178c  00000200  00000200  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000033d  0000598c  0000198c  00001840  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000f4  00802922  00802922  00001c9f  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001c9f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cfc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000178  00000000  00000000  00001d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004a13  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000028ad  00000000  00000000  000068c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000102a  00000000  00000000  00009174  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003e0  00000000  00000000  0000a1a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000021ff  00000000  00000000  0000a580  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c3a  00000000  00000000  0000c77f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000148  00000000  00000000  0000d3b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000200 <__vectors>:
     200:	0c 94 48 01 	jmp	0x290	; 0x290 <__ctors_end>
     204:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     208:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     20c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     210:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     214:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     218:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     21c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     220:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     224:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     228:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     22c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     230:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     234:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     238:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     23c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     240:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     244:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     248:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     24c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     250:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__vector_20>
     254:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     258:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     25c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     260:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     264:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     268:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     26c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     270:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     274:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     278:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     27c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     280:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     284:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     288:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     28c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>

00000290 <__ctors_end>:
     290:	11 24       	eor	r1, r1
     292:	1f be       	out	0x3f, r1	; 63
     294:	cf ef       	ldi	r28, 0xFF	; 255
     296:	cd bf       	out	0x3d, r28	; 61
     298:	df e3       	ldi	r29, 0x3F	; 63
     29a:	de bf       	out	0x3e, r29	; 62

0000029c <__do_copy_data>:
     29c:	19 e2       	ldi	r17, 0x29	; 41
     29e:	a0 e0       	ldi	r26, 0x00	; 0
     2a0:	b8 e2       	ldi	r27, 0x28	; 40
     2a2:	e9 ec       	ldi	r30, 0xC9	; 201
     2a4:	fc e1       	ldi	r31, 0x1C	; 28
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x10>
     2a8:	05 90       	lpm	r0, Z+
     2aa:	0d 92       	st	X+, r0
     2ac:	a2 32       	cpi	r26, 0x22	; 34
     2ae:	b1 07       	cpc	r27, r17
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0xc>

000002b2 <__do_clear_bss>:
     2b2:	2a e2       	ldi	r18, 0x2A	; 42
     2b4:	a2 e2       	ldi	r26, 0x22	; 34
     2b6:	b9 e2       	ldi	r27, 0x29	; 41
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
     2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
     2bc:	a6 31       	cpi	r26, 0x16	; 22
     2be:	b2 07       	cpc	r27, r18
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
     2c2:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <main>
     2c6:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <_exit>

000002ca <__bad_interrupt>:
     2ca:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

000002ce <led_toggle>:
        return 0;        
    } 
    else {
        return -1;
    }
}
     2ce:	88 e0       	ldi	r24, 0x08	; 8
     2d0:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x7f4467>
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	08 95       	ret

000002d8 <led_on>:
     2d8:	88 e0       	ldi	r24, 0x08	; 8
     2da:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__TEXT_REGION_LENGTH__+0x7f4465>
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	08 95       	ret

000002e2 <led_off>:
     2e2:	88 e0       	ldi	r24, 0x08	; 8
     2e4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x7f4466>
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	08 95       	ret

000002ec <pwm_on>:
     2ec:	e0 e0       	ldi	r30, 0x00	; 0
     2ee:	fa e0       	ldi	r31, 0x0A	; 10
     2f0:	81 81       	ldd	r24, Z+1	; 0x01
     2f2:	80 64       	ori	r24, 0x40	; 64
     2f4:	81 83       	std	Z+1, r24	; 0x01
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	08 95       	ret

000002fa <pwm_off>:
     2fa:	e0 e0       	ldi	r30, 0x00	; 0
     2fc:	fa e0       	ldi	r31, 0x0A	; 10
     2fe:	81 81       	ldd	r24, Z+1	; 0x01
     300:	8f 7b       	andi	r24, 0xBF	; 191
     302:	81 83       	std	Z+1, r24	; 0x01
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	08 95       	ret

00000308 <ssr1_on>:
     308:	80 e4       	ldi	r24, 0x40	; 64
     30a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     30e:	80 e0       	ldi	r24, 0x00	; 0
     310:	08 95       	ret

00000312 <ssr1_off>:
     312:	80 e4       	ldi	r24, 0x40	; 64
     314:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	08 95       	ret

0000031c <ssr2_on>:
     31c:	80 e2       	ldi	r24, 0x20	; 32
     31e:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	08 95       	ret

00000326 <ssr2_off>:
     326:	80 e2       	ldi	r24, 0x20	; 32
     328:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	08 95       	ret

00000330 <ssr3_on>:
     330:	80 e1       	ldi	r24, 0x10	; 16
     332:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     336:	80 e0       	ldi	r24, 0x00	; 0
     338:	08 95       	ret

0000033a <ssr3_off>:
     33a:	80 e1       	ldi	r24, 0x10	; 16
     33c:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	08 95       	ret

00000344 <lock_off>:
     344:	80 e8       	ldi	r24, 0x80	; 128
     346:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     34a:	84 e0       	ldi	r24, 0x04	; 4
     34c:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	08 95       	ret

00000354 <relay_on>:
     354:	88 e0       	ldi	r24, 0x08	; 8
     356:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	08 95       	ret

0000035e <relay_off>:
     35e:	88 e0       	ldi	r24, 0x08	; 8
     360:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	08 95       	ret

00000368 <readCP>:
     368:	e0 e0       	ldi	r30, 0x00	; 0
     36a:	f6 e0       	ldi	r31, 0x06	; 6
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	86 83       	std	Z+6, r24	; 0x06
     370:	80 87       	std	Z+8, r24	; 0x08
     372:	83 85       	ldd	r24, Z+11	; 0x0b
     374:	80 ff       	sbrs	r24, 0
     376:	fd cf       	rjmp	.-6      	; 0x372 <readCP+0xa>
     378:	e0 e0       	ldi	r30, 0x00	; 0
     37a:	f6 e0       	ldi	r31, 0x06	; 6
     37c:	80 89       	ldd	r24, Z+16	; 0x10
     37e:	91 89       	ldd	r25, Z+17	; 0x11
     380:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <cpVal>
     384:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <cpVal+0x1>
     388:	21 e0       	ldi	r18, 0x01	; 1
     38a:	23 87       	std	Z+11, r18	; 0x0b
     38c:	85 3d       	cpi	r24, 0xD5	; 213
     38e:	23 e0       	ldi	r18, 0x03	; 3
     390:	92 07       	cpc	r25, r18
     392:	20 f0       	brcs	.+8      	; 0x39c <readCP+0x34>
     394:	81 e0       	ldi	r24, 0x01	; 1
     396:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     39a:	1e c0       	rjmp	.+60     	; 0x3d8 <readCP+0x70>
     39c:	9c 01       	movw	r18, r24
     39e:	2d 55       	subi	r18, 0x5D	; 93
     3a0:	33 40       	sbci	r19, 0x03	; 3
     3a2:	26 33       	cpi	r18, 0x36	; 54
     3a4:	31 05       	cpc	r19, r1
     3a6:	20 f4       	brcc	.+8      	; 0x3b0 <readCP+0x48>
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3ae:	14 c0       	rjmp	.+40     	; 0x3d8 <readCP+0x70>
     3b0:	9c 01       	movw	r18, r24
     3b2:	21 5d       	subi	r18, 0xD1	; 209
     3b4:	32 40       	sbci	r19, 0x02	; 2
     3b6:	2f 34       	cpi	r18, 0x4F	; 79
     3b8:	31 05       	cpc	r19, r1
     3ba:	20 f4       	brcc	.+8      	; 0x3c4 <readCP+0x5c>
     3bc:	83 e0       	ldi	r24, 0x03	; 3
     3be:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3c2:	0a c0       	rjmp	.+20     	; 0x3d8 <readCP+0x70>
     3c4:	4a 97       	sbiw	r24, 0x1a	; 26
     3c6:	85 34       	cpi	r24, 0x45	; 69
     3c8:	91 05       	cpc	r25, r1
     3ca:	20 f4       	brcc	.+8      	; 0x3d4 <readCP+0x6c>
     3cc:	84 e0       	ldi	r24, 0x04	; 4
     3ce:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <readCP+0x70>
     3d4:	10 92 3b 29 	sts	0x293B, r1	; 0x80293b <pilot>
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	08 95       	ret

000003dc <readPP>:
     3dc:	e0 e0       	ldi	r30, 0x00	; 0
     3de:	f6 e0       	ldi	r31, 0x06	; 6
     3e0:	16 82       	std	Z+6, r1	; 0x06
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	80 87       	std	Z+8, r24	; 0x08
     3e6:	83 85       	ldd	r24, Z+11	; 0x0b
     3e8:	80 ff       	sbrs	r24, 0
     3ea:	fd cf       	rjmp	.-6      	; 0x3e6 <readPP+0xa>
     3ec:	e0 e0       	ldi	r30, 0x00	; 0
     3ee:	f6 e0       	ldi	r31, 0x06	; 6
     3f0:	80 89       	ldd	r24, Z+16	; 0x10
     3f2:	91 89       	ldd	r25, Z+17	; 0x11
     3f4:	80 93 3e 29 	sts	0x293E, r24	; 0x80293e <ppVal>
     3f8:	90 93 3f 29 	sts	0x293F, r25	; 0x80293f <ppVal+0x1>
     3fc:	21 e0       	ldi	r18, 0x01	; 1
     3fe:	23 87       	std	Z+11, r18	; 0x0b
     400:	9c 01       	movw	r18, r24
     402:	2b 58       	subi	r18, 0x8B	; 139
     404:	31 40       	sbci	r19, 0x01	; 1
     406:	27 32       	cpi	r18, 0x27	; 39
     408:	31 05       	cpc	r19, r1
     40a:	20 f4       	brcc	.+8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     40c:	80 e1       	ldi	r24, 0x10	; 16
     40e:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     412:	15 c0       	rjmp	.+42     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     414:	9c 01       	movw	r18, r24
     416:	20 5b       	subi	r18, 0xB0	; 176
     418:	31 09       	sbc	r19, r1
     41a:	21 31       	cpi	r18, 0x11	; 17
     41c:	31 05       	cpc	r19, r1
     41e:	20 f4       	brcc	.+8      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     420:	80 e2       	ldi	r24, 0x20	; 32
     422:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     426:	0b c0       	rjmp	.+22     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     428:	89 55       	subi	r24, 0x59	; 89
     42a:	91 09       	sbc	r25, r1
     42c:	09 97       	sbiw	r24, 0x09	; 9
     42e:	20 f0       	brcs	.+8      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     430:	8d e0       	ldi	r24, 0x0D	; 13
     432:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     436:	03 c0       	rjmp	.+6      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     438:	8f e3       	ldi	r24, 0x3F	; 63
     43a:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     43e:	80 91 2d 29 	lds	r24, 0x292D	; 0x80292d <cableConf>
     442:	88 23       	and	r24, r24
     444:	21 f0       	breq	.+8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     446:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <maxCurrent>
     44a:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	08 95       	ret

00000452 <readCT>:
     452:	e0 e0       	ldi	r30, 0x00	; 0
     454:	f6 e0       	ldi	r31, 0x06	; 6
     456:	85 e0       	ldi	r24, 0x05	; 5
     458:	86 83       	std	Z+6, r24	; 0x06
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	80 87       	std	Z+8, r24	; 0x08
     45e:	83 85       	ldd	r24, Z+11	; 0x0b
     460:	80 ff       	sbrs	r24, 0
     462:	fd cf       	rjmp	.-6      	; 0x45e <readCT+0xc>
     464:	e0 e0       	ldi	r30, 0x00	; 0
     466:	f6 e0       	ldi	r31, 0x06	; 6
     468:	80 89       	ldd	r24, Z+16	; 0x10
     46a:	91 89       	ldd	r25, Z+17	; 0x11
     46c:	80 93 46 29 	sts	0x2946, r24	; 0x802946 <ctVal>
     470:	90 93 47 29 	sts	0x2947, r25	; 0x802947 <ctVal+0x1>
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	83 87       	std	Z+11, r24	; 0x0b
     478:	96 e0       	ldi	r25, 0x06	; 6
     47a:	96 83       	std	Z+6, r25	; 0x06
     47c:	80 87       	std	Z+8, r24	; 0x08
     47e:	83 85       	ldd	r24, Z+11	; 0x0b
     480:	80 ff       	sbrs	r24, 0
     482:	fd cf       	rjmp	.-6      	; 0x47e <readCT+0x2c>
     484:	e0 e0       	ldi	r30, 0x00	; 0
     486:	f6 e0       	ldi	r31, 0x06	; 6
     488:	80 89       	ldd	r24, Z+16	; 0x10
     48a:	91 89       	ldd	r25, Z+17	; 0x11
     48c:	80 93 48 29 	sts	0x2948, r24	; 0x802948 <ctVal+0x2>
     490:	90 93 49 29 	sts	0x2949, r25	; 0x802949 <ctVal+0x3>
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	83 87       	std	Z+11, r24	; 0x0b
     498:	97 e0       	ldi	r25, 0x07	; 7
     49a:	96 83       	std	Z+6, r25	; 0x06
     49c:	80 87       	std	Z+8, r24	; 0x08
     49e:	83 85       	ldd	r24, Z+11	; 0x0b
     4a0:	80 ff       	sbrs	r24, 0
     4a2:	fd cf       	rjmp	.-6      	; 0x49e <readCT+0x4c>
     4a4:	e0 e0       	ldi	r30, 0x00	; 0
     4a6:	f6 e0       	ldi	r31, 0x06	; 6
     4a8:	80 89       	ldd	r24, Z+16	; 0x10
     4aa:	91 89       	ldd	r25, Z+17	; 0x11
     4ac:	80 93 4a 29 	sts	0x294A, r24	; 0x80294a <ctVal+0x4>
     4b0:	90 93 4b 29 	sts	0x294B, r25	; 0x80294b <ctVal+0x5>
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	83 87       	std	Z+11, r24	; 0x0b
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	08 95       	ret

000004bc <lock_cable>:
     4bc:	80 e8       	ldi	r24, 0x80	; 128
     4be:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     4c2:	84 e0       	ldi	r24, 0x04	; 4
     4c4:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
     4c8:	2f eb       	ldi	r18, 0xBF	; 191
     4ca:	87 e2       	ldi	r24, 0x27	; 39
     4cc:	99 e0       	ldi	r25, 0x09	; 9
     4ce:	21 50       	subi	r18, 0x01	; 1
     4d0:	80 40       	sbci	r24, 0x00	; 0
     4d2:	90 40       	sbci	r25, 0x00	; 0
     4d4:	e1 f7       	brne	.-8      	; 0x4ce <lock_cable+0x12>
     4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <lock_cable+0x1c>
     4d8:	00 00       	nop
     4da:	0e 94 a2 01 	call	0x344	; 0x344 <lock_off>
     4de:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	28 2f       	mov	r18, r24
     4e6:	24 70       	andi	r18, 0x04	; 4
     4e8:	82 ff       	sbrs	r24, 2
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     4f0:	21 11       	cpse	r18, r1
     4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <lock_cable+0x3c>
     4f4:	8e ef       	ldi	r24, 0xFE	; 254
     4f6:	08 95       	ret
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	08 95       	ret

000004fc <unlock_cable>:
     4fc:	80 e8       	ldi	r24, 0x80	; 128
     4fe:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     502:	84 e0       	ldi	r24, 0x04	; 4
     504:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     508:	2f eb       	ldi	r18, 0xBF	; 191
     50a:	87 e2       	ldi	r24, 0x27	; 39
     50c:	99 e0       	ldi	r25, 0x09	; 9
     50e:	21 50       	subi	r18, 0x01	; 1
     510:	80 40       	sbci	r24, 0x00	; 0
     512:	90 40       	sbci	r25, 0x00	; 0
     514:	e1 f7       	brne	.-8      	; 0x50e <unlock_cable+0x12>
     516:	00 c0       	rjmp	.+0      	; 0x518 <unlock_cable+0x1c>
     518:	00 00       	nop
     51a:	0e 94 a2 01 	call	0x344	; 0x344 <lock_off>
     51e:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	28 2f       	mov	r18, r24
     526:	24 70       	andi	r18, 0x04	; 4
     528:	82 ff       	sbrs	r24, 2
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     530:	22 23       	and	r18, r18
     532:	11 f0       	breq	.+4      	; 0x538 <unlock_cable+0x3c>
     534:	8e ef       	ldi	r24, 0xFE	; 254
     536:	08 95       	ret
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	08 95       	ret

0000053c <readTemp>:
     53c:	e0 e0       	ldi	r30, 0x00	; 0
     53e:	f6 e0       	ldi	r31, 0x06	; 6
     540:	80 81       	ld	r24, Z
     542:	8e 7f       	andi	r24, 0xFE	; 254
     544:	80 83       	st	Z, r24
     546:	82 81       	ldd	r24, Z+2	; 0x02
     548:	82 83       	std	Z+2, r24	; 0x02
     54a:	8e e1       	ldi	r24, 0x1E	; 30
     54c:	86 83       	std	Z+6, r24	; 0x06
     54e:	83 81       	ldd	r24, Z+3	; 0x03
     550:	80 62       	ori	r24, 0x20	; 32
     552:	83 83       	std	Z+3, r24	; 0x03
     554:	80 81       	ld	r24, Z
     556:	81 60       	ori	r24, 0x01	; 1
     558:	80 83       	st	Z, r24
     55a:	89 ef       	ldi	r24, 0xF9	; 249
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	01 97       	sbiw	r24, 0x01	; 1
     560:	f1 f7       	brne	.-4      	; 0x55e <readTemp+0x22>
     562:	00 c0       	rjmp	.+0      	; 0x564 <readTemp+0x28>
     564:	00 00       	nop
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	80 87       	std	Z+8, r24	; 0x08
     56a:	83 85       	ldd	r24, Z+11	; 0x0b
     56c:	80 ff       	sbrs	r24, 0
     56e:	fd cf       	rjmp	.-6      	; 0x56a <readTemp+0x2e>
     570:	e0 e0       	ldi	r30, 0x00	; 0
     572:	f6 e0       	ldi	r31, 0x06	; 6
     574:	20 89       	ldd	r18, Z+16	; 0x10
     576:	31 89       	ldd	r19, Z+17	; 0x11
     578:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <sigrow_offset>
     57c:	28 1b       	sub	r18, r24
     57e:	31 09       	sbc	r19, r1
     580:	87 fd       	sbrc	r24, 7
     582:	33 95       	inc	r19
     584:	a0 91 24 29 	lds	r26, 0x2924	; 0x802924 <sigrow_gain>
     588:	b0 e0       	ldi	r27, 0x00	; 0
     58a:	0e 94 ff 07 	call	0xffe	; 0xffe <__umulhisi3>
     58e:	dc 01       	movw	r26, r24
     590:	cb 01       	movw	r24, r22
     592:	80 58       	subi	r24, 0x80	; 128
     594:	9f 4f       	sbci	r25, 0xFF	; 255
     596:	af 4f       	sbci	r26, 0xFF	; 255
     598:	bf 4f       	sbci	r27, 0xFF	; 255
     59a:	89 2f       	mov	r24, r25
     59c:	9a 2f       	mov	r25, r26
     59e:	ab 2f       	mov	r26, r27
     5a0:	bb 27       	eor	r27, r27
     5a2:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <temperature>
     5a6:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <temperature+0x1>
     5aa:	80 81       	ld	r24, Z
     5ac:	8e 7f       	andi	r24, 0xFE	; 254
     5ae:	80 83       	st	Z, r24
     5b0:	82 81       	ldd	r24, Z+2	; 0x02
     5b2:	80 61       	ori	r24, 0x10	; 16
     5b4:	82 83       	std	Z+2, r24	; 0x02
     5b6:	83 81       	ldd	r24, Z+3	; 0x03
     5b8:	83 83       	std	Z+3, r24	; 0x03
     5ba:	80 81       	ld	r24, Z
     5bc:	81 60       	ori	r24, 0x01	; 1
     5be:	80 83       	st	Z, r24
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	83 87       	std	Z+11, r24	; 0x0b
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	08 95       	ret

000005c8 <all_ssr_off>:
     5c8:	e0 e0       	ldi	r30, 0x00	; 0
     5ca:	f4 e0       	ldi	r31, 0x04	; 4
     5cc:	80 e4       	ldi	r24, 0x40	; 64
     5ce:	86 83       	std	Z+6, r24	; 0x06
     5d0:	80 e2       	ldi	r24, 0x20	; 32
     5d2:	86 83       	std	Z+6, r24	; 0x06
     5d4:	80 e1       	ldi	r24, 0x10	; 16
     5d6:	86 83       	std	Z+6, r24	; 0x06
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	08 95       	ret

000005dc <all_ssr_on>:
     5dc:	e0 e0       	ldi	r30, 0x00	; 0
     5de:	f4 e0       	ldi	r31, 0x04	; 4
     5e0:	80 e4       	ldi	r24, 0x40	; 64
     5e2:	85 83       	std	Z+5, r24	; 0x05
     5e4:	80 e2       	ldi	r24, 0x20	; 32
     5e6:	85 83       	std	Z+5, r24	; 0x05
     5e8:	80 e1       	ldi	r24, 0x10	; 16
     5ea:	85 83       	std	Z+5, r24	; 0x05
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	08 95       	ret

000005f0 <init>:
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	98 ed       	ldi	r25, 0xD8	; 216
     5f6:	94 bf       	out	0x34, r25	; 52
     5f8:	e0 e1       	ldi	r30, 0x10	; 16
     5fa:	f1 e0       	ldi	r31, 0x01	; 1
     5fc:	80 81       	ld	r24, Z
     5fe:	8f 7b       	andi	r24, 0xBF	; 191
     600:	80 83       	st	Z, r24
     602:	94 bf       	out	0x34, r25	; 52
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
     60a:	8f ef       	ldi	r24, 0xFF	; 255
     60c:	9f ef       	ldi	r25, 0xFF	; 255
     60e:	01 97       	sbiw	r24, 0x01	; 1
     610:	f1 f7       	brne	.-4      	; 0x60e <init+0x1e>
     612:	e0 e6       	ldi	r30, 0x60	; 96
     614:	f4 e0       	ldi	r31, 0x04	; 4
     616:	88 e0       	ldi	r24, 0x08	; 8
     618:	81 83       	std	Z+1, r24	; 0x01
     61a:	90 e1       	ldi	r25, 0x10	; 16
     61c:	92 83       	std	Z+2, r25	; 0x02
     61e:	94 89       	ldd	r25, Z+20	; 0x14
     620:	92 60       	ori	r25, 0x02	; 2
     622:	94 8b       	std	Z+20, r25	; 0x14
     624:	94 89       	ldd	r25, Z+20	; 0x14
     626:	97 7f       	andi	r25, 0xF7	; 247
     628:	94 8b       	std	Z+20, r25	; 0x14
     62a:	a0 e0       	ldi	r26, 0x00	; 0
     62c:	b4 e0       	ldi	r27, 0x04	; 4
     62e:	90 e7       	ldi	r25, 0x70	; 112
     630:	11 96       	adiw	r26, 0x01	; 1
     632:	9c 93       	st	X, r25
     634:	11 97       	sbiw	r26, 0x01	; 1
     636:	16 96       	adiw	r26, 0x06	; 6
     638:	9c 93       	st	X, r25
     63a:	16 97       	sbiw	r26, 0x06	; 6
     63c:	11 96       	adiw	r26, 0x01	; 1
     63e:	8c 93       	st	X, r24
     640:	11 97       	sbiw	r26, 0x01	; 1
     642:	16 96       	adiw	r26, 0x06	; 6
     644:	8c 93       	st	X, r24
     646:	16 97       	sbiw	r26, 0x06	; 6
     648:	90 e8       	ldi	r25, 0x80	; 128
     64a:	11 96       	adiw	r26, 0x01	; 1
     64c:	9c 93       	st	X, r25
     64e:	11 97       	sbiw	r26, 0x01	; 1
     650:	15 96       	adiw	r26, 0x05	; 5
     652:	9c 93       	st	X, r25
     654:	15 97       	sbiw	r26, 0x05	; 5
     656:	c0 e4       	ldi	r28, 0x40	; 64
     658:	d4 e0       	ldi	r29, 0x04	; 4
     65a:	84 e0       	ldi	r24, 0x04	; 4
     65c:	89 83       	std	Y+1, r24	; 0x01
     65e:	8d 83       	std	Y+5, r24	; 0x05
     660:	82 83       	std	Z+2, r24	; 0x02
     662:	22 89       	ldd	r18, Z+18	; 0x12
     664:	22 8b       	std	Z+18, r18	; 0x12
     666:	20 e2       	ldi	r18, 0x20	; 32
     668:	22 83       	std	Z+2, r18	; 0x02
     66a:	25 89       	ldd	r18, Z+21	; 0x15
     66c:	28 7f       	andi	r18, 0xF8	; 248
     66e:	25 8b       	std	Z+21, r18	; 0x15
     670:	25 89       	ldd	r18, Z+21	; 0x15
     672:	24 60       	ori	r18, 0x04	; 4
     674:	25 8b       	std	Z+21, r18	; 0x15
     676:	25 89       	ldd	r18, Z+21	; 0x15
     678:	27 7f       	andi	r18, 0xF7	; 247
     67a:	25 8b       	std	Z+21, r18	; 0x15
     67c:	20 e4       	ldi	r18, 0x40	; 64
     67e:	22 83       	std	Z+2, r18	; 0x02
     680:	26 89       	ldd	r18, Z+22	; 0x16
     682:	28 7f       	andi	r18, 0xF8	; 248
     684:	26 8b       	std	Z+22, r18	; 0x16
     686:	26 89       	ldd	r18, Z+22	; 0x16
     688:	24 60       	ori	r18, 0x04	; 4
     68a:	26 8b       	std	Z+22, r18	; 0x16
     68c:	26 89       	ldd	r18, Z+22	; 0x16
     68e:	27 7f       	andi	r18, 0xF7	; 247
     690:	26 8b       	std	Z+22, r18	; 0x16
     692:	92 83       	std	Z+2, r25	; 0x02
     694:	97 89       	ldd	r25, Z+23	; 0x17
     696:	98 7f       	andi	r25, 0xF8	; 248
     698:	97 8b       	std	Z+23, r25	; 0x17
     69a:	97 89       	ldd	r25, Z+23	; 0x17
     69c:	94 60       	ori	r25, 0x04	; 4
     69e:	97 8b       	std	Z+23, r25	; 0x17
     6a0:	97 89       	ldd	r25, Z+23	; 0x17
     6a2:	97 7f       	andi	r25, 0xF7	; 247
     6a4:	97 8b       	std	Z+23, r25	; 0x17
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	92 83       	std	Z+2, r25	; 0x02
     6aa:	90 89       	ldd	r25, Z+16	; 0x10
     6ac:	98 7f       	andi	r25, 0xF8	; 248
     6ae:	90 8b       	std	Z+16, r25	; 0x10
     6b0:	90 89       	ldd	r25, Z+16	; 0x10
     6b2:	94 60       	ori	r25, 0x04	; 4
     6b4:	90 8b       	std	Z+16, r25	; 0x10
     6b6:	90 89       	ldd	r25, Z+16	; 0x10
     6b8:	97 7f       	andi	r25, 0xF7	; 247
     6ba:	90 8b       	std	Z+16, r25	; 0x10
     6bc:	92 e0       	ldi	r25, 0x02	; 2
     6be:	92 83       	std	Z+2, r25	; 0x02
     6c0:	91 89       	ldd	r25, Z+17	; 0x11
     6c2:	98 7f       	andi	r25, 0xF8	; 248
     6c4:	91 8b       	std	Z+17, r25	; 0x11
     6c6:	91 89       	ldd	r25, Z+17	; 0x11
     6c8:	94 60       	ori	r25, 0x04	; 4
     6ca:	91 8b       	std	Z+17, r25	; 0x11
     6cc:	91 89       	ldd	r25, Z+17	; 0x11
     6ce:	97 7f       	andi	r25, 0xF7	; 247
     6d0:	91 8b       	std	Z+17, r25	; 0x11
     6d2:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
     6d6:	11 96       	adiw	r26, 0x01	; 1
     6d8:	8c 93       	st	X, r24
     6da:	11 97       	sbiw	r26, 0x01	; 1
     6dc:	16 96       	adiw	r26, 0x06	; 6
     6de:	8c 93       	st	X, r24
     6e0:	c0 e0       	ldi	r28, 0x00	; 0
     6e2:	da e0       	ldi	r29, 0x0A	; 10
     6e4:	88 81       	ld	r24, Y
     6e6:	87 60       	ori	r24, 0x07	; 7
     6e8:	88 83       	st	Y, r24
     6ea:	89 81       	ldd	r24, Y+1	; 0x01
     6ec:	87 60       	ori	r24, 0x07	; 7
     6ee:	89 83       	std	Y+1, r24	; 0x01
     6f0:	89 85       	ldd	r24, Y+9	; 0x09
     6f2:	8e 7f       	andi	r24, 0xFE	; 254
     6f4:	89 87       	std	Y+9, r24	; 0x09
     6f6:	81 e7       	ldi	r24, 0x71	; 113
     6f8:	92 e0       	ldi	r25, 0x02	; 2
     6fa:	8e ab       	std	Y+54, r24	; 0x36
     6fc:	9f ab       	std	Y+55, r25	; 0x37
     6fe:	60 91 13 29 	lds	r22, 0x2913	; 0x802913 <dutyCycle>
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 06 07 	call	0xe0c	; 0xe0c <__floatsisf>
     70c:	2a e0       	ldi	r18, 0x0A	; 10
     70e:	37 ed       	ldi	r19, 0xD7	; 215
     710:	43 e2       	ldi	r20, 0x23	; 35
     712:	5c e3       	ldi	r21, 0x3C	; 60
     714:	0e 94 6a 07 	call	0xed4	; 0xed4 <__mulsf3>
     718:	20 e0       	ldi	r18, 0x00	; 0
     71a:	30 e4       	ldi	r19, 0x40	; 64
     71c:	4c e1       	ldi	r20, 0x1C	; 28
     71e:	54 e4       	ldi	r21, 0x44	; 68
     720:	0e 94 6a 07 	call	0xed4	; 0xed4 <__mulsf3>
     724:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__fixunssfsi>
     728:	6c af       	std	Y+60, r22	; 0x3c
     72a:	7d af       	std	Y+61, r23	; 0x3d
     72c:	89 81       	ldd	r24, Y+1	; 0x01
     72e:	8f 7b       	andi	r24, 0xBF	; 191
     730:	89 83       	std	Y+1, r24	; 0x01
     732:	e0 e0       	ldi	r30, 0x00	; 0
     734:	f1 e1       	ldi	r31, 0x11	; 17
     736:	81 a1       	ldd	r24, Z+33	; 0x21
     738:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <sigrow_offset>
     73c:	80 a1       	ldd	r24, Z+32	; 0x20
     73e:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <sigrow_gain>
     742:	e0 ea       	ldi	r30, 0xA0	; 160
     744:	f0 e0       	ldi	r31, 0x00	; 0
     746:	80 81       	ld	r24, Z
     748:	80 61       	ori	r24, 0x10	; 16
     74a:	80 83       	st	Z, r24
     74c:	81 81       	ldd	r24, Z+1	; 0x01
     74e:	82 60       	ori	r24, 0x02	; 2
     750:	81 83       	std	Z+1, r24	; 0x01
     752:	e0 e0       	ldi	r30, 0x00	; 0
     754:	f6 e0       	ldi	r31, 0x06	; 6
     756:	82 81       	ldd	r24, Z+2	; 0x02
     758:	85 61       	ori	r24, 0x15	; 21
     75a:	82 83       	std	Z+2, r24	; 0x02
     75c:	83 81       	ldd	r24, Z+3	; 0x03
     75e:	83 83       	std	Z+3, r24	; 0x03
     760:	85 e0       	ldi	r24, 0x05	; 5
     762:	85 83       	std	Z+5, r24	; 0x05
     764:	82 81       	ldd	r24, Z+2	; 0x02
     766:	80 64       	ori	r24, 0x40	; 64
     768:	82 83       	std	Z+2, r24	; 0x02
     76a:	80 81       	ld	r24, Z
     76c:	81 60       	ori	r24, 0x01	; 1
     76e:	80 83       	st	Z, r24
     770:	0e 94 78 06 	call	0xcf0	; 0xcf0 <uart_init>
     774:	df 91       	pop	r29
     776:	cf 91       	pop	r28
     778:	08 95       	ret

0000077a <__vector_20>:
    ADC0.INTFLAGS = ADC_RESRDY_bm;
    return 0;
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
     77a:	1f 92       	push	r1
     77c:	0f 92       	push	r0
     77e:	0f b6       	in	r0, 0x3f	; 63
     780:	0f 92       	push	r0
     782:	11 24       	eor	r1, r1
     784:	8f 93       	push	r24
     786:	ef 93       	push	r30
     788:	ff 93       	push	r31
        uart_init();
    #endif
}

int8_t led_toggle() {
    PORTD.OUTTGL = LED;
     78a:	e0 e6       	ldi	r30, 0x60	; 96
     78c:	f4 e0       	ldi	r31, 0x04	; 4
     78e:	88 e0       	ldi	r24, 0x08	; 8
     790:	87 83       	std	Z+7, r24	; 0x07
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
    led_toggle();
    PORTD.INTFLAGS |= PORT_INT4_bm;
     792:	81 85       	ldd	r24, Z+9	; 0x09
     794:	80 61       	ori	r24, 0x10	; 16
     796:	81 87       	std	Z+9, r24	; 0x09
}
     798:	ff 91       	pop	r31
     79a:	ef 91       	pop	r30
     79c:	8f 91       	pop	r24
     79e:	0f 90       	pop	r0
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	0f 90       	pop	r0
     7a4:	1f 90       	pop	r1
     7a6:	18 95       	reti

000007a8 <main>:

/*
    Application
    *************************************************/
int main(void) {
    init();
     7a8:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <init>
    sei();
     7ac:	78 94       	sei
#ifdef TESTING
//     pwm_on();
//     pwm_set_duty_cycle(10);
    while (1) {
/*        pwm_count = TCA0.SINGLE.CNT;*/
        input = uart0_readLine();
     7ae:	0e 94 a4 06 	call	0xd48	; 0xd48 <uart0_readLine>
        cmd_parse(input);
     7b2:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <cmd_parse>
     7b6:	fb cf       	rjmp	.-10     	; 0x7ae <main+0x6>

000007b8 <cmd_exec>:
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
     7b8:	24 e0       	ldi	r18, 0x04	; 4
     7ba:	82 9f       	mul	r24, r18
     7bc:	c0 01       	movw	r24, r0
     7be:	11 24       	eor	r1, r1
     7c0:	fc 01       	movw	r30, r24
     7c2:	eb 55       	subi	r30, 0x5B	; 91
     7c4:	f7 4d       	sbci	r31, 0xD7	; 215
     7c6:	02 80       	ldd	r0, Z+2	; 0x02
     7c8:	f3 81       	ldd	r31, Z+3	; 0x03
     7ca:	e0 2d       	mov	r30, r0
     7cc:	30 97       	sbiw	r30, 0x00	; 0
     7ce:	11 f0       	breq	.+4      	; 0x7d4 <cmd_exec+0x1c>
        retval = cmd_table[index].cmd_func_ptr();
     7d0:	09 95       	icall
     7d2:	08 95       	ret
                int8_t cmd_func();
                Excepted are system commands, which are used to deal with parameter get/set operations and status reports.
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
     7d4:	8e ef       	ldi	r24, 0xFE	; 254
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}
     7d6:	08 95       	ret

000007d8 <param_get>:
        return retval;
    }
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
     7d8:	af 92       	push	r10
     7da:	bf 92       	push	r11
     7dc:	cf 92       	push	r12
     7de:	df 92       	push	r13
     7e0:	ef 92       	push	r14
     7e2:	ff 92       	push	r15
     7e4:	0f 93       	push	r16
     7e6:	1f 93       	push	r17
     7e8:	cf 93       	push	r28
     7ea:	df 93       	push	r29
     7ec:	5c 01       	movw	r10, r24
     7ee:	8b 01       	movw	r16, r22
     7f0:	0f 2e       	mov	r0, r31
     7f2:	f0 e0       	ldi	r31, 0x00	; 0
     7f4:	cf 2e       	mov	r12, r31
     7f6:	f8 e2       	ldi	r31, 0x28	; 40
     7f8:	df 2e       	mov	r13, r31
     7fa:	f0 2d       	mov	r31, r0
     7fc:	e1 2c       	mov	r14, r1
     7fe:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp((const char *)param_string, (const char *)param_table[i].param) == 0) {
     800:	e7 01       	movw	r28, r14
     802:	f6 01       	movw	r30, r12
     804:	60 81       	ld	r22, Z
     806:	71 81       	ldd	r23, Z+1	; 0x01
     808:	c5 01       	movw	r24, r10
     80a:	0e 94 1c 09 	call	0x1238	; 0x1238 <strcmp>
     80e:	89 2b       	or	r24, r25
     810:	09 f0       	breq	.+2      	; 0x814 <param_get+0x3c>
     812:	4a c0       	rjmp	.+148    	; 0x8a8 <param_get+0xd0>
            cli();
     814:	f8 94       	cli
            switch (param_table[i].size) {                      // cast pointer to the correct data type according to param table size info
     816:	f7 01       	movw	r30, r14
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	ee 0f       	add	r30, r30
     81e:	ff 1f       	adc	r31, r31
     820:	ee 0d       	add	r30, r14
     822:	ff 1d       	adc	r31, r15
     824:	e0 50       	subi	r30, 0x00	; 0
     826:	f8 4d       	sbci	r31, 0xD8	; 216
     828:	84 81       	ldd	r24, Z+4	; 0x04
     82a:	80 31       	cpi	r24, 0x10	; 16
     82c:	89 f0       	breq	.+34     	; 0x850 <param_get+0x78>
     82e:	80 32       	cpi	r24, 0x20	; 32
     830:	21 f1       	breq	.+72     	; 0x87a <param_get+0xa2>
     832:	88 30       	cpi	r24, 0x08	; 8
     834:	b1 f5       	brne	.+108    	; 0x8a2 <param_get+0xca>
            case 8:
                *param_value = *(uint8_t *)param_table[i].value;
     836:	02 80       	ldd	r0, Z+2	; 0x02
     838:	f3 81       	ldd	r31, Z+3	; 0x03
     83a:	e0 2d       	mov	r30, r0
     83c:	80 81       	ld	r24, Z
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	a0 e0       	ldi	r26, 0x00	; 0
     842:	b0 e0       	ldi	r27, 0x00	; 0
     844:	f8 01       	movw	r30, r16
     846:	80 83       	st	Z, r24
     848:	91 83       	std	Z+1, r25	; 0x01
     84a:	a2 83       	std	Z+2, r26	; 0x02
     84c:	b3 83       	std	Z+3, r27	; 0x03
            	break;
     84e:	29 c0       	rjmp	.+82     	; 0x8a2 <param_get+0xca>
            case 16:
                *param_value = *(uint16_t *)param_table[i].value;
     850:	c7 01       	movw	r24, r14
     852:	88 0f       	add	r24, r24
     854:	99 1f       	adc	r25, r25
     856:	88 0f       	add	r24, r24
     858:	99 1f       	adc	r25, r25
     85a:	c8 0f       	add	r28, r24
     85c:	d9 1f       	adc	r29, r25
     85e:	c0 50       	subi	r28, 0x00	; 0
     860:	d8 4d       	sbci	r29, 0xD8	; 216
     862:	ea 81       	ldd	r30, Y+2	; 0x02
     864:	fb 81       	ldd	r31, Y+3	; 0x03
     866:	80 81       	ld	r24, Z
     868:	91 81       	ldd	r25, Z+1	; 0x01
     86a:	a0 e0       	ldi	r26, 0x00	; 0
     86c:	b0 e0       	ldi	r27, 0x00	; 0
     86e:	f8 01       	movw	r30, r16
     870:	80 83       	st	Z, r24
     872:	91 83       	std	Z+1, r25	; 0x01
     874:	a2 83       	std	Z+2, r26	; 0x02
     876:	b3 83       	std	Z+3, r27	; 0x03
                break;
     878:	14 c0       	rjmp	.+40     	; 0x8a2 <param_get+0xca>
            case 32:
                *param_value = *(uint32_t *)param_table[i].value;
     87a:	c7 01       	movw	r24, r14
     87c:	88 0f       	add	r24, r24
     87e:	99 1f       	adc	r25, r25
     880:	88 0f       	add	r24, r24
     882:	99 1f       	adc	r25, r25
     884:	c8 0f       	add	r28, r24
     886:	d9 1f       	adc	r29, r25
     888:	c0 50       	subi	r28, 0x00	; 0
     88a:	d8 4d       	sbci	r29, 0xD8	; 216
     88c:	ea 81       	ldd	r30, Y+2	; 0x02
     88e:	fb 81       	ldd	r31, Y+3	; 0x03
     890:	80 81       	ld	r24, Z
     892:	91 81       	ldd	r25, Z+1	; 0x01
     894:	a2 81       	ldd	r26, Z+2	; 0x02
     896:	b3 81       	ldd	r27, Z+3	; 0x03
     898:	f8 01       	movw	r30, r16
     89a:	80 83       	st	Z, r24
     89c:	91 83       	std	Z+1, r25	; 0x01
     89e:	a2 83       	std	Z+2, r26	; 0x02
     8a0:	b3 83       	std	Z+3, r27	; 0x03
                break;               
            }
            sei();
     8a2:	78 94       	sei
            i = NO_PARAM;                                   // exit loop
            retval = 0;
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	0c c0       	rjmp	.+24     	; 0x8c0 <param_get+0xe8>
     8a8:	ff ef       	ldi	r31, 0xFF	; 255
     8aa:	ef 1a       	sub	r14, r31
     8ac:	ff 0a       	sbc	r15, r31
     8ae:	85 e0       	ldi	r24, 0x05	; 5
     8b0:	c8 0e       	add	r12, r24
     8b2:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     8b4:	e1 e2       	ldi	r30, 0x21	; 33
     8b6:	ee 16       	cp	r14, r30
     8b8:	f1 04       	cpc	r15, r1
     8ba:	09 f0       	breq	.+2      	; 0x8be <param_get+0xe6>
     8bc:	a1 cf       	rjmp	.-190    	; 0x800 <param_get+0x28>
     8be:	8c ef       	ldi	r24, 0xFC	; 252
            i = NO_PARAM;                                   // exit loop
            retval = 0;
        }
    }
    return retval;
}
     8c0:	df 91       	pop	r29
     8c2:	cf 91       	pop	r28
     8c4:	1f 91       	pop	r17
     8c6:	0f 91       	pop	r16
     8c8:	ff 90       	pop	r15
     8ca:	ef 90       	pop	r14
     8cc:	df 90       	pop	r13
     8ce:	cf 90       	pop	r12
     8d0:	bf 90       	pop	r11
     8d2:	af 90       	pop	r10
     8d4:	08 95       	ret

000008d6 <param_set>:

int8_t param_set(char *param_string, void *param_new_val_ptr) {
     8d6:	af 92       	push	r10
     8d8:	bf 92       	push	r11
     8da:	cf 92       	push	r12
     8dc:	df 92       	push	r13
     8de:	ef 92       	push	r14
     8e0:	ff 92       	push	r15
     8e2:	0f 93       	push	r16
     8e4:	1f 93       	push	r17
     8e6:	cf 93       	push	r28
     8e8:	df 93       	push	r29
     8ea:	5c 01       	movw	r10, r24
     8ec:	8b 01       	movw	r16, r22
     8ee:	0f 2e       	mov	r0, r31
     8f0:	f0 e0       	ldi	r31, 0x00	; 0
     8f2:	cf 2e       	mov	r12, r31
     8f4:	f8 e2       	ldi	r31, 0x28	; 40
     8f6:	df 2e       	mov	r13, r31
     8f8:	f0 2d       	mov	r31, r0
     8fa:	e1 2c       	mov	r14, r1
     8fc:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp(param_string, param_table[i].param) == 0) {
     8fe:	e7 01       	movw	r28, r14
     900:	d6 01       	movw	r26, r12
     902:	6d 91       	ld	r22, X+
     904:	7c 91       	ld	r23, X
     906:	c5 01       	movw	r24, r10
     908:	0e 94 1c 09 	call	0x1238	; 0x1238 <strcmp>
     90c:	89 2b       	or	r24, r25
     90e:	09 f0       	breq	.+2      	; 0x912 <param_set+0x3c>
     910:	44 c0       	rjmp	.+136    	; 0x99a <param_set+0xc4>
            cli();
     912:	f8 94       	cli
            switch (param_table[i].size) {                                           // cast pointer to the correct data type according to param table size info
     914:	f7 01       	movw	r30, r14
     916:	ee 0f       	add	r30, r30
     918:	ff 1f       	adc	r31, r31
     91a:	ee 0f       	add	r30, r30
     91c:	ff 1f       	adc	r31, r31
     91e:	ee 0d       	add	r30, r14
     920:	ff 1d       	adc	r31, r15
     922:	e0 50       	subi	r30, 0x00	; 0
     924:	f8 4d       	sbci	r31, 0xD8	; 216
     926:	84 81       	ldd	r24, Z+4	; 0x04
     928:	80 31       	cpi	r24, 0x10	; 16
     92a:	61 f0       	breq	.+24     	; 0x944 <param_set+0x6e>
     92c:	80 32       	cpi	r24, 0x20	; 32
     92e:	e1 f0       	breq	.+56     	; 0x968 <param_set+0x92>
     930:	88 30       	cpi	r24, 0x08	; 8
     932:	81 f5       	brne	.+96     	; 0x994 <param_set+0xbe>
            case 8:
                *(uint8_t *)param_table[i].value = *(uint8_t *)param_new_val_ptr;
     934:	02 80       	ldd	r0, Z+2	; 0x02
     936:	f3 81       	ldd	r31, Z+3	; 0x03
     938:	e0 2d       	mov	r30, r0
     93a:	e8 01       	movw	r28, r16
     93c:	88 81       	ld	r24, Y
     93e:	80 83       	st	Z, r24
                retval = 0;
     940:	80 e0       	ldi	r24, 0x00	; 0
            	break;
     942:	29 c0       	rjmp	.+82     	; 0x996 <param_set+0xc0>
            case 16:
                *(uint16_t *)param_table[i].value = *(uint16_t *)param_new_val_ptr;
     944:	c7 01       	movw	r24, r14
     946:	88 0f       	add	r24, r24
     948:	99 1f       	adc	r25, r25
     94a:	88 0f       	add	r24, r24
     94c:	99 1f       	adc	r25, r25
     94e:	c8 0f       	add	r28, r24
     950:	d9 1f       	adc	r29, r25
     952:	c0 50       	subi	r28, 0x00	; 0
     954:	d8 4d       	sbci	r29, 0xD8	; 216
     956:	ea 81       	ldd	r30, Y+2	; 0x02
     958:	fb 81       	ldd	r31, Y+3	; 0x03
     95a:	d8 01       	movw	r26, r16
     95c:	8d 91       	ld	r24, X+
     95e:	9c 91       	ld	r25, X
     960:	80 83       	st	Z, r24
     962:	91 83       	std	Z+1, r25	; 0x01
                retval = 0;
     964:	80 e0       	ldi	r24, 0x00	; 0
                break;
     966:	17 c0       	rjmp	.+46     	; 0x996 <param_set+0xc0>
            case 32:
                *(uint32_t *)param_table[i].value = *(uint32_t *)param_new_val_ptr;
     968:	c7 01       	movw	r24, r14
     96a:	88 0f       	add	r24, r24
     96c:	99 1f       	adc	r25, r25
     96e:	88 0f       	add	r24, r24
     970:	99 1f       	adc	r25, r25
     972:	c8 0f       	add	r28, r24
     974:	d9 1f       	adc	r29, r25
     976:	c0 50       	subi	r28, 0x00	; 0
     978:	d8 4d       	sbci	r29, 0xD8	; 216
     97a:	ea 81       	ldd	r30, Y+2	; 0x02
     97c:	fb 81       	ldd	r31, Y+3	; 0x03
     97e:	e8 01       	movw	r28, r16
     980:	88 81       	ld	r24, Y
     982:	99 81       	ldd	r25, Y+1	; 0x01
     984:	aa 81       	ldd	r26, Y+2	; 0x02
     986:	bb 81       	ldd	r27, Y+3	; 0x03
     988:	80 83       	st	Z, r24
     98a:	91 83       	std	Z+1, r25	; 0x01
     98c:	a2 83       	std	Z+2, r26	; 0x02
     98e:	b3 83       	std	Z+3, r27	; 0x03
                retval = 0;
     990:	80 e0       	ldi	r24, 0x00	; 0
                break; 
     992:	01 c0       	rjmp	.+2      	; 0x996 <param_set+0xc0>
            default:
                retval = -3;                                                // default return value -3 -> invalid value size               
     994:	8d ef       	ldi	r24, 0xFD	; 253
            }
            sei();
     996:	78 94       	sei
     998:	0c c0       	rjmp	.+24     	; 0x9b2 <param_set+0xdc>
     99a:	df ef       	ldi	r29, 0xFF	; 255
     99c:	ed 1a       	sub	r14, r29
     99e:	fd 0a       	sbc	r15, r29
     9a0:	e5 e0       	ldi	r30, 0x05	; 5
     9a2:	ce 0e       	add	r12, r30
     9a4:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_set(char *param_string, void *param_new_val_ptr) {
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     9a6:	f1 e2       	ldi	r31, 0x21	; 33
     9a8:	ef 16       	cp	r14, r31
     9aa:	f1 04       	cpc	r15, r1
     9ac:	09 f0       	breq	.+2      	; 0x9b0 <param_set+0xda>
     9ae:	a7 cf       	rjmp	.-178    	; 0x8fe <param_set+0x28>
     9b0:	8c ef       	ldi	r24, 0xFC	; 252
            sei();
            i = NO_PARAM;                                               // exit loop
        }
    }
    return retval;
}
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	ff 90       	pop	r15
     9bc:	ef 90       	pop	r14
     9be:	df 90       	pop	r13
     9c0:	cf 90       	pop	r12
     9c2:	bf 90       	pop	r11
     9c4:	af 90       	pop	r10
     9c6:	08 95       	ret

000009c8 <cmd_parse>:
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     9c8:	cf 92       	push	r12
     9ca:	df 92       	push	r13
     9cc:	ff 92       	push	r15
     9ce:	0f 93       	push	r16
     9d0:	1f 93       	push	r17
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	cd b7       	in	r28, 0x3d	; 61
     9d8:	de b7       	in	r29, 0x3e	; 62
     9da:	28 97       	sbiw	r28, 0x08	; 8
     9dc:	cd bf       	out	0x3d, r28	; 61
     9de:	de bf       	out	0x3e, r29	; 62
     9e0:	6c 01       	movw	r12, r24
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
     9e2:	65 e7       	ldi	r22, 0x75	; 117
     9e4:	7b e5       	ldi	r23, 0x5B	; 91
     9e6:	0e 94 1c 09 	call	0x1238	; 0x1238 <strcmp>
     9ea:	89 2b       	or	r24, r25
     9ec:	09 f4       	brne	.+2      	; 0x9f0 <cmd_parse+0x28>
     9ee:	dd c0       	rjmp	.+442    	; 0xbaa <cmd_parse+0x1e2>
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
     9f0:	6f e3       	ldi	r22, 0x3F	; 63
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	c6 01       	movw	r24, r12
     9f6:	0e 94 11 09 	call	0x1222	; 0x1222 <strchr>
     9fa:	89 2b       	or	r24, r25
     9fc:	61 f1       	breq	.+88     	; 0xa56 <cmd_parse+0x8e>
        command = "param_get";                      
        param = strtok(string, "?");
     9fe:	66 e7       	ldi	r22, 0x76	; 118
     a00:	7b e5       	ldi	r23, 0x5B	; 91
     a02:	c6 01       	movw	r24, r12
     a04:	0e 94 0c 09 	call	0x1218	; 0x1218 <strtok>
     a08:	08 2f       	mov	r16, r24
     a0a:	f9 2e       	mov	r15, r25
        is_param_op = 1;
        uint32_t param_val = 0;
     a0c:	19 82       	std	Y+1, r1	; 0x01
     a0e:	1a 82       	std	Y+2, r1	; 0x02
     a10:	1b 82       	std	Y+3, r1	; 0x03
     a12:	1c 82       	std	Y+4, r1	; 0x04
        retval = param_get(param, &param_val);
     a14:	be 01       	movw	r22, r28
     a16:	6f 5f       	subi	r22, 0xFF	; 255
     a18:	7f 4f       	sbci	r23, 0xFF	; 255
     a1a:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <param_get>
     a1e:	18 2f       	mov	r17, r24
        if (retval == 0) {
     a20:	81 11       	cpse	r24, r1
     a22:	12 c0       	rjmp	.+36     	; 0xa48 <cmd_parse+0x80>
            printf("%s = %"PRIu32"\r\n", param, param_val);               
     a24:	8c 81       	ldd	r24, Y+4	; 0x04
     a26:	8f 93       	push	r24
     a28:	8b 81       	ldd	r24, Y+3	; 0x03
     a2a:	8f 93       	push	r24
     a2c:	8a 81       	ldd	r24, Y+2	; 0x02
     a2e:	8f 93       	push	r24
     a30:	89 81       	ldd	r24, Y+1	; 0x01
     a32:	8f 93       	push	r24
     a34:	ff 92       	push	r15
     a36:	0f 93       	push	r16
     a38:	85 e7       	ldi	r24, 0x75	; 117
     a3a:	9c e5       	ldi	r25, 0x5C	; 92
     a3c:	9f 93       	push	r25
     a3e:	8f 93       	push	r24
     a40:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
     a44:	cd bf       	out	0x3d, r28	; 61
     a46:	de bf       	out	0x3e, r29	; 62
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
        command = "param_get";                      
     a48:	0f 2e       	mov	r0, r31
     a4a:	f3 ea       	ldi	r31, 0xA3	; 163
     a4c:	cf 2e       	mov	r12, r31
     a4e:	fa e5       	ldi	r31, 0x5A	; 90
     a50:	df 2e       	mov	r13, r31
     a52:	f0 2d       	mov	r31, r0
     a54:	64 c0       	rjmp	.+200    	; 0xb1e <cmd_parse+0x156>
        if (retval == 0) {
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
     a56:	6d e3       	ldi	r22, 0x3D	; 61
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	c6 01       	movw	r24, r12
     a5c:	0e 94 11 09 	call	0x1222	; 0x1222 <strchr>
     a60:	89 2b       	or	r24, r25
     a62:	09 f4       	brne	.+2      	; 0xa66 <cmd_parse+0x9e>
     a64:	a8 c0       	rjmp	.+336    	; 0xbb6 <cmd_parse+0x1ee>
        command = "param_set";
        is_param_op = 1;
        param = strtok(string, "=");
     a66:	68 e7       	ldi	r22, 0x78	; 120
     a68:	7b e5       	ldi	r23, 0x5B	; 91
     a6a:	c6 01       	movw	r24, r12
     a6c:	0e 94 0c 09 	call	0x1218	; 0x1218 <strtok>
     a70:	08 2f       	mov	r16, r24
     a72:	f9 2e       	mov	r15, r25
        char *str_value = strtok(NULL, "=");
     a74:	68 e7       	ldi	r22, 0x78	; 120
     a76:	7b e5       	ldi	r23, 0x5B	; 91
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	0e 94 0c 09 	call	0x1218	; 0x1218 <strtok>
        uint32_t value = (uint32_t)strtoul(str_value, NULL, 0);
     a80:	40 e0       	ldi	r20, 0x00	; 0
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	60 e0       	ldi	r22, 0x00	; 0
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	0e 94 0e 08 	call	0x101c	; 0x101c <strtoul>
     a8c:	6d 83       	std	Y+5, r22	; 0x05
     a8e:	7e 83       	std	Y+6, r23	; 0x06
     a90:	8f 83       	std	Y+7, r24	; 0x07
     a92:	98 87       	std	Y+8, r25	; 0x08
        retval = param_set(param, &value);
     a94:	be 01       	movw	r22, r28
     a96:	6b 5f       	subi	r22, 0xFB	; 251
     a98:	7f 4f       	sbci	r23, 0xFF	; 255
     a9a:	80 2f       	mov	r24, r16
     a9c:	9f 2d       	mov	r25, r15
     a9e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <param_set>
     aa2:	18 2f       	mov	r17, r24
        if (retval == 0) {
     aa4:	81 11       	cpse	r24, r1
     aa6:	1d c0       	rjmp	.+58     	; 0xae2 <cmd_parse+0x11a>
            uint32_t param_val = 0;
     aa8:	19 82       	std	Y+1, r1	; 0x01
     aaa:	1a 82       	std	Y+2, r1	; 0x02
     aac:	1b 82       	std	Y+3, r1	; 0x03
     aae:	1c 82       	std	Y+4, r1	; 0x04
            param_get(param, &param_val);        
     ab0:	be 01       	movw	r22, r28
     ab2:	6f 5f       	subi	r22, 0xFF	; 255
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	80 2f       	mov	r24, r16
     ab8:	9f 2d       	mov	r25, r15
     aba:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <param_get>
            printf("%s = %"PRIu32"\r\n", param, param_val);
     abe:	8c 81       	ldd	r24, Y+4	; 0x04
     ac0:	8f 93       	push	r24
     ac2:	8b 81       	ldd	r24, Y+3	; 0x03
     ac4:	8f 93       	push	r24
     ac6:	8a 81       	ldd	r24, Y+2	; 0x02
     ac8:	8f 93       	push	r24
     aca:	89 81       	ldd	r24, Y+1	; 0x01
     acc:	8f 93       	push	r24
     ace:	ff 92       	push	r15
     ad0:	0f 93       	push	r16
     ad2:	85 e7       	ldi	r24, 0x75	; 117
     ad4:	9c e5       	ldi	r25, 0x5C	; 92
     ad6:	9f 93       	push	r25
     ad8:	8f 93       	push	r24
     ada:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
     ade:	cd bf       	out	0x3d, r28	; 61
     ae0:	de bf       	out	0x3e, r29	; 62
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
        command = "param_set";
     ae2:	0f 2e       	mov	r0, r31
     ae4:	fd ea       	ldi	r31, 0xAD	; 173
     ae6:	cf 2e       	mov	r12, r31
     ae8:	fa e5       	ldi	r31, 0x5A	; 90
     aea:	df 2e       	mov	r13, r31
     aec:	f0 2d       	mov	r31, r0
     aee:	17 c0       	rjmp	.+46     	; 0xb1e <cmd_parse+0x156>
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
            if (strcmp(command, cmd_table[i].cmd) == 0) {
     af0:	f8 01       	movw	r30, r16
     af2:	60 81       	ld	r22, Z
     af4:	71 81       	ldd	r23, Z+1	; 0x01
     af6:	c6 01       	movw	r24, r12
     af8:	0e 94 1c 09 	call	0x1238	; 0x1238 <strcmp>
     afc:	89 2b       	or	r24, r25
     afe:	39 f4       	brne	.+14     	; 0xb0e <cmd_parse+0x146>
                retval = cmd_exec(i);
     b00:	8f 2d       	mov	r24, r15
     b02:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <cmd_exec>
     b06:	18 2f       	mov	r17, r24
     b08:	00 e0       	ldi	r16, 0x00	; 0
     b0a:	f1 2c       	mov	r15, r1
     b0c:	08 c0       	rjmp	.+16     	; 0xb1e <cmd_parse+0x156>
            param_get(param, &param_val);        
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
     b0e:	f3 94       	inc	r15
     b10:	0c 5f       	subi	r16, 0xFC	; 252
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	f9 e1       	ldi	r31, 0x19	; 25
     b16:	ff 12       	cpse	r15, r31
     b18:	eb cf       	rjmp	.-42     	; 0xaf0 <cmd_parse+0x128>
     b1a:	1f ef       	ldi	r17, 0xFF	; 255
     b1c:	0d c0       	rjmp	.+26     	; 0xb38 <cmd_parse+0x170>
                i = NO_CMD;                             // exit loop
            }
	    } 
    }
    
    switch (retval) {                                   // select appropriate feedback to return
     b1e:	1e 3f       	cpi	r17, 0xFE	; 254
     b20:	c1 f0       	breq	.+48     	; 0xb52 <cmd_parse+0x18a>
     b22:	2c f4       	brge	.+10     	; 0xb2e <cmd_parse+0x166>
     b24:	1c 3f       	cpi	r17, 0xFC	; 252
     b26:	79 f1       	breq	.+94     	; 0xb86 <cmd_parse+0x1be>
     b28:	1d 3f       	cpi	r17, 0xFD	; 253
     b2a:	01 f1       	breq	.+64     	; 0xb6c <cmd_parse+0x1a4>
     b2c:	48 c0       	rjmp	.+144    	; 0xbbe <cmd_parse+0x1f6>
     b2e:	1f 3f       	cpi	r17, 0xFF	; 255
     b30:	19 f0       	breq	.+6      	; 0xb38 <cmd_parse+0x170>
     b32:	11 23       	and	r17, r17
     b34:	a9 f1       	breq	.+106    	; 0xba0 <cmd_parse+0x1d8>
     b36:	43 c0       	rjmp	.+134    	; 0xbbe <cmd_parse+0x1f6>
    case -1:
        printf("FAIL. Command %s not found in command table!\r\n", command);
     b38:	df 92       	push	r13
     b3a:	cf 92       	push	r12
     b3c:	8a e7       	ldi	r24, 0x7A	; 122
     b3e:	9b e5       	ldi	r25, 0x5B	; 91
     b40:	9f 93       	push	r25
     b42:	8f 93       	push	r24
     b44:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
    	return retval;
     b48:	0f 90       	pop	r0
     b4a:	0f 90       	pop	r0
     b4c:	0f 90       	pop	r0
     b4e:	0f 90       	pop	r0
     b50:	36 c0       	rjmp	.+108    	; 0xbbe <cmd_parse+0x1f6>
    case -2:
        printf("FAIL. Failed to execute command %s!\r\n", command);
     b52:	df 92       	push	r13
     b54:	cf 92       	push	r12
     b56:	89 ea       	ldi	r24, 0xA9	; 169
     b58:	9b e5       	ldi	r25, 0x5B	; 91
     b5a:	9f 93       	push	r25
     b5c:	8f 93       	push	r24
     b5e:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
        return retval;
     b62:	0f 90       	pop	r0
     b64:	0f 90       	pop	r0
     b66:	0f 90       	pop	r0
     b68:	0f 90       	pop	r0
     b6a:	29 c0       	rjmp	.+82     	; 0xbbe <cmd_parse+0x1f6>
    case -3:
        printf("FAIL. Invalid options/parameters for command %s!\r\n", command);
     b6c:	df 92       	push	r13
     b6e:	cf 92       	push	r12
     b70:	8f ec       	ldi	r24, 0xCF	; 207
     b72:	9b e5       	ldi	r25, 0x5B	; 91
     b74:	9f 93       	push	r25
     b76:	8f 93       	push	r24
     b78:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
        return retval;
     b7c:	0f 90       	pop	r0
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	1c c0       	rjmp	.+56     	; 0xbbe <cmd_parse+0x1f6>
    case -4:
        printf("FAIL. Parameter %s not found in parameter table!\r\n", param);
     b86:	ff 92       	push	r15
     b88:	0f 93       	push	r16
     b8a:	82 e0       	ldi	r24, 0x02	; 2
     b8c:	9c e5       	ldi	r25, 0x5C	; 92
     b8e:	9f 93       	push	r25
     b90:	8f 93       	push	r24
     b92:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
        return retval;
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	0f 90       	pop	r0
     b9c:	0f 90       	pop	r0
     b9e:	0f c0       	rjmp	.+30     	; 0xbbe <cmd_parse+0x1f6>
    case 0:
        printf("OK.\r\n");
     ba0:	85 e3       	ldi	r24, 0x35	; 53
     ba2:	9c e5       	ldi	r25, 0x5C	; 92
     ba4:	0e 94 62 09 	call	0x12c4	; 0x12c4 <puts>
        return retval;
     ba8:	0a c0       	rjmp	.+20     	; 0xbbe <cmd_parse+0x1f6>
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
     baa:	0f 2e       	mov	r0, r31
     bac:	fc e9       	ldi	r31, 0x9C	; 156
     bae:	cf 2e       	mov	r12, r31
     bb0:	fa e5       	ldi	r31, 0x5A	; 90
     bb2:	df 2e       	mov	r13, r31
     bb4:	f0 2d       	mov	r31, r0
     bb6:	05 ea       	ldi	r16, 0xA5	; 165
     bb8:	18 e2       	ldi	r17, 0x28	; 40
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     bba:	f1 2c       	mov	r15, r1
     bbc:	99 cf       	rjmp	.-206    	; 0xaf0 <cmd_parse+0x128>
    case 0:
        printf("OK.\r\n");
        return retval;
    }
    return retval;
}
     bbe:	81 2f       	mov	r24, r17
     bc0:	28 96       	adiw	r28, 0x08	; 8
     bc2:	cd bf       	out	0x3d, r28	; 61
     bc4:	de bf       	out	0x3e, r29	; 62
     bc6:	df 91       	pop	r29
     bc8:	cf 91       	pop	r28
     bca:	1f 91       	pop	r17
     bcc:	0f 91       	pop	r16
     bce:	ff 90       	pop	r15
     bd0:	df 90       	pop	r13
     bd2:	cf 90       	pop	r12
     bd4:	08 95       	ret

00000bd6 <sys_status>:
        }
    }
    return retval;
}

int8_t sys_status() {
     bd6:	cf 92       	push	r12
     bd8:	df 92       	push	r13
     bda:	ef 92       	push	r14
     bdc:	ff 92       	push	r15
     bde:	0f 93       	push	r16
     be0:	1f 93       	push	r17
     be2:	cf 93       	push	r28
     be4:	df 93       	push	r29
     be6:	00 d0       	rcall	.+0      	; 0xbe8 <sys_status+0x12>
     be8:	00 d0       	rcall	.+0      	; 0xbea <sys_status+0x14>
     bea:	cd b7       	in	r28, 0x3d	; 61
     bec:	de b7       	in	r29, 0x3e	; 62
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
     bee:	8a e3       	ldi	r24, 0x3A	; 58
     bf0:	9c e5       	ldi	r25, 0x5C	; 92
     bf2:	0e 94 62 09 	call	0x12c4	; 0x12c4 <puts>
     bf6:	05 ea       	ldi	r16, 0xA5	; 165
     bf8:	18 e2       	ldi	r17, 0x28	; 40
     bfa:	0f 2e       	mov	r0, r31
     bfc:	f9 e0       	ldi	r31, 0x09	; 9
     bfe:	ef 2e       	mov	r14, r31
     c00:	f9 e2       	ldi	r31, 0x29	; 41
     c02:	ff 2e       	mov	r15, r31
     c04:	f0 2d       	mov	r31, r0
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
     c06:	0f 2e       	mov	r0, r31
     c08:	f1 e5       	ldi	r31, 0x51	; 81
     c0a:	cf 2e       	mov	r12, r31
     c0c:	fc e5       	ldi	r31, 0x5C	; 92
     c0e:	df 2e       	mov	r13, r31
     c10:	f0 2d       	mov	r31, r0
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
     c12:	d8 01       	movw	r26, r16
     c14:	ed 91       	ld	r30, X+
     c16:	fc 91       	ld	r31, X
        if (strcmp(cmd, "\0") != 0) {
     c18:	80 81       	ld	r24, Z
     c1a:	88 23       	and	r24, r24
     c1c:	51 f0       	breq	.+20     	; 0xc32 <sys_status+0x5c>
            printf("$ %s\r\n", cmd);
     c1e:	ff 93       	push	r31
     c20:	ef 93       	push	r30
     c22:	df 92       	push	r13
     c24:	cf 92       	push	r12
     c26:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
     c2a:	0f 90       	pop	r0
     c2c:	0f 90       	pop	r0
     c2e:	0f 90       	pop	r0
     c30:	0f 90       	pop	r0
     c32:	0c 5f       	subi	r16, 0xFC	; 252
     c34:	1f 4f       	sbci	r17, 0xFF	; 255
    return retval;
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
     c36:	0e 15       	cp	r16, r14
     c38:	1f 05       	cpc	r17, r15
     c3a:	59 f7       	brne	.-42     	; 0xc12 <sys_status+0x3c>
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
     c3c:	88 e5       	ldi	r24, 0x58	; 88
     c3e:	9c e5       	ldi	r25, 0x5C	; 92
     c40:	0e 94 62 09 	call	0x12c4	; 0x12c4 <puts>
     c44:	0f 2e       	mov	r0, r31
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	ef 2e       	mov	r14, r31
     c4a:	f8 e2       	ldi	r31, 0x28	; 40
     c4c:	ff 2e       	mov	r15, r31
     c4e:	f0 2d       	mov	r31, r0
     c50:	00 e0       	ldi	r16, 0x00	; 0
     c52:	10 e0       	ldi	r17, 0x00	; 0
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     c54:	0f 2e       	mov	r0, r31
     c56:	ff e6       	ldi	r31, 0x6F	; 111
     c58:	cf 2e       	mov	r12, r31
     c5a:	fc e5       	ldi	r31, 0x5C	; 92
     c5c:	df 2e       	mov	r13, r31
     c5e:	f0 2d       	mov	r31, r0
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
     c60:	19 82       	std	Y+1, r1	; 0x01
     c62:	1a 82       	std	Y+2, r1	; 0x02
     c64:	1b 82       	std	Y+3, r1	; 0x03
     c66:	1c 82       	std	Y+4, r1	; 0x04
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
     c68:	d7 01       	movw	r26, r14
     c6a:	ed 91       	ld	r30, X+
     c6c:	fc 91       	ld	r31, X
     c6e:	80 81       	ld	r24, Z
     c70:	88 23       	and	r24, r24
     c72:	d9 f0       	breq	.+54     	; 0xcaa <sys_status+0xd4>
            param_get(param_table[i].param, &param_value);
     c74:	be 01       	movw	r22, r28
     c76:	6f 5f       	subi	r22, 0xFF	; 255
     c78:	7f 4f       	sbci	r23, 0xFF	; 255
     c7a:	cf 01       	movw	r24, r30
     c7c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <param_get>
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     c80:	8c 81       	ldd	r24, Y+4	; 0x04
     c82:	8f 93       	push	r24
     c84:	8b 81       	ldd	r24, Y+3	; 0x03
     c86:	8f 93       	push	r24
     c88:	8a 81       	ldd	r24, Y+2	; 0x02
     c8a:	8f 93       	push	r24
     c8c:	89 81       	ldd	r24, Y+1	; 0x01
     c8e:	8f 93       	push	r24
     c90:	f7 01       	movw	r30, r14
     c92:	81 81       	ldd	r24, Z+1	; 0x01
     c94:	8f 93       	push	r24
     c96:	80 81       	ld	r24, Z
     c98:	8f 93       	push	r24
     c9a:	1f 93       	push	r17
     c9c:	0f 93       	push	r16
     c9e:	df 92       	push	r13
     ca0:	cf 92       	push	r12
     ca2:	0e 94 4c 09 	call	0x1298	; 0x1298 <printf>
     ca6:	cd bf       	out	0x3d, r28	; 61
     ca8:	de bf       	out	0x3e, r29	; 62
     caa:	0f 5f       	subi	r16, 0xFF	; 255
     cac:	1f 4f       	sbci	r17, 0xFF	; 255
     cae:	95 e0       	ldi	r25, 0x05	; 5
     cb0:	e9 0e       	add	r14, r25
     cb2:	f1 1c       	adc	r15, r1
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     cb4:	01 32       	cpi	r16, 0x21	; 33
     cb6:	11 05       	cpc	r17, r1
     cb8:	99 f6       	brne	.-90     	; 0xc60 <sys_status+0x8a>
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
        }

    }
    printf("$ Status message end #\r\n");
     cba:	80 e8       	ldi	r24, 0x80	; 128
     cbc:	9c e5       	ldi	r25, 0x5C	; 92
     cbe:	0e 94 62 09 	call	0x12c4	; 0x12c4 <puts>
    return 0;
     cc2:	80 e0       	ldi	r24, 0x00	; 0
     cc4:	24 96       	adiw	r28, 0x04	; 4
     cc6:	cd bf       	out	0x3d, r28	; 61
     cc8:	de bf       	out	0x3e, r29	; 62
     cca:	df 91       	pop	r29
     ccc:	cf 91       	pop	r28
     cce:	1f 91       	pop	r17
     cd0:	0f 91       	pop	r16
     cd2:	ff 90       	pop	r15
     cd4:	ef 90       	pop	r14
     cd6:	df 90       	pop	r13
     cd8:	cf 90       	pop	r12
     cda:	08 95       	ret

00000cdc <uart0_printChar>:
    USART1.TXDATAL = c;
    while (!(USART1.STATUS & USART_DREIF_bm)) {     // Check for completed transmission
        ;
    }
    /* Return to receiver mode */
    PORTC.OUTCLR = PIN3_bm;
     cdc:	e0 e0       	ldi	r30, 0x00	; 0
     cde:	f8 e0       	ldi	r31, 0x08	; 8
     ce0:	94 81       	ldd	r25, Z+4	; 0x04
     ce2:	95 ff       	sbrs	r25, 5
     ce4:	fd cf       	rjmp	.-6      	; 0xce0 <uart0_printChar+0x4>
     ce6:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f4802>
     cea:	80 e0       	ldi	r24, 0x00	; 0
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	08 95       	ret

00000cf0 <uart_init>:
    Function definitions
    *************************************************/
void uart_init() {
    /* Setup stream for printf() */  
    #if USART_SEL == 0
        stdout = &uart0_stream;
     cf0:	84 e1       	ldi	r24, 0x14	; 20
     cf2:	99 e2       	ldi	r25, 0x29	; 41
     cf4:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <__iob+0x2>
     cf8:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <__iob+0x3>
        stdout = &uart1_stream;
    #endif
    
    /* USART0 Config (Main comms and debug interface) */
    /* Baud rate */
    USART0.BAUD = (uint16_t)USART_BAUD_RATE(BAUD0);
     cfc:	e0 e0       	ldi	r30, 0x00	; 0
     cfe:	f8 e0       	ldi	r31, 0x08	; 8
     d00:	8b e5       	ldi	r24, 0x5B	; 91
     d02:	91 e0       	ldi	r25, 0x01	; 1
     d04:	80 87       	std	Z+8, r24	; 0x08
     d06:	91 87       	std	Z+9, r25	; 0x09
    /* Enable interrupts */
    USART0.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm);
     d08:	85 81       	ldd	r24, Z+5	; 0x05
     d0a:	80 6e       	ori	r24, 0xE0	; 224
     d0c:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */
    USART0.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);
     d0e:	86 81       	ldd	r24, Z+6	; 0x06
     d10:	80 6c       	ori	r24, 0xC0	; 192
     d12:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PA0) to output, RX(PA1) to input */
    PORTA.DIRSET = PIN0_bm;
     d14:	e0 e0       	ldi	r30, 0x00	; 0
     d16:	f4 e0       	ldi	r31, 0x04	; 4
     d18:	21 e0       	ldi	r18, 0x01	; 1
     d1a:	21 83       	std	Z+1, r18	; 0x01
    PORTA.DIRCLR = PIN1_bm;
     d1c:	92 e0       	ldi	r25, 0x02	; 2
     d1e:	92 83       	std	Z+2, r25	; 0x02
                                               

    
    /* USART1 Config (RS485 interface) */
    /* Baud rate */
    USART1.BAUD = (uint16_t)USART_BAUD_RATE(BAUD1);
     d20:	e0 e2       	ldi	r30, 0x20	; 32
     d22:	f8 e0       	ldi	r31, 0x08	; 8
     d24:	47 e4       	ldi	r20, 0x47	; 71
     d26:	50 e1       	ldi	r21, 0x10	; 16
     d28:	40 87       	std	Z+8, r20	; 0x08
     d2a:	51 87       	std	Z+9, r21	; 0x09
    /* Enable interrupts */
    USART1.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm | USART_RS485_EXT_gc); 
     d2c:	85 81       	ldd	r24, Z+5	; 0x05
     d2e:	81 6e       	ori	r24, 0xE1	; 225
     d30:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */    
    USART1.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);   
     d32:	86 81       	ldd	r24, Z+6	; 0x06
     d34:	80 6c       	ori	r24, 0xC0	; 192
     d36:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PC0) and XDIR(PC3) to output, RX(PC1) to input. XDIR low ->  Receiver mode */                     
    PORTC.DIRSET = PIN0_bm;                                              
     d38:	e0 e4       	ldi	r30, 0x40	; 64
     d3a:	f4 e0       	ldi	r31, 0x04	; 4
     d3c:	21 83       	std	Z+1, r18	; 0x01
    PORTC.DIRCLR = PIN1_bm;                                                
     d3e:	92 83       	std	Z+2, r25	; 0x02
    PORTC.DIRSET = PIN3_bm;                                                
     d40:	88 e0       	ldi	r24, 0x08	; 8
     d42:	81 83       	std	Z+1, r24	; 0x01
    PORTC.OUTCLR = PIN3_bm;
     d44:	86 83       	std	Z+6, r24	; 0x06
     d46:	08 95       	ret

00000d48 <uart0_readLine>:
    }
    return USART0.RXDATAL;
}

char * uart0_readLine() {                             // Read a single line from uart0 RX
    uint8_t index = 0;
     d48:	a0 e0       	ldi	r26, 0x00	; 0
    uart0_sendChar(c);
    return 0;
}

static uint8_t uart0_readChar() {
    while (!(USART0.STATUS & USART_RXCIF_bm)) {
     d4a:	e0 e0       	ldi	r30, 0x00	; 0
     d4c:	f8 e0       	ldi	r31, 0x08	; 8
     d4e:	84 81       	ldd	r24, Z+4	; 0x04
     d50:	88 23       	and	r24, r24
     d52:	ec f7       	brge	.-6      	; 0xd4e <uart0_readLine+0x6>
        ;
    }
    return USART0.RXDATAL;
     d54:	80 81       	ld	r24, Z
    uint8_t index = 0;
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
     d56:	8a 30       	cpi	r24, 0x0A	; 10
     d58:	09 f1       	breq	.+66     	; 0xd9c <uart0_readLine+0x54>
     d5a:	8d 30       	cpi	r24, 0x0D	; 13
     d5c:	c1 f3       	breq	.-16     	; 0xd4e <uart0_readLine+0x6>
            buffer[index++] = c;
     d5e:	91 e0       	ldi	r25, 0x01	; 1
     d60:	9a 0f       	add	r25, r26
     d62:	b0 e0       	ldi	r27, 0x00	; 0
     d64:	a4 5b       	subi	r26, 0xB4	; 180
     d66:	b6 4d       	sbci	r27, 0xD6	; 214
     d68:	8c 93       	st	X, r24
            if (index > MAX_LINE_LEN) {
     d6a:	9d 33       	cpi	r25, 0x3D	; 61
     d6c:	a8 f0       	brcs	.+42     	; 0xd98 <uart0_readLine+0x50>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
     d6e:	1f 92       	push	r1
     d70:	8c e3       	ldi	r24, 0x3C	; 60
     d72:	8f 93       	push	r24
     d74:	28 e9       	ldi	r18, 0x98	; 152
     d76:	3c e5       	ldi	r19, 0x5C	; 92
     d78:	3f 93       	push	r19
     d7a:	2f 93       	push	r18
     d7c:	1f 92       	push	r1
     d7e:	8f 93       	push	r24
     d80:	8c e4       	ldi	r24, 0x4C	; 76
     d82:	99 e2       	ldi	r25, 0x29	; 41
     d84:	9f 93       	push	r25
     d86:	8f 93       	push	r24
     d88:	0e 94 92 09 	call	0x1324	; 0x1324 <snprintf>
                return buffer;
     d8c:	8d b7       	in	r24, 0x3d	; 61
     d8e:	9e b7       	in	r25, 0x3e	; 62
     d90:	08 96       	adiw	r24, 0x08	; 8
     d92:	8d bf       	out	0x3d, r24	; 61
     d94:	9e bf       	out	0x3e, r25	; 62
     d96:	06 c0       	rjmp	.+12     	; 0xda4 <uart0_readLine+0x5c>
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
            buffer[index++] = c;
     d98:	a9 2f       	mov	r26, r25
     d9a:	d9 cf       	rjmp	.-78     	; 0xd4e <uart0_readLine+0x6>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
                return buffer;
            }
        }        
        if (c == '\n') {
            buffer[index] = '\0';
     d9c:	b0 e0       	ldi	r27, 0x00	; 0
     d9e:	a4 5b       	subi	r26, 0xB4	; 180
     da0:	b6 4d       	sbci	r27, 0xD6	; 214
     da2:	1c 92       	st	X, r1
            index = 0;
            return buffer;
        }
    }
}     
     da4:	8c e4       	ldi	r24, 0x4C	; 76
     da6:	99 e2       	ldi	r25, 0x29	; 41
     da8:	08 95       	ret

00000daa <__fixunssfsi>:
     daa:	0e 94 49 07 	call	0xe92	; 0xe92 <__fp_splitA>
     dae:	88 f0       	brcs	.+34     	; 0xdd2 <__fixunssfsi+0x28>
     db0:	9f 57       	subi	r25, 0x7F	; 127
     db2:	98 f0       	brcs	.+38     	; 0xdda <__fixunssfsi+0x30>
     db4:	b9 2f       	mov	r27, r25
     db6:	99 27       	eor	r25, r25
     db8:	b7 51       	subi	r27, 0x17	; 23
     dba:	b0 f0       	brcs	.+44     	; 0xde8 <__fixunssfsi+0x3e>
     dbc:	e1 f0       	breq	.+56     	; 0xdf6 <__fixunssfsi+0x4c>
     dbe:	66 0f       	add	r22, r22
     dc0:	77 1f       	adc	r23, r23
     dc2:	88 1f       	adc	r24, r24
     dc4:	99 1f       	adc	r25, r25
     dc6:	1a f0       	brmi	.+6      	; 0xdce <__fixunssfsi+0x24>
     dc8:	ba 95       	dec	r27
     dca:	c9 f7       	brne	.-14     	; 0xdbe <__fixunssfsi+0x14>
     dcc:	14 c0       	rjmp	.+40     	; 0xdf6 <__fixunssfsi+0x4c>
     dce:	b1 30       	cpi	r27, 0x01	; 1
     dd0:	91 f0       	breq	.+36     	; 0xdf6 <__fixunssfsi+0x4c>
     dd2:	0e 94 63 07 	call	0xec6	; 0xec6 <__fp_zero>
     dd6:	b1 e0       	ldi	r27, 0x01	; 1
     dd8:	08 95       	ret
     dda:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_zero>
     dde:	67 2f       	mov	r22, r23
     de0:	78 2f       	mov	r23, r24
     de2:	88 27       	eor	r24, r24
     de4:	b8 5f       	subi	r27, 0xF8	; 248
     de6:	39 f0       	breq	.+14     	; 0xdf6 <__fixunssfsi+0x4c>
     de8:	b9 3f       	cpi	r27, 0xF9	; 249
     dea:	cc f3       	brlt	.-14     	; 0xdde <__fixunssfsi+0x34>
     dec:	86 95       	lsr	r24
     dee:	77 95       	ror	r23
     df0:	67 95       	ror	r22
     df2:	b3 95       	inc	r27
     df4:	d9 f7       	brne	.-10     	; 0xdec <__fixunssfsi+0x42>
     df6:	3e f4       	brtc	.+14     	; 0xe06 <__fixunssfsi+0x5c>
     df8:	90 95       	com	r25
     dfa:	80 95       	com	r24
     dfc:	70 95       	com	r23
     dfe:	61 95       	neg	r22
     e00:	7f 4f       	sbci	r23, 0xFF	; 255
     e02:	8f 4f       	sbci	r24, 0xFF	; 255
     e04:	9f 4f       	sbci	r25, 0xFF	; 255
     e06:	08 95       	ret

00000e08 <__floatunsisf>:
     e08:	e8 94       	clt
     e0a:	09 c0       	rjmp	.+18     	; 0xe1e <__floatsisf+0x12>

00000e0c <__floatsisf>:
     e0c:	97 fb       	bst	r25, 7
     e0e:	3e f4       	brtc	.+14     	; 0xe1e <__floatsisf+0x12>
     e10:	90 95       	com	r25
     e12:	80 95       	com	r24
     e14:	70 95       	com	r23
     e16:	61 95       	neg	r22
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	8f 4f       	sbci	r24, 0xFF	; 255
     e1c:	9f 4f       	sbci	r25, 0xFF	; 255
     e1e:	99 23       	and	r25, r25
     e20:	a9 f0       	breq	.+42     	; 0xe4c <__floatsisf+0x40>
     e22:	f9 2f       	mov	r31, r25
     e24:	96 e9       	ldi	r25, 0x96	; 150
     e26:	bb 27       	eor	r27, r27
     e28:	93 95       	inc	r25
     e2a:	f6 95       	lsr	r31
     e2c:	87 95       	ror	r24
     e2e:	77 95       	ror	r23
     e30:	67 95       	ror	r22
     e32:	b7 95       	ror	r27
     e34:	f1 11       	cpse	r31, r1
     e36:	f8 cf       	rjmp	.-16     	; 0xe28 <__floatsisf+0x1c>
     e38:	fa f4       	brpl	.+62     	; 0xe78 <__floatsisf+0x6c>
     e3a:	bb 0f       	add	r27, r27
     e3c:	11 f4       	brne	.+4      	; 0xe42 <__floatsisf+0x36>
     e3e:	60 ff       	sbrs	r22, 0
     e40:	1b c0       	rjmp	.+54     	; 0xe78 <__floatsisf+0x6c>
     e42:	6f 5f       	subi	r22, 0xFF	; 255
     e44:	7f 4f       	sbci	r23, 0xFF	; 255
     e46:	8f 4f       	sbci	r24, 0xFF	; 255
     e48:	9f 4f       	sbci	r25, 0xFF	; 255
     e4a:	16 c0       	rjmp	.+44     	; 0xe78 <__floatsisf+0x6c>
     e4c:	88 23       	and	r24, r24
     e4e:	11 f0       	breq	.+4      	; 0xe54 <__floatsisf+0x48>
     e50:	96 e9       	ldi	r25, 0x96	; 150
     e52:	11 c0       	rjmp	.+34     	; 0xe76 <__floatsisf+0x6a>
     e54:	77 23       	and	r23, r23
     e56:	21 f0       	breq	.+8      	; 0xe60 <__floatsisf+0x54>
     e58:	9e e8       	ldi	r25, 0x8E	; 142
     e5a:	87 2f       	mov	r24, r23
     e5c:	76 2f       	mov	r23, r22
     e5e:	05 c0       	rjmp	.+10     	; 0xe6a <__floatsisf+0x5e>
     e60:	66 23       	and	r22, r22
     e62:	71 f0       	breq	.+28     	; 0xe80 <__floatsisf+0x74>
     e64:	96 e8       	ldi	r25, 0x86	; 134
     e66:	86 2f       	mov	r24, r22
     e68:	70 e0       	ldi	r23, 0x00	; 0
     e6a:	60 e0       	ldi	r22, 0x00	; 0
     e6c:	2a f0       	brmi	.+10     	; 0xe78 <__floatsisf+0x6c>
     e6e:	9a 95       	dec	r25
     e70:	66 0f       	add	r22, r22
     e72:	77 1f       	adc	r23, r23
     e74:	88 1f       	adc	r24, r24
     e76:	da f7       	brpl	.-10     	; 0xe6e <__floatsisf+0x62>
     e78:	88 0f       	add	r24, r24
     e7a:	96 95       	lsr	r25
     e7c:	87 95       	ror	r24
     e7e:	97 f9       	bld	r25, 7
     e80:	08 95       	ret

00000e82 <__fp_split3>:
     e82:	57 fd       	sbrc	r21, 7
     e84:	90 58       	subi	r25, 0x80	; 128
     e86:	44 0f       	add	r20, r20
     e88:	55 1f       	adc	r21, r21
     e8a:	59 f0       	breq	.+22     	; 0xea2 <__fp_splitA+0x10>
     e8c:	5f 3f       	cpi	r21, 0xFF	; 255
     e8e:	71 f0       	breq	.+28     	; 0xeac <__fp_splitA+0x1a>
     e90:	47 95       	ror	r20

00000e92 <__fp_splitA>:
     e92:	88 0f       	add	r24, r24
     e94:	97 fb       	bst	r25, 7
     e96:	99 1f       	adc	r25, r25
     e98:	61 f0       	breq	.+24     	; 0xeb2 <__fp_splitA+0x20>
     e9a:	9f 3f       	cpi	r25, 0xFF	; 255
     e9c:	79 f0       	breq	.+30     	; 0xebc <__fp_splitA+0x2a>
     e9e:	87 95       	ror	r24
     ea0:	08 95       	ret
     ea2:	12 16       	cp	r1, r18
     ea4:	13 06       	cpc	r1, r19
     ea6:	14 06       	cpc	r1, r20
     ea8:	55 1f       	adc	r21, r21
     eaa:	f2 cf       	rjmp	.-28     	; 0xe90 <__fp_split3+0xe>
     eac:	46 95       	lsr	r20
     eae:	f1 df       	rcall	.-30     	; 0xe92 <__fp_splitA>
     eb0:	08 c0       	rjmp	.+16     	; 0xec2 <__fp_splitA+0x30>
     eb2:	16 16       	cp	r1, r22
     eb4:	17 06       	cpc	r1, r23
     eb6:	18 06       	cpc	r1, r24
     eb8:	99 1f       	adc	r25, r25
     eba:	f1 cf       	rjmp	.-30     	; 0xe9e <__fp_splitA+0xc>
     ebc:	86 95       	lsr	r24
     ebe:	71 05       	cpc	r23, r1
     ec0:	61 05       	cpc	r22, r1
     ec2:	08 94       	sec
     ec4:	08 95       	ret

00000ec6 <__fp_zero>:
     ec6:	e8 94       	clt

00000ec8 <__fp_szero>:
     ec8:	bb 27       	eor	r27, r27
     eca:	66 27       	eor	r22, r22
     ecc:	77 27       	eor	r23, r23
     ece:	cb 01       	movw	r24, r22
     ed0:	97 f9       	bld	r25, 7
     ed2:	08 95       	ret

00000ed4 <__mulsf3>:
     ed4:	0e 94 7d 07 	call	0xefa	; 0xefa <__mulsf3x>
     ed8:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_round>
     edc:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fp_pscA>
     ee0:	38 f0       	brcs	.+14     	; 0xef0 <__mulsf3+0x1c>
     ee2:	0e 94 e7 07 	call	0xfce	; 0xfce <__fp_pscB>
     ee6:	20 f0       	brcs	.+8      	; 0xef0 <__mulsf3+0x1c>
     ee8:	95 23       	and	r25, r21
     eea:	11 f0       	breq	.+4      	; 0xef0 <__mulsf3+0x1c>
     eec:	0c 94 d7 07 	jmp	0xfae	; 0xfae <__fp_inf>
     ef0:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__fp_nan>
     ef4:	11 24       	eor	r1, r1
     ef6:	0c 94 64 07 	jmp	0xec8	; 0xec8 <__fp_szero>

00000efa <__mulsf3x>:
     efa:	0e 94 41 07 	call	0xe82	; 0xe82 <__fp_split3>
     efe:	70 f3       	brcs	.-36     	; 0xedc <__mulsf3+0x8>

00000f00 <__mulsf3_pse>:
     f00:	95 9f       	mul	r25, r21
     f02:	c1 f3       	breq	.-16     	; 0xef4 <__mulsf3+0x20>
     f04:	95 0f       	add	r25, r21
     f06:	50 e0       	ldi	r21, 0x00	; 0
     f08:	55 1f       	adc	r21, r21
     f0a:	62 9f       	mul	r22, r18
     f0c:	f0 01       	movw	r30, r0
     f0e:	72 9f       	mul	r23, r18
     f10:	bb 27       	eor	r27, r27
     f12:	f0 0d       	add	r31, r0
     f14:	b1 1d       	adc	r27, r1
     f16:	63 9f       	mul	r22, r19
     f18:	aa 27       	eor	r26, r26
     f1a:	f0 0d       	add	r31, r0
     f1c:	b1 1d       	adc	r27, r1
     f1e:	aa 1f       	adc	r26, r26
     f20:	64 9f       	mul	r22, r20
     f22:	66 27       	eor	r22, r22
     f24:	b0 0d       	add	r27, r0
     f26:	a1 1d       	adc	r26, r1
     f28:	66 1f       	adc	r22, r22
     f2a:	82 9f       	mul	r24, r18
     f2c:	22 27       	eor	r18, r18
     f2e:	b0 0d       	add	r27, r0
     f30:	a1 1d       	adc	r26, r1
     f32:	62 1f       	adc	r22, r18
     f34:	73 9f       	mul	r23, r19
     f36:	b0 0d       	add	r27, r0
     f38:	a1 1d       	adc	r26, r1
     f3a:	62 1f       	adc	r22, r18
     f3c:	83 9f       	mul	r24, r19
     f3e:	a0 0d       	add	r26, r0
     f40:	61 1d       	adc	r22, r1
     f42:	22 1f       	adc	r18, r18
     f44:	74 9f       	mul	r23, r20
     f46:	33 27       	eor	r19, r19
     f48:	a0 0d       	add	r26, r0
     f4a:	61 1d       	adc	r22, r1
     f4c:	23 1f       	adc	r18, r19
     f4e:	84 9f       	mul	r24, r20
     f50:	60 0d       	add	r22, r0
     f52:	21 1d       	adc	r18, r1
     f54:	82 2f       	mov	r24, r18
     f56:	76 2f       	mov	r23, r22
     f58:	6a 2f       	mov	r22, r26
     f5a:	11 24       	eor	r1, r1
     f5c:	9f 57       	subi	r25, 0x7F	; 127
     f5e:	50 40       	sbci	r21, 0x00	; 0
     f60:	9a f0       	brmi	.+38     	; 0xf88 <__mulsf3_pse+0x88>
     f62:	f1 f0       	breq	.+60     	; 0xfa0 <__mulsf3_pse+0xa0>
     f64:	88 23       	and	r24, r24
     f66:	4a f0       	brmi	.+18     	; 0xf7a <__mulsf3_pse+0x7a>
     f68:	ee 0f       	add	r30, r30
     f6a:	ff 1f       	adc	r31, r31
     f6c:	bb 1f       	adc	r27, r27
     f6e:	66 1f       	adc	r22, r22
     f70:	77 1f       	adc	r23, r23
     f72:	88 1f       	adc	r24, r24
     f74:	91 50       	subi	r25, 0x01	; 1
     f76:	50 40       	sbci	r21, 0x00	; 0
     f78:	a9 f7       	brne	.-22     	; 0xf64 <__mulsf3_pse+0x64>
     f7a:	9e 3f       	cpi	r25, 0xFE	; 254
     f7c:	51 05       	cpc	r21, r1
     f7e:	80 f0       	brcs	.+32     	; 0xfa0 <__mulsf3_pse+0xa0>
     f80:	0c 94 d7 07 	jmp	0xfae	; 0xfae <__fp_inf>
     f84:	0c 94 64 07 	jmp	0xec8	; 0xec8 <__fp_szero>
     f88:	5f 3f       	cpi	r21, 0xFF	; 255
     f8a:	e4 f3       	brlt	.-8      	; 0xf84 <__mulsf3_pse+0x84>
     f8c:	98 3e       	cpi	r25, 0xE8	; 232
     f8e:	d4 f3       	brlt	.-12     	; 0xf84 <__mulsf3_pse+0x84>
     f90:	86 95       	lsr	r24
     f92:	77 95       	ror	r23
     f94:	67 95       	ror	r22
     f96:	b7 95       	ror	r27
     f98:	f7 95       	ror	r31
     f9a:	e7 95       	ror	r30
     f9c:	9f 5f       	subi	r25, 0xFF	; 255
     f9e:	c1 f7       	brne	.-16     	; 0xf90 <__mulsf3_pse+0x90>
     fa0:	fe 2b       	or	r31, r30
     fa2:	88 0f       	add	r24, r24
     fa4:	91 1d       	adc	r25, r1
     fa6:	96 95       	lsr	r25
     fa8:	87 95       	ror	r24
     faa:	97 f9       	bld	r25, 7
     fac:	08 95       	ret

00000fae <__fp_inf>:
     fae:	97 f9       	bld	r25, 7
     fb0:	9f 67       	ori	r25, 0x7F	; 127
     fb2:	80 e8       	ldi	r24, 0x80	; 128
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	08 95       	ret

00000fba <__fp_nan>:
     fba:	9f ef       	ldi	r25, 0xFF	; 255
     fbc:	80 ec       	ldi	r24, 0xC0	; 192
     fbe:	08 95       	ret

00000fc0 <__fp_pscA>:
     fc0:	00 24       	eor	r0, r0
     fc2:	0a 94       	dec	r0
     fc4:	16 16       	cp	r1, r22
     fc6:	17 06       	cpc	r1, r23
     fc8:	18 06       	cpc	r1, r24
     fca:	09 06       	cpc	r0, r25
     fcc:	08 95       	ret

00000fce <__fp_pscB>:
     fce:	00 24       	eor	r0, r0
     fd0:	0a 94       	dec	r0
     fd2:	12 16       	cp	r1, r18
     fd4:	13 06       	cpc	r1, r19
     fd6:	14 06       	cpc	r1, r20
     fd8:	05 06       	cpc	r0, r21
     fda:	08 95       	ret

00000fdc <__fp_round>:
     fdc:	09 2e       	mov	r0, r25
     fde:	03 94       	inc	r0
     fe0:	00 0c       	add	r0, r0
     fe2:	11 f4       	brne	.+4      	; 0xfe8 <__fp_round+0xc>
     fe4:	88 23       	and	r24, r24
     fe6:	52 f0       	brmi	.+20     	; 0xffc <__fp_round+0x20>
     fe8:	bb 0f       	add	r27, r27
     fea:	40 f4       	brcc	.+16     	; 0xffc <__fp_round+0x20>
     fec:	bf 2b       	or	r27, r31
     fee:	11 f4       	brne	.+4      	; 0xff4 <__fp_round+0x18>
     ff0:	60 ff       	sbrs	r22, 0
     ff2:	04 c0       	rjmp	.+8      	; 0xffc <__fp_round+0x20>
     ff4:	6f 5f       	subi	r22, 0xFF	; 255
     ff6:	7f 4f       	sbci	r23, 0xFF	; 255
     ff8:	8f 4f       	sbci	r24, 0xFF	; 255
     ffa:	9f 4f       	sbci	r25, 0xFF	; 255
     ffc:	08 95       	ret

00000ffe <__umulhisi3>:
     ffe:	a2 9f       	mul	r26, r18
    1000:	b0 01       	movw	r22, r0
    1002:	b3 9f       	mul	r27, r19
    1004:	c0 01       	movw	r24, r0
    1006:	a3 9f       	mul	r26, r19
    1008:	70 0d       	add	r23, r0
    100a:	81 1d       	adc	r24, r1
    100c:	11 24       	eor	r1, r1
    100e:	91 1d       	adc	r25, r1
    1010:	b2 9f       	mul	r27, r18
    1012:	70 0d       	add	r23, r0
    1014:	81 1d       	adc	r24, r1
    1016:	11 24       	eor	r1, r1
    1018:	91 1d       	adc	r25, r1
    101a:	08 95       	ret

0000101c <strtoul>:
    101c:	a0 e0       	ldi	r26, 0x00	; 0
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	e4 e1       	ldi	r30, 0x14	; 20
    1022:	f8 e0       	ldi	r31, 0x08	; 8
    1024:	0c 94 94 0c 	jmp	0x1928	; 0x1928 <__prologue_saves__+0x2>
    1028:	5c 01       	movw	r10, r24
    102a:	6b 01       	movw	r12, r22
    102c:	7a 01       	movw	r14, r20
    102e:	61 15       	cp	r22, r1
    1030:	71 05       	cpc	r23, r1
    1032:	19 f0       	breq	.+6      	; 0x103a <strtoul+0x1e>
    1034:	fb 01       	movw	r30, r22
    1036:	80 83       	st	Z, r24
    1038:	91 83       	std	Z+1, r25	; 0x01
    103a:	e1 14       	cp	r14, r1
    103c:	f1 04       	cpc	r15, r1
    103e:	29 f0       	breq	.+10     	; 0x104a <strtoul+0x2e>
    1040:	c7 01       	movw	r24, r14
    1042:	02 97       	sbiw	r24, 0x02	; 2
    1044:	83 97       	sbiw	r24, 0x23	; 35
    1046:	08 f0       	brcs	.+2      	; 0x104a <strtoul+0x2e>
    1048:	c9 c0       	rjmp	.+402    	; 0x11dc <strtoul+0x1c0>
    104a:	e5 01       	movw	r28, r10
    104c:	21 96       	adiw	r28, 0x01	; 1
    104e:	f5 01       	movw	r30, r10
    1050:	10 81       	ld	r17, Z
    1052:	81 2f       	mov	r24, r17
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	0e 94 03 09 	call	0x1206	; 0x1206 <isspace>
    105a:	89 2b       	or	r24, r25
    105c:	11 f0       	breq	.+4      	; 0x1062 <strtoul+0x46>
    105e:	5e 01       	movw	r10, r28
    1060:	f4 cf       	rjmp	.-24     	; 0x104a <strtoul+0x2e>
    1062:	1d 32       	cpi	r17, 0x2D	; 45
    1064:	29 f4       	brne	.+10     	; 0x1070 <strtoul+0x54>
    1066:	21 96       	adiw	r28, 0x01	; 1
    1068:	f5 01       	movw	r30, r10
    106a:	11 81       	ldd	r17, Z+1	; 0x01
    106c:	01 e0       	ldi	r16, 0x01	; 1
    106e:	07 c0       	rjmp	.+14     	; 0x107e <strtoul+0x62>
    1070:	1b 32       	cpi	r17, 0x2B	; 43
    1072:	21 f4       	brne	.+8      	; 0x107c <strtoul+0x60>
    1074:	e5 01       	movw	r28, r10
    1076:	22 96       	adiw	r28, 0x02	; 2
    1078:	f5 01       	movw	r30, r10
    107a:	11 81       	ldd	r17, Z+1	; 0x01
    107c:	00 e0       	ldi	r16, 0x00	; 0
    107e:	e1 14       	cp	r14, r1
    1080:	f1 04       	cpc	r15, r1
    1082:	b1 f0       	breq	.+44     	; 0x10b0 <strtoul+0x94>
    1084:	f0 e1       	ldi	r31, 0x10	; 16
    1086:	ef 16       	cp	r14, r31
    1088:	f1 04       	cpc	r15, r1
    108a:	29 f4       	brne	.+10     	; 0x1096 <strtoul+0x7a>
    108c:	b0 c0       	rjmp	.+352    	; 0x11ee <strtoul+0x1d2>
    108e:	10 e3       	ldi	r17, 0x30	; 48
    1090:	e1 14       	cp	r14, r1
    1092:	f1 04       	cpc	r15, r1
    1094:	01 f1       	breq	.+64     	; 0x10d6 <strtoul+0xba>
    1096:	2a e0       	ldi	r18, 0x0A	; 10
    1098:	e2 16       	cp	r14, r18
    109a:	f1 04       	cpc	r15, r1
    109c:	b1 f1       	breq	.+108    	; 0x110a <strtoul+0xee>
    109e:	80 e1       	ldi	r24, 0x10	; 16
    10a0:	e8 16       	cp	r14, r24
    10a2:	f1 04       	cpc	r15, r1
    10a4:	71 f0       	breq	.+28     	; 0x10c2 <strtoul+0xa6>
    10a6:	e8 e0       	ldi	r30, 0x08	; 8
    10a8:	ee 16       	cp	r14, r30
    10aa:	f1 04       	cpc	r15, r1
    10ac:	f1 f4       	brne	.+60     	; 0x10ea <strtoul+0xce>
    10ae:	13 c0       	rjmp	.+38     	; 0x10d6 <strtoul+0xba>
    10b0:	10 33       	cpi	r17, 0x30	; 48
    10b2:	41 f5       	brne	.+80     	; 0x1104 <strtoul+0xe8>
    10b4:	88 81       	ld	r24, Y
    10b6:	8f 7d       	andi	r24, 0xDF	; 223
    10b8:	88 35       	cpi	r24, 0x58	; 88
    10ba:	49 f7       	brne	.-46     	; 0x108e <strtoul+0x72>
    10bc:	19 81       	ldd	r17, Y+1	; 0x01
    10be:	22 96       	adiw	r28, 0x02	; 2
    10c0:	02 60       	ori	r16, 0x02	; 2
    10c2:	f0 e1       	ldi	r31, 0x10	; 16
    10c4:	ef 2e       	mov	r14, r31
    10c6:	f1 2c       	mov	r15, r1
    10c8:	88 24       	eor	r8, r8
    10ca:	8a 94       	dec	r8
    10cc:	98 2c       	mov	r9, r8
    10ce:	a8 2c       	mov	r10, r8
    10d0:	af e0       	ldi	r26, 0x0F	; 15
    10d2:	ba 2e       	mov	r11, r26
    10d4:	20 c0       	rjmp	.+64     	; 0x1116 <strtoul+0xfa>
    10d6:	78 e0       	ldi	r23, 0x08	; 8
    10d8:	e7 2e       	mov	r14, r23
    10da:	f1 2c       	mov	r15, r1
    10dc:	88 24       	eor	r8, r8
    10de:	8a 94       	dec	r8
    10e0:	98 2c       	mov	r9, r8
    10e2:	a8 2c       	mov	r10, r8
    10e4:	ef e1       	ldi	r30, 0x1F	; 31
    10e6:	be 2e       	mov	r11, r30
    10e8:	16 c0       	rjmp	.+44     	; 0x1116 <strtoul+0xfa>
    10ea:	6f ef       	ldi	r22, 0xFF	; 255
    10ec:	7f ef       	ldi	r23, 0xFF	; 255
    10ee:	cb 01       	movw	r24, r22
    10f0:	97 01       	movw	r18, r14
    10f2:	0f 2c       	mov	r0, r15
    10f4:	00 0c       	add	r0, r0
    10f6:	44 0b       	sbc	r20, r20
    10f8:	55 0b       	sbc	r21, r21
    10fa:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__udivmodsi4>
    10fe:	49 01       	movw	r8, r18
    1100:	5a 01       	movw	r10, r20
    1102:	09 c0       	rjmp	.+18     	; 0x1116 <strtoul+0xfa>
    1104:	8a e0       	ldi	r24, 0x0A	; 10
    1106:	e8 2e       	mov	r14, r24
    1108:	f1 2c       	mov	r15, r1
    110a:	69 e9       	ldi	r22, 0x99	; 153
    110c:	86 2e       	mov	r8, r22
    110e:	98 2c       	mov	r9, r8
    1110:	a8 2c       	mov	r10, r8
    1112:	69 e1       	ldi	r22, 0x19	; 25
    1114:	b6 2e       	mov	r11, r22
    1116:	40 e0       	ldi	r20, 0x00	; 0
    1118:	60 e0       	ldi	r22, 0x00	; 0
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	cb 01       	movw	r24, r22
    111e:	27 01       	movw	r4, r14
    1120:	0f 2c       	mov	r0, r15
    1122:	00 0c       	add	r0, r0
    1124:	66 08       	sbc	r6, r6
    1126:	77 08       	sbc	r7, r7
    1128:	fe 01       	movw	r30, r28
    112a:	50 ed       	ldi	r21, 0xD0	; 208
    112c:	35 2e       	mov	r3, r21
    112e:	31 0e       	add	r3, r17
    1130:	29 e0       	ldi	r18, 0x09	; 9
    1132:	23 15       	cp	r18, r3
    1134:	70 f4       	brcc	.+28     	; 0x1152 <strtoul+0x136>
    1136:	2f eb       	ldi	r18, 0xBF	; 191
    1138:	21 0f       	add	r18, r17
    113a:	2a 31       	cpi	r18, 0x1A	; 26
    113c:	18 f4       	brcc	.+6      	; 0x1144 <strtoul+0x128>
    113e:	39 ec       	ldi	r19, 0xC9	; 201
    1140:	33 2e       	mov	r3, r19
    1142:	06 c0       	rjmp	.+12     	; 0x1150 <strtoul+0x134>
    1144:	2f e9       	ldi	r18, 0x9F	; 159
    1146:	21 0f       	add	r18, r17
    1148:	2a 31       	cpi	r18, 0x1A	; 26
    114a:	30 f5       	brcc	.+76     	; 0x1198 <strtoul+0x17c>
    114c:	29 ea       	ldi	r18, 0xA9	; 169
    114e:	32 2e       	mov	r3, r18
    1150:	31 0e       	add	r3, r17
    1152:	23 2d       	mov	r18, r3
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	2e 15       	cp	r18, r14
    1158:	3f 05       	cpc	r19, r15
    115a:	f4 f4       	brge	.+60     	; 0x1198 <strtoul+0x17c>
    115c:	4f 3f       	cpi	r20, 0xFF	; 255
    115e:	c9 f0       	breq	.+50     	; 0x1192 <strtoul+0x176>
    1160:	86 16       	cp	r8, r22
    1162:	97 06       	cpc	r9, r23
    1164:	a8 06       	cpc	r10, r24
    1166:	b9 06       	cpc	r11, r25
    1168:	88 f0       	brcs	.+34     	; 0x118c <strtoul+0x170>
    116a:	a3 01       	movw	r20, r6
    116c:	92 01       	movw	r18, r4
    116e:	0e 94 56 0c 	call	0x18ac	; 0x18ac <__mulsi3>
    1172:	23 2d       	mov	r18, r3
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	40 e0       	ldi	r20, 0x00	; 0
    1178:	50 e0       	ldi	r21, 0x00	; 0
    117a:	62 0f       	add	r22, r18
    117c:	73 1f       	adc	r23, r19
    117e:	84 1f       	adc	r24, r20
    1180:	95 1f       	adc	r25, r21
    1182:	62 17       	cp	r22, r18
    1184:	73 07       	cpc	r23, r19
    1186:	84 07       	cpc	r24, r20
    1188:	95 07       	cpc	r25, r21
    118a:	10 f4       	brcc	.+4      	; 0x1190 <strtoul+0x174>
    118c:	4f ef       	ldi	r20, 0xFF	; 255
    118e:	01 c0       	rjmp	.+2      	; 0x1192 <strtoul+0x176>
    1190:	41 e0       	ldi	r20, 0x01	; 1
    1192:	21 96       	adiw	r28, 0x01	; 1
    1194:	10 81       	ld	r17, Z
    1196:	c8 cf       	rjmp	.-112    	; 0x1128 <strtoul+0x10c>
    1198:	c1 14       	cp	r12, r1
    119a:	d1 04       	cpc	r13, r1
    119c:	51 f0       	breq	.+20     	; 0x11b2 <strtoul+0x196>
    119e:	44 23       	and	r20, r20
    11a0:	11 f0       	breq	.+4      	; 0x11a6 <strtoul+0x18a>
    11a2:	21 97       	sbiw	r28, 0x01	; 1
    11a4:	03 c0       	rjmp	.+6      	; 0x11ac <strtoul+0x190>
    11a6:	01 ff       	sbrs	r16, 1
    11a8:	04 c0       	rjmp	.+8      	; 0x11b2 <strtoul+0x196>
    11aa:	22 97       	sbiw	r28, 0x02	; 2
    11ac:	f6 01       	movw	r30, r12
    11ae:	c0 83       	st	Z, r28
    11b0:	d1 83       	std	Z+1, r29	; 0x01
    11b2:	00 ff       	sbrs	r16, 0
    11b4:	07 c0       	rjmp	.+14     	; 0x11c4 <strtoul+0x1a8>
    11b6:	90 95       	com	r25
    11b8:	80 95       	com	r24
    11ba:	70 95       	com	r23
    11bc:	61 95       	neg	r22
    11be:	7f 4f       	sbci	r23, 0xFF	; 255
    11c0:	8f 4f       	sbci	r24, 0xFF	; 255
    11c2:	9f 4f       	sbci	r25, 0xFF	; 255
    11c4:	4f 3f       	cpi	r20, 0xFF	; 255
    11c6:	79 f4       	brne	.+30     	; 0x11e6 <strtoul+0x1ca>
    11c8:	82 e2       	ldi	r24, 0x22	; 34
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <errno>
    11d0:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <errno+0x1>
    11d4:	3f ef       	ldi	r19, 0xFF	; 255
    11d6:	2f ef       	ldi	r18, 0xFF	; 255
    11d8:	9f ef       	ldi	r25, 0xFF	; 255
    11da:	0d c0       	rjmp	.+26     	; 0x11f6 <strtoul+0x1da>
    11dc:	40 e0       	ldi	r20, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	08 c0       	rjmp	.+16     	; 0x11f6 <strtoul+0x1da>
    11e6:	46 2f       	mov	r20, r22
    11e8:	37 2f       	mov	r19, r23
    11ea:	28 2f       	mov	r18, r24
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <strtoul+0x1da>
    11ee:	10 33       	cpi	r17, 0x30	; 48
    11f0:	09 f0       	breq	.+2      	; 0x11f4 <strtoul+0x1d8>
    11f2:	67 cf       	rjmp	.-306    	; 0x10c2 <strtoul+0xa6>
    11f4:	5f cf       	rjmp	.-322    	; 0x10b4 <strtoul+0x98>
    11f6:	64 2f       	mov	r22, r20
    11f8:	73 2f       	mov	r23, r19
    11fa:	82 2f       	mov	r24, r18
    11fc:	cd b7       	in	r28, 0x3d	; 61
    11fe:	de b7       	in	r29, 0x3e	; 62
    1200:	e1 e1       	ldi	r30, 0x11	; 17
    1202:	0c 94 ad 0c 	jmp	0x195a	; 0x195a <__epilogue_restores__+0x2>

00001206 <isspace>:
    1206:	91 11       	cpse	r25, r1
    1208:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__ctype_isfalse>
    120c:	80 32       	cpi	r24, 0x20	; 32
    120e:	19 f0       	breq	.+6      	; 0x1216 <isspace+0x10>
    1210:	89 50       	subi	r24, 0x09	; 9
    1212:	85 50       	subi	r24, 0x05	; 5
    1214:	c8 f7       	brcc	.-14     	; 0x1208 <isspace+0x2>
    1216:	08 95       	ret

00001218 <strtok>:
    1218:	42 e2       	ldi	r20, 0x22	; 34
    121a:	59 e2       	ldi	r21, 0x29	; 41
    121c:	0e 94 25 09 	call	0x124a	; 0x124a <strtok_r>
    1220:	08 95       	ret

00001222 <strchr>:
    1222:	fc 01       	movw	r30, r24
    1224:	81 91       	ld	r24, Z+
    1226:	86 17       	cp	r24, r22
    1228:	21 f0       	breq	.+8      	; 0x1232 <strchr+0x10>
    122a:	88 23       	and	r24, r24
    122c:	d9 f7       	brne	.-10     	; 0x1224 <strchr+0x2>
    122e:	99 27       	eor	r25, r25
    1230:	08 95       	ret
    1232:	31 97       	sbiw	r30, 0x01	; 1
    1234:	cf 01       	movw	r24, r30
    1236:	08 95       	ret

00001238 <strcmp>:
    1238:	fb 01       	movw	r30, r22
    123a:	dc 01       	movw	r26, r24
    123c:	8d 91       	ld	r24, X+
    123e:	01 90       	ld	r0, Z+
    1240:	80 19       	sub	r24, r0
    1242:	01 10       	cpse	r0, r1
    1244:	d9 f3       	breq	.-10     	; 0x123c <strcmp+0x4>
    1246:	99 0b       	sbc	r25, r25
    1248:	08 95       	ret

0000124a <strtok_r>:
    124a:	fa 01       	movw	r30, r20
    124c:	a1 91       	ld	r26, Z+
    124e:	b0 81       	ld	r27, Z
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	19 f4       	brne	.+6      	; 0x125a <strtok_r+0x10>
    1254:	10 97       	sbiw	r26, 0x00	; 0
    1256:	e1 f0       	breq	.+56     	; 0x1290 <strtok_r+0x46>
    1258:	cd 01       	movw	r24, r26
    125a:	dc 01       	movw	r26, r24
    125c:	cd 01       	movw	r24, r26
    125e:	0d 90       	ld	r0, X+
    1260:	00 20       	and	r0, r0
    1262:	11 f4       	brne	.+4      	; 0x1268 <strtok_r+0x1e>
    1264:	c0 01       	movw	r24, r0
    1266:	13 c0       	rjmp	.+38     	; 0x128e <strtok_r+0x44>
    1268:	fb 01       	movw	r30, r22
    126a:	21 91       	ld	r18, Z+
    126c:	22 23       	and	r18, r18
    126e:	19 f0       	breq	.+6      	; 0x1276 <strtok_r+0x2c>
    1270:	20 15       	cp	r18, r0
    1272:	d9 f7       	brne	.-10     	; 0x126a <strtok_r+0x20>
    1274:	f3 cf       	rjmp	.-26     	; 0x125c <strtok_r+0x12>
    1276:	fb 01       	movw	r30, r22
    1278:	21 91       	ld	r18, Z+
    127a:	20 15       	cp	r18, r0
    127c:	19 f4       	brne	.+6      	; 0x1284 <strtok_r+0x3a>
    127e:	1e 92       	st	-X, r1
    1280:	11 96       	adiw	r26, 0x01	; 1
    1282:	06 c0       	rjmp	.+12     	; 0x1290 <strtok_r+0x46>
    1284:	22 23       	and	r18, r18
    1286:	c1 f7       	brne	.-16     	; 0x1278 <strtok_r+0x2e>
    1288:	0d 90       	ld	r0, X+
    128a:	00 20       	and	r0, r0
    128c:	a1 f7       	brne	.-24     	; 0x1276 <strtok_r+0x2c>
    128e:	d0 01       	movw	r26, r0
    1290:	fa 01       	movw	r30, r20
    1292:	a1 93       	st	Z+, r26
    1294:	b0 83       	st	Z, r27
    1296:	08 95       	ret

00001298 <printf>:
    1298:	a0 e0       	ldi	r26, 0x00	; 0
    129a:	b0 e0       	ldi	r27, 0x00	; 0
    129c:	e2 e5       	ldi	r30, 0x52	; 82
    129e:	f9 e0       	ldi	r31, 0x09	; 9
    12a0:	0c 94 a3 0c 	jmp	0x1946	; 0x1946 <__prologue_saves__+0x20>
    12a4:	ae 01       	movw	r20, r28
    12a6:	4b 5f       	subi	r20, 0xFB	; 251
    12a8:	5f 4f       	sbci	r21, 0xFF	; 255
    12aa:	fa 01       	movw	r30, r20
    12ac:	61 91       	ld	r22, Z+
    12ae:	71 91       	ld	r23, Z+
    12b0:	af 01       	movw	r20, r30
    12b2:	80 91 10 2a 	lds	r24, 0x2A10	; 0x802a10 <__iob+0x2>
    12b6:	90 91 11 2a 	lds	r25, 0x2A11	; 0x802a11 <__iob+0x3>
    12ba:	0e 94 c2 09 	call	0x1384	; 0x1384 <vfprintf>
    12be:	e2 e0       	ldi	r30, 0x02	; 2
    12c0:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <__epilogue_restores__+0x20>

000012c4 <puts>:
    12c4:	0f 93       	push	r16
    12c6:	1f 93       	push	r17
    12c8:	cf 93       	push	r28
    12ca:	df 93       	push	r29
    12cc:	e0 91 10 2a 	lds	r30, 0x2A10	; 0x802a10 <__iob+0x2>
    12d0:	f0 91 11 2a 	lds	r31, 0x2A11	; 0x802a11 <__iob+0x3>
    12d4:	23 81       	ldd	r18, Z+3	; 0x03
    12d6:	21 ff       	sbrs	r18, 1
    12d8:	1b c0       	rjmp	.+54     	; 0x1310 <puts+0x4c>
    12da:	8c 01       	movw	r16, r24
    12dc:	d0 e0       	ldi	r29, 0x00	; 0
    12de:	c0 e0       	ldi	r28, 0x00	; 0
    12e0:	f8 01       	movw	r30, r16
    12e2:	81 91       	ld	r24, Z+
    12e4:	8f 01       	movw	r16, r30
    12e6:	60 91 10 2a 	lds	r22, 0x2A10	; 0x802a10 <__iob+0x2>
    12ea:	70 91 11 2a 	lds	r23, 0x2A11	; 0x802a11 <__iob+0x3>
    12ee:	db 01       	movw	r26, r22
    12f0:	18 96       	adiw	r26, 0x08	; 8
    12f2:	ed 91       	ld	r30, X+
    12f4:	fc 91       	ld	r31, X
    12f6:	19 97       	sbiw	r26, 0x09	; 9
    12f8:	88 23       	and	r24, r24
    12fa:	31 f0       	breq	.+12     	; 0x1308 <puts+0x44>
    12fc:	09 95       	icall
    12fe:	89 2b       	or	r24, r25
    1300:	79 f3       	breq	.-34     	; 0x12e0 <puts+0x1c>
    1302:	df ef       	ldi	r29, 0xFF	; 255
    1304:	cf ef       	ldi	r28, 0xFF	; 255
    1306:	ec cf       	rjmp	.-40     	; 0x12e0 <puts+0x1c>
    1308:	8a e0       	ldi	r24, 0x0A	; 10
    130a:	09 95       	icall
    130c:	89 2b       	or	r24, r25
    130e:	19 f0       	breq	.+6      	; 0x1316 <puts+0x52>
    1310:	8f ef       	ldi	r24, 0xFF	; 255
    1312:	9f ef       	ldi	r25, 0xFF	; 255
    1314:	02 c0       	rjmp	.+4      	; 0x131a <puts+0x56>
    1316:	8d 2f       	mov	r24, r29
    1318:	9c 2f       	mov	r25, r28
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	08 95       	ret

00001324 <snprintf>:
    1324:	ae e0       	ldi	r26, 0x0E	; 14
    1326:	b0 e0       	ldi	r27, 0x00	; 0
    1328:	e8 e9       	ldi	r30, 0x98	; 152
    132a:	f9 e0       	ldi	r31, 0x09	; 9
    132c:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__prologue_saves__+0x1c>
    1330:	0d 89       	ldd	r16, Y+21	; 0x15
    1332:	1e 89       	ldd	r17, Y+22	; 0x16
    1334:	8f 89       	ldd	r24, Y+23	; 0x17
    1336:	98 8d       	ldd	r25, Y+24	; 0x18
    1338:	26 e0       	ldi	r18, 0x06	; 6
    133a:	2c 83       	std	Y+4, r18	; 0x04
    133c:	09 83       	std	Y+1, r16	; 0x01
    133e:	1a 83       	std	Y+2, r17	; 0x02
    1340:	97 ff       	sbrs	r25, 7
    1342:	02 c0       	rjmp	.+4      	; 0x1348 <snprintf+0x24>
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	90 e8       	ldi	r25, 0x80	; 128
    1348:	01 97       	sbiw	r24, 0x01	; 1
    134a:	8d 83       	std	Y+5, r24	; 0x05
    134c:	9e 83       	std	Y+6, r25	; 0x06
    134e:	ae 01       	movw	r20, r28
    1350:	45 5e       	subi	r20, 0xE5	; 229
    1352:	5f 4f       	sbci	r21, 0xFF	; 255
    1354:	69 8d       	ldd	r22, Y+25	; 0x19
    1356:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1358:	ce 01       	movw	r24, r28
    135a:	01 96       	adiw	r24, 0x01	; 1
    135c:	0e 94 c2 09 	call	0x1384	; 0x1384 <vfprintf>
    1360:	4d 81       	ldd	r20, Y+5	; 0x05
    1362:	5e 81       	ldd	r21, Y+6	; 0x06
    1364:	57 fd       	sbrc	r21, 7
    1366:	0a c0       	rjmp	.+20     	; 0x137c <snprintf+0x58>
    1368:	2f 81       	ldd	r18, Y+7	; 0x07
    136a:	38 85       	ldd	r19, Y+8	; 0x08
    136c:	42 17       	cp	r20, r18
    136e:	53 07       	cpc	r21, r19
    1370:	0c f4       	brge	.+2      	; 0x1374 <snprintf+0x50>
    1372:	9a 01       	movw	r18, r20
    1374:	f8 01       	movw	r30, r16
    1376:	e2 0f       	add	r30, r18
    1378:	f3 1f       	adc	r31, r19
    137a:	10 82       	st	Z, r1
    137c:	2e 96       	adiw	r28, 0x0e	; 14
    137e:	e4 e0       	ldi	r30, 0x04	; 4
    1380:	0c 94 ba 0c 	jmp	0x1974	; 0x1974 <__epilogue_restores__+0x1c>

00001384 <vfprintf>:
    1384:	ab e0       	ldi	r26, 0x0B	; 11
    1386:	b0 e0       	ldi	r27, 0x00	; 0
    1388:	e8 ec       	ldi	r30, 0xC8	; 200
    138a:	f9 e0       	ldi	r31, 0x09	; 9
    138c:	0c 94 93 0c 	jmp	0x1926	; 0x1926 <__prologue_saves__>
    1390:	6c 01       	movw	r12, r24
    1392:	7b 01       	movw	r14, r22
    1394:	8a 01       	movw	r16, r20
    1396:	fc 01       	movw	r30, r24
    1398:	16 82       	std	Z+6, r1	; 0x06
    139a:	17 82       	std	Z+7, r1	; 0x07
    139c:	83 81       	ldd	r24, Z+3	; 0x03
    139e:	81 ff       	sbrs	r24, 1
    13a0:	cc c1       	rjmp	.+920    	; 0x173a <vfprintf+0x3b6>
    13a2:	ce 01       	movw	r24, r28
    13a4:	01 96       	adiw	r24, 0x01	; 1
    13a6:	3c 01       	movw	r6, r24
    13a8:	f6 01       	movw	r30, r12
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	f7 01       	movw	r30, r14
    13ae:	93 fd       	sbrc	r25, 3
    13b0:	85 91       	lpm	r24, Z+
    13b2:	93 ff       	sbrs	r25, 3
    13b4:	81 91       	ld	r24, Z+
    13b6:	7f 01       	movw	r14, r30
    13b8:	88 23       	and	r24, r24
    13ba:	09 f4       	brne	.+2      	; 0x13be <vfprintf+0x3a>
    13bc:	ba c1       	rjmp	.+884    	; 0x1732 <vfprintf+0x3ae>
    13be:	85 32       	cpi	r24, 0x25	; 37
    13c0:	39 f4       	brne	.+14     	; 0x13d0 <vfprintf+0x4c>
    13c2:	93 fd       	sbrc	r25, 3
    13c4:	85 91       	lpm	r24, Z+
    13c6:	93 ff       	sbrs	r25, 3
    13c8:	81 91       	ld	r24, Z+
    13ca:	7f 01       	movw	r14, r30
    13cc:	85 32       	cpi	r24, 0x25	; 37
    13ce:	29 f4       	brne	.+10     	; 0x13da <vfprintf+0x56>
    13d0:	b6 01       	movw	r22, r12
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    13d8:	e7 cf       	rjmp	.-50     	; 0x13a8 <vfprintf+0x24>
    13da:	91 2c       	mov	r9, r1
    13dc:	21 2c       	mov	r2, r1
    13de:	31 2c       	mov	r3, r1
    13e0:	ff e1       	ldi	r31, 0x1F	; 31
    13e2:	f3 15       	cp	r31, r3
    13e4:	d8 f0       	brcs	.+54     	; 0x141c <vfprintf+0x98>
    13e6:	8b 32       	cpi	r24, 0x2B	; 43
    13e8:	79 f0       	breq	.+30     	; 0x1408 <vfprintf+0x84>
    13ea:	38 f4       	brcc	.+14     	; 0x13fa <vfprintf+0x76>
    13ec:	80 32       	cpi	r24, 0x20	; 32
    13ee:	79 f0       	breq	.+30     	; 0x140e <vfprintf+0x8a>
    13f0:	83 32       	cpi	r24, 0x23	; 35
    13f2:	a1 f4       	brne	.+40     	; 0x141c <vfprintf+0x98>
    13f4:	23 2d       	mov	r18, r3
    13f6:	20 61       	ori	r18, 0x10	; 16
    13f8:	1d c0       	rjmp	.+58     	; 0x1434 <vfprintf+0xb0>
    13fa:	8d 32       	cpi	r24, 0x2D	; 45
    13fc:	61 f0       	breq	.+24     	; 0x1416 <vfprintf+0x92>
    13fe:	80 33       	cpi	r24, 0x30	; 48
    1400:	69 f4       	brne	.+26     	; 0x141c <vfprintf+0x98>
    1402:	23 2d       	mov	r18, r3
    1404:	21 60       	ori	r18, 0x01	; 1
    1406:	16 c0       	rjmp	.+44     	; 0x1434 <vfprintf+0xb0>
    1408:	83 2d       	mov	r24, r3
    140a:	82 60       	ori	r24, 0x02	; 2
    140c:	38 2e       	mov	r3, r24
    140e:	e3 2d       	mov	r30, r3
    1410:	e4 60       	ori	r30, 0x04	; 4
    1412:	3e 2e       	mov	r3, r30
    1414:	2a c0       	rjmp	.+84     	; 0x146a <vfprintf+0xe6>
    1416:	f3 2d       	mov	r31, r3
    1418:	f8 60       	ori	r31, 0x08	; 8
    141a:	1d c0       	rjmp	.+58     	; 0x1456 <vfprintf+0xd2>
    141c:	37 fc       	sbrc	r3, 7
    141e:	2d c0       	rjmp	.+90     	; 0x147a <vfprintf+0xf6>
    1420:	20 ed       	ldi	r18, 0xD0	; 208
    1422:	28 0f       	add	r18, r24
    1424:	2a 30       	cpi	r18, 0x0A	; 10
    1426:	40 f0       	brcs	.+16     	; 0x1438 <vfprintf+0xb4>
    1428:	8e 32       	cpi	r24, 0x2E	; 46
    142a:	b9 f4       	brne	.+46     	; 0x145a <vfprintf+0xd6>
    142c:	36 fc       	sbrc	r3, 6
    142e:	81 c1       	rjmp	.+770    	; 0x1732 <vfprintf+0x3ae>
    1430:	23 2d       	mov	r18, r3
    1432:	20 64       	ori	r18, 0x40	; 64
    1434:	32 2e       	mov	r3, r18
    1436:	19 c0       	rjmp	.+50     	; 0x146a <vfprintf+0xe6>
    1438:	36 fe       	sbrs	r3, 6
    143a:	06 c0       	rjmp	.+12     	; 0x1448 <vfprintf+0xc4>
    143c:	8a e0       	ldi	r24, 0x0A	; 10
    143e:	98 9e       	mul	r9, r24
    1440:	20 0d       	add	r18, r0
    1442:	11 24       	eor	r1, r1
    1444:	92 2e       	mov	r9, r18
    1446:	11 c0       	rjmp	.+34     	; 0x146a <vfprintf+0xe6>
    1448:	ea e0       	ldi	r30, 0x0A	; 10
    144a:	2e 9e       	mul	r2, r30
    144c:	20 0d       	add	r18, r0
    144e:	11 24       	eor	r1, r1
    1450:	22 2e       	mov	r2, r18
    1452:	f3 2d       	mov	r31, r3
    1454:	f0 62       	ori	r31, 0x20	; 32
    1456:	3f 2e       	mov	r3, r31
    1458:	08 c0       	rjmp	.+16     	; 0x146a <vfprintf+0xe6>
    145a:	8c 36       	cpi	r24, 0x6C	; 108
    145c:	21 f4       	brne	.+8      	; 0x1466 <vfprintf+0xe2>
    145e:	83 2d       	mov	r24, r3
    1460:	80 68       	ori	r24, 0x80	; 128
    1462:	38 2e       	mov	r3, r24
    1464:	02 c0       	rjmp	.+4      	; 0x146a <vfprintf+0xe6>
    1466:	88 36       	cpi	r24, 0x68	; 104
    1468:	41 f4       	brne	.+16     	; 0x147a <vfprintf+0xf6>
    146a:	f7 01       	movw	r30, r14
    146c:	93 fd       	sbrc	r25, 3
    146e:	85 91       	lpm	r24, Z+
    1470:	93 ff       	sbrs	r25, 3
    1472:	81 91       	ld	r24, Z+
    1474:	7f 01       	movw	r14, r30
    1476:	81 11       	cpse	r24, r1
    1478:	b3 cf       	rjmp	.-154    	; 0x13e0 <vfprintf+0x5c>
    147a:	98 2f       	mov	r25, r24
    147c:	9f 7d       	andi	r25, 0xDF	; 223
    147e:	95 54       	subi	r25, 0x45	; 69
    1480:	93 30       	cpi	r25, 0x03	; 3
    1482:	28 f4       	brcc	.+10     	; 0x148e <vfprintf+0x10a>
    1484:	0c 5f       	subi	r16, 0xFC	; 252
    1486:	1f 4f       	sbci	r17, 0xFF	; 255
    1488:	9f e3       	ldi	r25, 0x3F	; 63
    148a:	99 83       	std	Y+1, r25	; 0x01
    148c:	0d c0       	rjmp	.+26     	; 0x14a8 <vfprintf+0x124>
    148e:	83 36       	cpi	r24, 0x63	; 99
    1490:	31 f0       	breq	.+12     	; 0x149e <vfprintf+0x11a>
    1492:	83 37       	cpi	r24, 0x73	; 115
    1494:	71 f0       	breq	.+28     	; 0x14b2 <vfprintf+0x12e>
    1496:	83 35       	cpi	r24, 0x53	; 83
    1498:	09 f0       	breq	.+2      	; 0x149c <vfprintf+0x118>
    149a:	59 c0       	rjmp	.+178    	; 0x154e <vfprintf+0x1ca>
    149c:	21 c0       	rjmp	.+66     	; 0x14e0 <vfprintf+0x15c>
    149e:	f8 01       	movw	r30, r16
    14a0:	80 81       	ld	r24, Z
    14a2:	89 83       	std	Y+1, r24	; 0x01
    14a4:	0e 5f       	subi	r16, 0xFE	; 254
    14a6:	1f 4f       	sbci	r17, 0xFF	; 255
    14a8:	88 24       	eor	r8, r8
    14aa:	83 94       	inc	r8
    14ac:	91 2c       	mov	r9, r1
    14ae:	53 01       	movw	r10, r6
    14b0:	13 c0       	rjmp	.+38     	; 0x14d8 <vfprintf+0x154>
    14b2:	28 01       	movw	r4, r16
    14b4:	f2 e0       	ldi	r31, 0x02	; 2
    14b6:	4f 0e       	add	r4, r31
    14b8:	51 1c       	adc	r5, r1
    14ba:	f8 01       	movw	r30, r16
    14bc:	a0 80       	ld	r10, Z
    14be:	b1 80       	ldd	r11, Z+1	; 0x01
    14c0:	36 fe       	sbrs	r3, 6
    14c2:	03 c0       	rjmp	.+6      	; 0x14ca <vfprintf+0x146>
    14c4:	69 2d       	mov	r22, r9
    14c6:	70 e0       	ldi	r23, 0x00	; 0
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <vfprintf+0x14a>
    14ca:	6f ef       	ldi	r22, 0xFF	; 255
    14cc:	7f ef       	ldi	r23, 0xFF	; 255
    14ce:	c5 01       	movw	r24, r10
    14d0:	0e 94 b1 0b 	call	0x1762	; 0x1762 <strnlen>
    14d4:	4c 01       	movw	r8, r24
    14d6:	82 01       	movw	r16, r4
    14d8:	f3 2d       	mov	r31, r3
    14da:	ff 77       	andi	r31, 0x7F	; 127
    14dc:	3f 2e       	mov	r3, r31
    14de:	16 c0       	rjmp	.+44     	; 0x150c <vfprintf+0x188>
    14e0:	28 01       	movw	r4, r16
    14e2:	22 e0       	ldi	r18, 0x02	; 2
    14e4:	42 0e       	add	r4, r18
    14e6:	51 1c       	adc	r5, r1
    14e8:	f8 01       	movw	r30, r16
    14ea:	a0 80       	ld	r10, Z
    14ec:	b1 80       	ldd	r11, Z+1	; 0x01
    14ee:	36 fe       	sbrs	r3, 6
    14f0:	03 c0       	rjmp	.+6      	; 0x14f8 <vfprintf+0x174>
    14f2:	69 2d       	mov	r22, r9
    14f4:	70 e0       	ldi	r23, 0x00	; 0
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <vfprintf+0x178>
    14f8:	6f ef       	ldi	r22, 0xFF	; 255
    14fa:	7f ef       	ldi	r23, 0xFF	; 255
    14fc:	c5 01       	movw	r24, r10
    14fe:	0e 94 a6 0b 	call	0x174c	; 0x174c <strnlen_P>
    1502:	4c 01       	movw	r8, r24
    1504:	f3 2d       	mov	r31, r3
    1506:	f0 68       	ori	r31, 0x80	; 128
    1508:	3f 2e       	mov	r3, r31
    150a:	82 01       	movw	r16, r4
    150c:	33 fc       	sbrc	r3, 3
    150e:	1b c0       	rjmp	.+54     	; 0x1546 <vfprintf+0x1c2>
    1510:	82 2d       	mov	r24, r2
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	88 16       	cp	r8, r24
    1516:	99 06       	cpc	r9, r25
    1518:	b0 f4       	brcc	.+44     	; 0x1546 <vfprintf+0x1c2>
    151a:	b6 01       	movw	r22, r12
    151c:	80 e2       	ldi	r24, 0x20	; 32
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    1524:	2a 94       	dec	r2
    1526:	f4 cf       	rjmp	.-24     	; 0x1510 <vfprintf+0x18c>
    1528:	f5 01       	movw	r30, r10
    152a:	37 fc       	sbrc	r3, 7
    152c:	85 91       	lpm	r24, Z+
    152e:	37 fe       	sbrs	r3, 7
    1530:	81 91       	ld	r24, Z+
    1532:	5f 01       	movw	r10, r30
    1534:	b6 01       	movw	r22, r12
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    153c:	21 10       	cpse	r2, r1
    153e:	2a 94       	dec	r2
    1540:	21 e0       	ldi	r18, 0x01	; 1
    1542:	82 1a       	sub	r8, r18
    1544:	91 08       	sbc	r9, r1
    1546:	81 14       	cp	r8, r1
    1548:	91 04       	cpc	r9, r1
    154a:	71 f7       	brne	.-36     	; 0x1528 <vfprintf+0x1a4>
    154c:	e8 c0       	rjmp	.+464    	; 0x171e <vfprintf+0x39a>
    154e:	84 36       	cpi	r24, 0x64	; 100
    1550:	11 f0       	breq	.+4      	; 0x1556 <vfprintf+0x1d2>
    1552:	89 36       	cpi	r24, 0x69	; 105
    1554:	41 f5       	brne	.+80     	; 0x15a6 <vfprintf+0x222>
    1556:	f8 01       	movw	r30, r16
    1558:	37 fe       	sbrs	r3, 7
    155a:	07 c0       	rjmp	.+14     	; 0x156a <vfprintf+0x1e6>
    155c:	60 81       	ld	r22, Z
    155e:	71 81       	ldd	r23, Z+1	; 0x01
    1560:	82 81       	ldd	r24, Z+2	; 0x02
    1562:	93 81       	ldd	r25, Z+3	; 0x03
    1564:	0c 5f       	subi	r16, 0xFC	; 252
    1566:	1f 4f       	sbci	r17, 0xFF	; 255
    1568:	08 c0       	rjmp	.+16     	; 0x157a <vfprintf+0x1f6>
    156a:	60 81       	ld	r22, Z
    156c:	71 81       	ldd	r23, Z+1	; 0x01
    156e:	07 2e       	mov	r0, r23
    1570:	00 0c       	add	r0, r0
    1572:	88 0b       	sbc	r24, r24
    1574:	99 0b       	sbc	r25, r25
    1576:	0e 5f       	subi	r16, 0xFE	; 254
    1578:	1f 4f       	sbci	r17, 0xFF	; 255
    157a:	f3 2d       	mov	r31, r3
    157c:	ff 76       	andi	r31, 0x6F	; 111
    157e:	3f 2e       	mov	r3, r31
    1580:	97 ff       	sbrs	r25, 7
    1582:	09 c0       	rjmp	.+18     	; 0x1596 <vfprintf+0x212>
    1584:	90 95       	com	r25
    1586:	80 95       	com	r24
    1588:	70 95       	com	r23
    158a:	61 95       	neg	r22
    158c:	7f 4f       	sbci	r23, 0xFF	; 255
    158e:	8f 4f       	sbci	r24, 0xFF	; 255
    1590:	9f 4f       	sbci	r25, 0xFF	; 255
    1592:	f0 68       	ori	r31, 0x80	; 128
    1594:	3f 2e       	mov	r3, r31
    1596:	2a e0       	ldi	r18, 0x0A	; 10
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	a3 01       	movw	r20, r6
    159c:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__ultoa_invert>
    15a0:	88 2e       	mov	r8, r24
    15a2:	86 18       	sub	r8, r6
    15a4:	45 c0       	rjmp	.+138    	; 0x1630 <vfprintf+0x2ac>
    15a6:	85 37       	cpi	r24, 0x75	; 117
    15a8:	31 f4       	brne	.+12     	; 0x15b6 <vfprintf+0x232>
    15aa:	23 2d       	mov	r18, r3
    15ac:	2f 7e       	andi	r18, 0xEF	; 239
    15ae:	b2 2e       	mov	r11, r18
    15b0:	2a e0       	ldi	r18, 0x0A	; 10
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	25 c0       	rjmp	.+74     	; 0x1600 <vfprintf+0x27c>
    15b6:	93 2d       	mov	r25, r3
    15b8:	99 7f       	andi	r25, 0xF9	; 249
    15ba:	b9 2e       	mov	r11, r25
    15bc:	8f 36       	cpi	r24, 0x6F	; 111
    15be:	c1 f0       	breq	.+48     	; 0x15f0 <vfprintf+0x26c>
    15c0:	18 f4       	brcc	.+6      	; 0x15c8 <vfprintf+0x244>
    15c2:	88 35       	cpi	r24, 0x58	; 88
    15c4:	79 f0       	breq	.+30     	; 0x15e4 <vfprintf+0x260>
    15c6:	b5 c0       	rjmp	.+362    	; 0x1732 <vfprintf+0x3ae>
    15c8:	80 37       	cpi	r24, 0x70	; 112
    15ca:	19 f0       	breq	.+6      	; 0x15d2 <vfprintf+0x24e>
    15cc:	88 37       	cpi	r24, 0x78	; 120
    15ce:	21 f0       	breq	.+8      	; 0x15d8 <vfprintf+0x254>
    15d0:	b0 c0       	rjmp	.+352    	; 0x1732 <vfprintf+0x3ae>
    15d2:	e9 2f       	mov	r30, r25
    15d4:	e0 61       	ori	r30, 0x10	; 16
    15d6:	be 2e       	mov	r11, r30
    15d8:	b4 fe       	sbrs	r11, 4
    15da:	0d c0       	rjmp	.+26     	; 0x15f6 <vfprintf+0x272>
    15dc:	fb 2d       	mov	r31, r11
    15de:	f4 60       	ori	r31, 0x04	; 4
    15e0:	bf 2e       	mov	r11, r31
    15e2:	09 c0       	rjmp	.+18     	; 0x15f6 <vfprintf+0x272>
    15e4:	34 fe       	sbrs	r3, 4
    15e6:	0a c0       	rjmp	.+20     	; 0x15fc <vfprintf+0x278>
    15e8:	29 2f       	mov	r18, r25
    15ea:	26 60       	ori	r18, 0x06	; 6
    15ec:	b2 2e       	mov	r11, r18
    15ee:	06 c0       	rjmp	.+12     	; 0x15fc <vfprintf+0x278>
    15f0:	28 e0       	ldi	r18, 0x08	; 8
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	05 c0       	rjmp	.+10     	; 0x1600 <vfprintf+0x27c>
    15f6:	20 e1       	ldi	r18, 0x10	; 16
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	02 c0       	rjmp	.+4      	; 0x1600 <vfprintf+0x27c>
    15fc:	20 e1       	ldi	r18, 0x10	; 16
    15fe:	32 e0       	ldi	r19, 0x02	; 2
    1600:	f8 01       	movw	r30, r16
    1602:	b7 fe       	sbrs	r11, 7
    1604:	07 c0       	rjmp	.+14     	; 0x1614 <vfprintf+0x290>
    1606:	60 81       	ld	r22, Z
    1608:	71 81       	ldd	r23, Z+1	; 0x01
    160a:	82 81       	ldd	r24, Z+2	; 0x02
    160c:	93 81       	ldd	r25, Z+3	; 0x03
    160e:	0c 5f       	subi	r16, 0xFC	; 252
    1610:	1f 4f       	sbci	r17, 0xFF	; 255
    1612:	06 c0       	rjmp	.+12     	; 0x1620 <vfprintf+0x29c>
    1614:	60 81       	ld	r22, Z
    1616:	71 81       	ldd	r23, Z+1	; 0x01
    1618:	80 e0       	ldi	r24, 0x00	; 0
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	0e 5f       	subi	r16, 0xFE	; 254
    161e:	1f 4f       	sbci	r17, 0xFF	; 255
    1620:	a3 01       	movw	r20, r6
    1622:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__ultoa_invert>
    1626:	88 2e       	mov	r8, r24
    1628:	86 18       	sub	r8, r6
    162a:	fb 2d       	mov	r31, r11
    162c:	ff 77       	andi	r31, 0x7F	; 127
    162e:	3f 2e       	mov	r3, r31
    1630:	36 fe       	sbrs	r3, 6
    1632:	0d c0       	rjmp	.+26     	; 0x164e <vfprintf+0x2ca>
    1634:	23 2d       	mov	r18, r3
    1636:	2e 7f       	andi	r18, 0xFE	; 254
    1638:	a2 2e       	mov	r10, r18
    163a:	89 14       	cp	r8, r9
    163c:	58 f4       	brcc	.+22     	; 0x1654 <vfprintf+0x2d0>
    163e:	34 fe       	sbrs	r3, 4
    1640:	0b c0       	rjmp	.+22     	; 0x1658 <vfprintf+0x2d4>
    1642:	32 fc       	sbrc	r3, 2
    1644:	09 c0       	rjmp	.+18     	; 0x1658 <vfprintf+0x2d4>
    1646:	83 2d       	mov	r24, r3
    1648:	8e 7e       	andi	r24, 0xEE	; 238
    164a:	a8 2e       	mov	r10, r24
    164c:	05 c0       	rjmp	.+10     	; 0x1658 <vfprintf+0x2d4>
    164e:	b8 2c       	mov	r11, r8
    1650:	a3 2c       	mov	r10, r3
    1652:	03 c0       	rjmp	.+6      	; 0x165a <vfprintf+0x2d6>
    1654:	b8 2c       	mov	r11, r8
    1656:	01 c0       	rjmp	.+2      	; 0x165a <vfprintf+0x2d6>
    1658:	b9 2c       	mov	r11, r9
    165a:	a4 fe       	sbrs	r10, 4
    165c:	0f c0       	rjmp	.+30     	; 0x167c <vfprintf+0x2f8>
    165e:	fe 01       	movw	r30, r28
    1660:	e8 0d       	add	r30, r8
    1662:	f1 1d       	adc	r31, r1
    1664:	80 81       	ld	r24, Z
    1666:	80 33       	cpi	r24, 0x30	; 48
    1668:	21 f4       	brne	.+8      	; 0x1672 <vfprintf+0x2ee>
    166a:	9a 2d       	mov	r25, r10
    166c:	99 7e       	andi	r25, 0xE9	; 233
    166e:	a9 2e       	mov	r10, r25
    1670:	09 c0       	rjmp	.+18     	; 0x1684 <vfprintf+0x300>
    1672:	a2 fe       	sbrs	r10, 2
    1674:	06 c0       	rjmp	.+12     	; 0x1682 <vfprintf+0x2fe>
    1676:	b3 94       	inc	r11
    1678:	b3 94       	inc	r11
    167a:	04 c0       	rjmp	.+8      	; 0x1684 <vfprintf+0x300>
    167c:	8a 2d       	mov	r24, r10
    167e:	86 78       	andi	r24, 0x86	; 134
    1680:	09 f0       	breq	.+2      	; 0x1684 <vfprintf+0x300>
    1682:	b3 94       	inc	r11
    1684:	a3 fc       	sbrc	r10, 3
    1686:	11 c0       	rjmp	.+34     	; 0x16aa <vfprintf+0x326>
    1688:	a0 fe       	sbrs	r10, 0
    168a:	06 c0       	rjmp	.+12     	; 0x1698 <vfprintf+0x314>
    168c:	b2 14       	cp	r11, r2
    168e:	88 f4       	brcc	.+34     	; 0x16b2 <vfprintf+0x32e>
    1690:	28 0c       	add	r2, r8
    1692:	92 2c       	mov	r9, r2
    1694:	9b 18       	sub	r9, r11
    1696:	0e c0       	rjmp	.+28     	; 0x16b4 <vfprintf+0x330>
    1698:	b2 14       	cp	r11, r2
    169a:	60 f4       	brcc	.+24     	; 0x16b4 <vfprintf+0x330>
    169c:	b6 01       	movw	r22, r12
    169e:	80 e2       	ldi	r24, 0x20	; 32
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    16a6:	b3 94       	inc	r11
    16a8:	f7 cf       	rjmp	.-18     	; 0x1698 <vfprintf+0x314>
    16aa:	b2 14       	cp	r11, r2
    16ac:	18 f4       	brcc	.+6      	; 0x16b4 <vfprintf+0x330>
    16ae:	2b 18       	sub	r2, r11
    16b0:	02 c0       	rjmp	.+4      	; 0x16b6 <vfprintf+0x332>
    16b2:	98 2c       	mov	r9, r8
    16b4:	21 2c       	mov	r2, r1
    16b6:	a4 fe       	sbrs	r10, 4
    16b8:	10 c0       	rjmp	.+32     	; 0x16da <vfprintf+0x356>
    16ba:	b6 01       	movw	r22, r12
    16bc:	80 e3       	ldi	r24, 0x30	; 48
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    16c4:	a2 fe       	sbrs	r10, 2
    16c6:	17 c0       	rjmp	.+46     	; 0x16f6 <vfprintf+0x372>
    16c8:	a1 fc       	sbrc	r10, 1
    16ca:	03 c0       	rjmp	.+6      	; 0x16d2 <vfprintf+0x34e>
    16cc:	88 e7       	ldi	r24, 0x78	; 120
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	02 c0       	rjmp	.+4      	; 0x16d6 <vfprintf+0x352>
    16d2:	88 e5       	ldi	r24, 0x58	; 88
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	b6 01       	movw	r22, r12
    16d8:	0c c0       	rjmp	.+24     	; 0x16f2 <vfprintf+0x36e>
    16da:	8a 2d       	mov	r24, r10
    16dc:	86 78       	andi	r24, 0x86	; 134
    16de:	59 f0       	breq	.+22     	; 0x16f6 <vfprintf+0x372>
    16e0:	a1 fe       	sbrs	r10, 1
    16e2:	02 c0       	rjmp	.+4      	; 0x16e8 <vfprintf+0x364>
    16e4:	8b e2       	ldi	r24, 0x2B	; 43
    16e6:	01 c0       	rjmp	.+2      	; 0x16ea <vfprintf+0x366>
    16e8:	80 e2       	ldi	r24, 0x20	; 32
    16ea:	a7 fc       	sbrc	r10, 7
    16ec:	8d e2       	ldi	r24, 0x2D	; 45
    16ee:	b6 01       	movw	r22, r12
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    16f6:	89 14       	cp	r8, r9
    16f8:	38 f4       	brcc	.+14     	; 0x1708 <vfprintf+0x384>
    16fa:	b6 01       	movw	r22, r12
    16fc:	80 e3       	ldi	r24, 0x30	; 48
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    1704:	9a 94       	dec	r9
    1706:	f7 cf       	rjmp	.-18     	; 0x16f6 <vfprintf+0x372>
    1708:	8a 94       	dec	r8
    170a:	f3 01       	movw	r30, r6
    170c:	e8 0d       	add	r30, r8
    170e:	f1 1d       	adc	r31, r1
    1710:	80 81       	ld	r24, Z
    1712:	b6 01       	movw	r22, r12
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    171a:	81 10       	cpse	r8, r1
    171c:	f5 cf       	rjmp	.-22     	; 0x1708 <vfprintf+0x384>
    171e:	22 20       	and	r2, r2
    1720:	09 f4       	brne	.+2      	; 0x1724 <vfprintf+0x3a0>
    1722:	42 ce       	rjmp	.-892    	; 0x13a8 <vfprintf+0x24>
    1724:	b6 01       	movw	r22, r12
    1726:	80 e2       	ldi	r24, 0x20	; 32
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	0e 94 bc 0b 	call	0x1778	; 0x1778 <fputc>
    172e:	2a 94       	dec	r2
    1730:	f6 cf       	rjmp	.-20     	; 0x171e <vfprintf+0x39a>
    1732:	f6 01       	movw	r30, r12
    1734:	86 81       	ldd	r24, Z+6	; 0x06
    1736:	97 81       	ldd	r25, Z+7	; 0x07
    1738:	02 c0       	rjmp	.+4      	; 0x173e <vfprintf+0x3ba>
    173a:	8f ef       	ldi	r24, 0xFF	; 255
    173c:	9f ef       	ldi	r25, 0xFF	; 255
    173e:	2b 96       	adiw	r28, 0x0b	; 11
    1740:	e2 e1       	ldi	r30, 0x12	; 18
    1742:	0c 94 ac 0c 	jmp	0x1958	; 0x1958 <__epilogue_restores__>

00001746 <__ctype_isfalse>:
    1746:	99 27       	eor	r25, r25
    1748:	88 27       	eor	r24, r24

0000174a <__ctype_istrue>:
    174a:	08 95       	ret

0000174c <strnlen_P>:
    174c:	fc 01       	movw	r30, r24
    174e:	05 90       	lpm	r0, Z+
    1750:	61 50       	subi	r22, 0x01	; 1
    1752:	70 40       	sbci	r23, 0x00	; 0
    1754:	01 10       	cpse	r0, r1
    1756:	d8 f7       	brcc	.-10     	; 0x174e <strnlen_P+0x2>
    1758:	80 95       	com	r24
    175a:	90 95       	com	r25
    175c:	8e 0f       	add	r24, r30
    175e:	9f 1f       	adc	r25, r31
    1760:	08 95       	ret

00001762 <strnlen>:
    1762:	fc 01       	movw	r30, r24
    1764:	61 50       	subi	r22, 0x01	; 1
    1766:	70 40       	sbci	r23, 0x00	; 0
    1768:	01 90       	ld	r0, Z+
    176a:	01 10       	cpse	r0, r1
    176c:	d8 f7       	brcc	.-10     	; 0x1764 <strnlen+0x2>
    176e:	80 95       	com	r24
    1770:	90 95       	com	r25
    1772:	8e 0f       	add	r24, r30
    1774:	9f 1f       	adc	r25, r31
    1776:	08 95       	ret

00001778 <fputc>:
    1778:	0f 93       	push	r16
    177a:	1f 93       	push	r17
    177c:	cf 93       	push	r28
    177e:	df 93       	push	r29
    1780:	fb 01       	movw	r30, r22
    1782:	23 81       	ldd	r18, Z+3	; 0x03
    1784:	21 fd       	sbrc	r18, 1
    1786:	03 c0       	rjmp	.+6      	; 0x178e <fputc+0x16>
    1788:	8f ef       	ldi	r24, 0xFF	; 255
    178a:	9f ef       	ldi	r25, 0xFF	; 255
    178c:	2c c0       	rjmp	.+88     	; 0x17e6 <fputc+0x6e>
    178e:	22 ff       	sbrs	r18, 2
    1790:	16 c0       	rjmp	.+44     	; 0x17be <fputc+0x46>
    1792:	46 81       	ldd	r20, Z+6	; 0x06
    1794:	57 81       	ldd	r21, Z+7	; 0x07
    1796:	24 81       	ldd	r18, Z+4	; 0x04
    1798:	35 81       	ldd	r19, Z+5	; 0x05
    179a:	42 17       	cp	r20, r18
    179c:	53 07       	cpc	r21, r19
    179e:	44 f4       	brge	.+16     	; 0x17b0 <fputc+0x38>
    17a0:	a0 81       	ld	r26, Z
    17a2:	b1 81       	ldd	r27, Z+1	; 0x01
    17a4:	9d 01       	movw	r18, r26
    17a6:	2f 5f       	subi	r18, 0xFF	; 255
    17a8:	3f 4f       	sbci	r19, 0xFF	; 255
    17aa:	20 83       	st	Z, r18
    17ac:	31 83       	std	Z+1, r19	; 0x01
    17ae:	8c 93       	st	X, r24
    17b0:	26 81       	ldd	r18, Z+6	; 0x06
    17b2:	37 81       	ldd	r19, Z+7	; 0x07
    17b4:	2f 5f       	subi	r18, 0xFF	; 255
    17b6:	3f 4f       	sbci	r19, 0xFF	; 255
    17b8:	26 83       	std	Z+6, r18	; 0x06
    17ba:	37 83       	std	Z+7, r19	; 0x07
    17bc:	14 c0       	rjmp	.+40     	; 0x17e6 <fputc+0x6e>
    17be:	8b 01       	movw	r16, r22
    17c0:	ec 01       	movw	r28, r24
    17c2:	fb 01       	movw	r30, r22
    17c4:	00 84       	ldd	r0, Z+8	; 0x08
    17c6:	f1 85       	ldd	r31, Z+9	; 0x09
    17c8:	e0 2d       	mov	r30, r0
    17ca:	09 95       	icall
    17cc:	89 2b       	or	r24, r25
    17ce:	e1 f6       	brne	.-72     	; 0x1788 <fputc+0x10>
    17d0:	d8 01       	movw	r26, r16
    17d2:	16 96       	adiw	r26, 0x06	; 6
    17d4:	8d 91       	ld	r24, X+
    17d6:	9c 91       	ld	r25, X
    17d8:	17 97       	sbiw	r26, 0x07	; 7
    17da:	01 96       	adiw	r24, 0x01	; 1
    17dc:	16 96       	adiw	r26, 0x06	; 6
    17de:	8d 93       	st	X+, r24
    17e0:	9c 93       	st	X, r25
    17e2:	17 97       	sbiw	r26, 0x07	; 7
    17e4:	ce 01       	movw	r24, r28
    17e6:	df 91       	pop	r29
    17e8:	cf 91       	pop	r28
    17ea:	1f 91       	pop	r17
    17ec:	0f 91       	pop	r16
    17ee:	08 95       	ret

000017f0 <__ultoa_invert>:
    17f0:	fa 01       	movw	r30, r20
    17f2:	aa 27       	eor	r26, r26
    17f4:	28 30       	cpi	r18, 0x08	; 8
    17f6:	51 f1       	breq	.+84     	; 0x184c <__DATA_REGION_LENGTH__+0x4c>
    17f8:	20 31       	cpi	r18, 0x10	; 16
    17fa:	81 f1       	breq	.+96     	; 0x185c <__DATA_REGION_LENGTH__+0x5c>
    17fc:	e8 94       	clt
    17fe:	6f 93       	push	r22
    1800:	6e 7f       	andi	r22, 0xFE	; 254
    1802:	6e 5f       	subi	r22, 0xFE	; 254
    1804:	7f 4f       	sbci	r23, 0xFF	; 255
    1806:	8f 4f       	sbci	r24, 0xFF	; 255
    1808:	9f 4f       	sbci	r25, 0xFF	; 255
    180a:	af 4f       	sbci	r26, 0xFF	; 255
    180c:	b1 e0       	ldi	r27, 0x01	; 1
    180e:	3e d0       	rcall	.+124    	; 0x188c <__DATA_REGION_LENGTH__+0x8c>
    1810:	b4 e0       	ldi	r27, 0x04	; 4
    1812:	3c d0       	rcall	.+120    	; 0x188c <__DATA_REGION_LENGTH__+0x8c>
    1814:	67 0f       	add	r22, r23
    1816:	78 1f       	adc	r23, r24
    1818:	89 1f       	adc	r24, r25
    181a:	9a 1f       	adc	r25, r26
    181c:	a1 1d       	adc	r26, r1
    181e:	68 0f       	add	r22, r24
    1820:	79 1f       	adc	r23, r25
    1822:	8a 1f       	adc	r24, r26
    1824:	91 1d       	adc	r25, r1
    1826:	a1 1d       	adc	r26, r1
    1828:	6a 0f       	add	r22, r26
    182a:	71 1d       	adc	r23, r1
    182c:	81 1d       	adc	r24, r1
    182e:	91 1d       	adc	r25, r1
    1830:	a1 1d       	adc	r26, r1
    1832:	20 d0       	rcall	.+64     	; 0x1874 <__DATA_REGION_LENGTH__+0x74>
    1834:	09 f4       	brne	.+2      	; 0x1838 <__DATA_REGION_LENGTH__+0x38>
    1836:	68 94       	set
    1838:	3f 91       	pop	r19
    183a:	2a e0       	ldi	r18, 0x0A	; 10
    183c:	26 9f       	mul	r18, r22
    183e:	11 24       	eor	r1, r1
    1840:	30 19       	sub	r19, r0
    1842:	30 5d       	subi	r19, 0xD0	; 208
    1844:	31 93       	st	Z+, r19
    1846:	de f6       	brtc	.-74     	; 0x17fe <__ultoa_invert+0xe>
    1848:	cf 01       	movw	r24, r30
    184a:	08 95       	ret
    184c:	46 2f       	mov	r20, r22
    184e:	47 70       	andi	r20, 0x07	; 7
    1850:	40 5d       	subi	r20, 0xD0	; 208
    1852:	41 93       	st	Z+, r20
    1854:	b3 e0       	ldi	r27, 0x03	; 3
    1856:	0f d0       	rcall	.+30     	; 0x1876 <__DATA_REGION_LENGTH__+0x76>
    1858:	c9 f7       	brne	.-14     	; 0x184c <__DATA_REGION_LENGTH__+0x4c>
    185a:	f6 cf       	rjmp	.-20     	; 0x1848 <__DATA_REGION_LENGTH__+0x48>
    185c:	46 2f       	mov	r20, r22
    185e:	4f 70       	andi	r20, 0x0F	; 15
    1860:	40 5d       	subi	r20, 0xD0	; 208
    1862:	4a 33       	cpi	r20, 0x3A	; 58
    1864:	18 f0       	brcs	.+6      	; 0x186c <__DATA_REGION_LENGTH__+0x6c>
    1866:	49 5d       	subi	r20, 0xD9	; 217
    1868:	31 fd       	sbrc	r19, 1
    186a:	40 52       	subi	r20, 0x20	; 32
    186c:	41 93       	st	Z+, r20
    186e:	02 d0       	rcall	.+4      	; 0x1874 <__DATA_REGION_LENGTH__+0x74>
    1870:	a9 f7       	brne	.-22     	; 0x185c <__DATA_REGION_LENGTH__+0x5c>
    1872:	ea cf       	rjmp	.-44     	; 0x1848 <__DATA_REGION_LENGTH__+0x48>
    1874:	b4 e0       	ldi	r27, 0x04	; 4
    1876:	a6 95       	lsr	r26
    1878:	97 95       	ror	r25
    187a:	87 95       	ror	r24
    187c:	77 95       	ror	r23
    187e:	67 95       	ror	r22
    1880:	ba 95       	dec	r27
    1882:	c9 f7       	brne	.-14     	; 0x1876 <__DATA_REGION_LENGTH__+0x76>
    1884:	00 97       	sbiw	r24, 0x00	; 0
    1886:	61 05       	cpc	r22, r1
    1888:	71 05       	cpc	r23, r1
    188a:	08 95       	ret
    188c:	9b 01       	movw	r18, r22
    188e:	ac 01       	movw	r20, r24
    1890:	0a 2e       	mov	r0, r26
    1892:	06 94       	lsr	r0
    1894:	57 95       	ror	r21
    1896:	47 95       	ror	r20
    1898:	37 95       	ror	r19
    189a:	27 95       	ror	r18
    189c:	ba 95       	dec	r27
    189e:	c9 f7       	brne	.-14     	; 0x1892 <__DATA_REGION_LENGTH__+0x92>
    18a0:	62 0f       	add	r22, r18
    18a2:	73 1f       	adc	r23, r19
    18a4:	84 1f       	adc	r24, r20
    18a6:	95 1f       	adc	r25, r21
    18a8:	a0 1d       	adc	r26, r0
    18aa:	08 95       	ret

000018ac <__mulsi3>:
    18ac:	db 01       	movw	r26, r22
    18ae:	8f 93       	push	r24
    18b0:	9f 93       	push	r25
    18b2:	0e 94 88 0c 	call	0x1910	; 0x1910 <__muluhisi3>
    18b6:	bf 91       	pop	r27
    18b8:	af 91       	pop	r26
    18ba:	a2 9f       	mul	r26, r18
    18bc:	80 0d       	add	r24, r0
    18be:	91 1d       	adc	r25, r1
    18c0:	a3 9f       	mul	r26, r19
    18c2:	90 0d       	add	r25, r0
    18c4:	b2 9f       	mul	r27, r18
    18c6:	90 0d       	add	r25, r0
    18c8:	11 24       	eor	r1, r1
    18ca:	08 95       	ret

000018cc <__udivmodsi4>:
    18cc:	a1 e2       	ldi	r26, 0x21	; 33
    18ce:	1a 2e       	mov	r1, r26
    18d0:	aa 1b       	sub	r26, r26
    18d2:	bb 1b       	sub	r27, r27
    18d4:	fd 01       	movw	r30, r26
    18d6:	0d c0       	rjmp	.+26     	; 0x18f2 <__udivmodsi4_ep>

000018d8 <__udivmodsi4_loop>:
    18d8:	aa 1f       	adc	r26, r26
    18da:	bb 1f       	adc	r27, r27
    18dc:	ee 1f       	adc	r30, r30
    18de:	ff 1f       	adc	r31, r31
    18e0:	a2 17       	cp	r26, r18
    18e2:	b3 07       	cpc	r27, r19
    18e4:	e4 07       	cpc	r30, r20
    18e6:	f5 07       	cpc	r31, r21
    18e8:	20 f0       	brcs	.+8      	; 0x18f2 <__udivmodsi4_ep>
    18ea:	a2 1b       	sub	r26, r18
    18ec:	b3 0b       	sbc	r27, r19
    18ee:	e4 0b       	sbc	r30, r20
    18f0:	f5 0b       	sbc	r31, r21

000018f2 <__udivmodsi4_ep>:
    18f2:	66 1f       	adc	r22, r22
    18f4:	77 1f       	adc	r23, r23
    18f6:	88 1f       	adc	r24, r24
    18f8:	99 1f       	adc	r25, r25
    18fa:	1a 94       	dec	r1
    18fc:	69 f7       	brne	.-38     	; 0x18d8 <__udivmodsi4_loop>
    18fe:	60 95       	com	r22
    1900:	70 95       	com	r23
    1902:	80 95       	com	r24
    1904:	90 95       	com	r25
    1906:	9b 01       	movw	r18, r22
    1908:	ac 01       	movw	r20, r24
    190a:	bd 01       	movw	r22, r26
    190c:	cf 01       	movw	r24, r30
    190e:	08 95       	ret

00001910 <__muluhisi3>:
    1910:	0e 94 ff 07 	call	0xffe	; 0xffe <__umulhisi3>
    1914:	a5 9f       	mul	r26, r21
    1916:	90 0d       	add	r25, r0
    1918:	b4 9f       	mul	r27, r20
    191a:	90 0d       	add	r25, r0
    191c:	a4 9f       	mul	r26, r20
    191e:	80 0d       	add	r24, r0
    1920:	91 1d       	adc	r25, r1
    1922:	11 24       	eor	r1, r1
    1924:	08 95       	ret

00001926 <__prologue_saves__>:
    1926:	2f 92       	push	r2
    1928:	3f 92       	push	r3
    192a:	4f 92       	push	r4
    192c:	5f 92       	push	r5
    192e:	6f 92       	push	r6
    1930:	7f 92       	push	r7
    1932:	8f 92       	push	r8
    1934:	9f 92       	push	r9
    1936:	af 92       	push	r10
    1938:	bf 92       	push	r11
    193a:	cf 92       	push	r12
    193c:	df 92       	push	r13
    193e:	ef 92       	push	r14
    1940:	ff 92       	push	r15
    1942:	0f 93       	push	r16
    1944:	1f 93       	push	r17
    1946:	cf 93       	push	r28
    1948:	df 93       	push	r29
    194a:	cd b7       	in	r28, 0x3d	; 61
    194c:	de b7       	in	r29, 0x3e	; 62
    194e:	ca 1b       	sub	r28, r26
    1950:	db 0b       	sbc	r29, r27
    1952:	cd bf       	out	0x3d, r28	; 61
    1954:	de bf       	out	0x3e, r29	; 62
    1956:	09 94       	ijmp

00001958 <__epilogue_restores__>:
    1958:	2a 88       	ldd	r2, Y+18	; 0x12
    195a:	39 88       	ldd	r3, Y+17	; 0x11
    195c:	48 88       	ldd	r4, Y+16	; 0x10
    195e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1960:	6e 84       	ldd	r6, Y+14	; 0x0e
    1962:	7d 84       	ldd	r7, Y+13	; 0x0d
    1964:	8c 84       	ldd	r8, Y+12	; 0x0c
    1966:	9b 84       	ldd	r9, Y+11	; 0x0b
    1968:	aa 84       	ldd	r10, Y+10	; 0x0a
    196a:	b9 84       	ldd	r11, Y+9	; 0x09
    196c:	c8 84       	ldd	r12, Y+8	; 0x08
    196e:	df 80       	ldd	r13, Y+7	; 0x07
    1970:	ee 80       	ldd	r14, Y+6	; 0x06
    1972:	fd 80       	ldd	r15, Y+5	; 0x05
    1974:	0c 81       	ldd	r16, Y+4	; 0x04
    1976:	1b 81       	ldd	r17, Y+3	; 0x03
    1978:	aa 81       	ldd	r26, Y+2	; 0x02
    197a:	b9 81       	ldd	r27, Y+1	; 0x01
    197c:	ce 0f       	add	r28, r30
    197e:	d1 1d       	adc	r29, r1
    1980:	cd bf       	out	0x3d, r28	; 61
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	ed 01       	movw	r28, r26
    1986:	08 95       	ret

00001988 <_exit>:
    1988:	f8 94       	cli

0000198a <__stop_program>:
    198a:	ff cf       	rjmp	.-2      	; 0x198a <__stop_program>
