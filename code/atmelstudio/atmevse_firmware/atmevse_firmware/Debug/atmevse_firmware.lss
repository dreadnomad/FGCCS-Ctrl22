
atmevse_firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00802800  0000174f  00001803  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000151c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000233  0000551c  0000151c  000015d0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000004e  0080287a  0080287a  0000187d  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  0000187d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018dc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000158  00000000  00000000  0000191c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004987  00000000  00000000  00001a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002895  00000000  00000000  000063fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dee  00000000  00000000  00008c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003b0  00000000  00000000  00009a80  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000020fb  00000000  00000000  00009e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000ba2  00000000  00000000  0000bf2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000128  00000000  00000000  0000cacd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__vector_20>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf ef       	ldi	r28, 0xFF	; 255
      96:	cd bf       	out	0x3d, r28	; 61
      98:	df e3       	ldi	r29, 0x3F	; 63
      9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
      9c:	18 e2       	ldi	r17, 0x28	; 40
      9e:	a0 e0       	ldi	r26, 0x00	; 0
      a0:	b8 e2       	ldi	r27, 0x28	; 40
      a2:	ef e4       	ldi	r30, 0x4F	; 79
      a4:	f7 e1       	ldi	r31, 0x17	; 23
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 37       	cpi	r26, 0x7A	; 122
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	28 e2       	ldi	r18, 0x28	; 40
      b4:	aa e7       	ldi	r26, 0x7A	; 122
      b6:	b8 e2       	ldi	r27, 0x28	; 40
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 3c       	cpi	r26, 0xC8	; 200
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 8e 01 	call	0x31c	; 0x31c <main>
      c6:	0c 94 8c 0a 	jmp	0x1518	; 0x1518 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <led_toggle>:
        ;
    }
    uint16_t adcVal = ADC0.RES;
    ADC0.INTFLAGS = ADC_RESRDY_bm;
    return adcVal;
}
      ce:	88 e0       	ldi	r24, 0x08	; 8
      d0:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x700467>
      d4:	80 e0       	ldi	r24, 0x00	; 0
      d6:	08 95       	ret

000000d8 <led_on>:
      d8:	88 e0       	ldi	r24, 0x08	; 8
      da:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__TEXT_REGION_LENGTH__+0x700465>
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	08 95       	ret

000000e2 <led_off>:
      e2:	88 e0       	ldi	r24, 0x08	; 8
      e4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x700466>
      e8:	80 e0       	ldi	r24, 0x00	; 0
      ea:	08 95       	ret

000000ec <pwm_on>:
      ec:	e0 e0       	ldi	r30, 0x00	; 0
      ee:	fa e0       	ldi	r31, 0x0A	; 10
      f0:	81 81       	ldd	r24, Z+1	; 0x01
      f2:	80 64       	ori	r24, 0x40	; 64
      f4:	81 83       	std	Z+1, r24	; 0x01
      f6:	80 e0       	ldi	r24, 0x00	; 0
      f8:	08 95       	ret

000000fa <pwm_off>:
      fa:	e0 e0       	ldi	r30, 0x00	; 0
      fc:	fa e0       	ldi	r31, 0x0A	; 10
      fe:	81 81       	ldd	r24, Z+1	; 0x01
     100:	8f 7b       	andi	r24, 0xBF	; 191
     102:	81 83       	std	Z+1, r24	; 0x01
     104:	80 e0       	ldi	r24, 0x00	; 0
     106:	08 95       	ret

00000108 <ssr1_on>:
     108:	80 e4       	ldi	r24, 0x40	; 64
     10a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	08 95       	ret

00000112 <ssr1_off>:
     112:	80 e4       	ldi	r24, 0x40	; 64
     114:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x700406>
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	08 95       	ret

0000011c <ssr2_on>:
     11c:	80 e2       	ldi	r24, 0x20	; 32
     11e:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
     122:	80 e0       	ldi	r24, 0x00	; 0
     124:	08 95       	ret

00000126 <ssr2_off>:
     126:	80 e2       	ldi	r24, 0x20	; 32
     128:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x700406>
     12c:	80 e0       	ldi	r24, 0x00	; 0
     12e:	08 95       	ret

00000130 <ssr3_on>:
     130:	80 e1       	ldi	r24, 0x10	; 16
     132:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	08 95       	ret

0000013a <ssr3_off>:
     13a:	80 e1       	ldi	r24, 0x10	; 16
     13c:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x700406>
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	08 95       	ret

00000144 <lock_off>:
     144:	80 e8       	ldi	r24, 0x80	; 128
     146:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
     14a:	84 e0       	ldi	r24, 0x04	; 4
     14c:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x700445>
     150:	80 e0       	ldi	r24, 0x00	; 0
     152:	08 95       	ret

00000154 <relay_on>:
     154:	88 e0       	ldi	r24, 0x08	; 8
     156:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	08 95       	ret

0000015e <relay_off>:
     15e:	88 e0       	ldi	r24, 0x08	; 8
     160:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x700406>
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	08 95       	ret

00000168 <lock>:
     168:	80 e8       	ldi	r24, 0x80	; 128
     16a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x700405>
     16e:	84 e0       	ldi	r24, 0x04	; 4
     170:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <__TEXT_REGION_LENGTH__+0x700446>
     174:	2f eb       	ldi	r18, 0xBF	; 191
     176:	87 e2       	ldi	r24, 0x27	; 39
     178:	99 e0       	ldi	r25, 0x09	; 9
     17a:	21 50       	subi	r18, 0x01	; 1
     17c:	80 40       	sbci	r24, 0x00	; 0
     17e:	90 40       	sbci	r25, 0x00	; 0
     180:	e1 f7       	brne	.-8      	; 0x17a <lock+0x12>
     182:	00 c0       	rjmp	.+0      	; 0x184 <lock+0x1c>
     184:	00 00       	nop
     186:	0e 94 a2 00 	call	0x144	; 0x144 <lock_off>
     18a:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x700468>
     18e:	91 e0       	ldi	r25, 0x01	; 1
     190:	28 2f       	mov	r18, r24
     192:	24 70       	andi	r18, 0x04	; 4
     194:	82 ff       	sbrs	r24, 2
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	90 93 7c 28 	sts	0x287C, r25	; 0x80287c <lockstate>
     19c:	21 11       	cpse	r18, r1
     19e:	02 c0       	rjmp	.+4      	; 0x1a4 <lock+0x3c>
     1a0:	8e ef       	ldi	r24, 0xFE	; 254
     1a2:	08 95       	ret
     1a4:	80 e0       	ldi	r24, 0x00	; 0
     1a6:	08 95       	ret

000001a8 <unlock>:
     1a8:	80 e8       	ldi	r24, 0x80	; 128
     1aa:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x700406>
     1ae:	84 e0       	ldi	r24, 0x04	; 4
     1b0:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x700445>
     1b4:	2f eb       	ldi	r18, 0xBF	; 191
     1b6:	87 e2       	ldi	r24, 0x27	; 39
     1b8:	99 e0       	ldi	r25, 0x09	; 9
     1ba:	21 50       	subi	r18, 0x01	; 1
     1bc:	80 40       	sbci	r24, 0x00	; 0
     1be:	90 40       	sbci	r25, 0x00	; 0
     1c0:	e1 f7       	brne	.-8      	; 0x1ba <unlock+0x12>
     1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <unlock+0x1c>
     1c4:	00 00       	nop
     1c6:	0e 94 a2 00 	call	0x144	; 0x144 <lock_off>
     1ca:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x700468>
     1ce:	91 e0       	ldi	r25, 0x01	; 1
     1d0:	28 2f       	mov	r18, r24
     1d2:	24 70       	andi	r18, 0x04	; 4
     1d4:	82 ff       	sbrs	r24, 2
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	90 93 7c 28 	sts	0x287C, r25	; 0x80287c <lockstate>
     1dc:	22 23       	and	r18, r18
     1de:	11 f0       	breq	.+4      	; 0x1e4 <unlock+0x3c>
     1e0:	8e ef       	ldi	r24, 0xFE	; 254
     1e2:	08 95       	ret
     1e4:	80 e0       	ldi	r24, 0x00	; 0
     1e6:	08 95       	ret

000001e8 <__vector_20>:
     1e8:	1f 92       	push	r1
     1ea:	0f 92       	push	r0
     1ec:	0f b6       	in	r0, 0x3f	; 63
     1ee:	0f 92       	push	r0
     1f0:	11 24       	eor	r1, r1
     1f2:	8f 93       	push	r24
     1f4:	9f 93       	push	r25
     1f6:	ef 93       	push	r30
     1f8:	ff 93       	push	r31
     1fa:	81 e0       	ldi	r24, 0x01	; 1
     1fc:	90 91 7d 28 	lds	r25, 0x287D	; 0x80287d <buttonstate>
     200:	91 11       	cpse	r25, r1
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	80 93 7d 28 	sts	0x287D, r24	; 0x80287d <buttonstate>
     208:	e0 e6       	ldi	r30, 0x60	; 96
     20a:	f4 e0       	ldi	r31, 0x04	; 4
     20c:	81 85       	ldd	r24, Z+9	; 0x09
     20e:	80 61       	ori	r24, 0x10	; 16
     210:	81 87       	std	Z+9, r24	; 0x09
     212:	ff 91       	pop	r31
     214:	ef 91       	pop	r30
     216:	9f 91       	pop	r25
     218:	8f 91       	pop	r24
     21a:	0f 90       	pop	r0
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	0f 90       	pop	r0
     220:	1f 90       	pop	r1
     222:	18 95       	reti

00000224 <init>:
     224:	1f 93       	push	r17
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	98 ed       	ldi	r25, 0xD8	; 216
     22c:	94 bf       	out	0x34, r25	; 52
     22e:	e0 e1       	ldi	r30, 0x10	; 16
     230:	f1 e0       	ldi	r31, 0x01	; 1
     232:	80 81       	ld	r24, Z
     234:	8f 7b       	andi	r24, 0xBF	; 191
     236:	80 83       	st	Z, r24
     238:	94 bf       	out	0x34, r25	; 52
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
     240:	8f ef       	ldi	r24, 0xFF	; 255
     242:	9f ef       	ldi	r25, 0xFF	; 255
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <init+0x20>
     248:	a0 e6       	ldi	r26, 0x60	; 96
     24a:	b4 e0       	ldi	r27, 0x04	; 4
     24c:	88 e0       	ldi	r24, 0x08	; 8
     24e:	11 96       	adiw	r26, 0x01	; 1
     250:	8c 93       	st	X, r24
     252:	11 97       	sbiw	r26, 0x01	; 1
     254:	90 e1       	ldi	r25, 0x10	; 16
     256:	12 96       	adiw	r26, 0x02	; 2
     258:	9c 93       	st	X, r25
     25a:	12 97       	sbiw	r26, 0x02	; 2
     25c:	54 96       	adiw	r26, 0x14	; 20
     25e:	9c 91       	ld	r25, X
     260:	54 97       	sbiw	r26, 0x14	; 20
     262:	92 60       	ori	r25, 0x02	; 2
     264:	54 96       	adiw	r26, 0x14	; 20
     266:	9c 93       	st	X, r25
     268:	54 97       	sbiw	r26, 0x14	; 20
     26a:	e0 e0       	ldi	r30, 0x00	; 0
     26c:	f4 e0       	ldi	r31, 0x04	; 4
     26e:	90 e7       	ldi	r25, 0x70	; 112
     270:	91 83       	std	Z+1, r25	; 0x01
     272:	96 83       	std	Z+6, r25	; 0x06
     274:	81 83       	std	Z+1, r24	; 0x01
     276:	86 83       	std	Z+6, r24	; 0x06
     278:	80 e8       	ldi	r24, 0x80	; 128
     27a:	81 83       	std	Z+1, r24	; 0x01
     27c:	85 83       	std	Z+5, r24	; 0x05
     27e:	c0 e4       	ldi	r28, 0x40	; 64
     280:	d4 e0       	ldi	r29, 0x04	; 4
     282:	84 e0       	ldi	r24, 0x04	; 4
     284:	89 83       	std	Y+1, r24	; 0x01
     286:	8d 83       	std	Y+5, r24	; 0x05
     288:	12 96       	adiw	r26, 0x02	; 2
     28a:	8c 93       	st	X, r24
     28c:	12 97       	sbiw	r26, 0x02	; 2
     28e:	52 96       	adiw	r26, 0x12	; 18
     290:	9c 91       	ld	r25, X
     292:	52 97       	sbiw	r26, 0x12	; 18
     294:	52 96       	adiw	r26, 0x12	; 18
     296:	9c 93       	st	X, r25
     298:	52 97       	sbiw	r26, 0x12	; 18
     29a:	90 ee       	ldi	r25, 0xE0	; 224
     29c:	12 96       	adiw	r26, 0x02	; 2
     29e:	9c 93       	st	X, r25
     2a0:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7005e4>
     2a4:	81 83       	std	Z+1, r24	; 0x01
     2a6:	85 83       	std	Z+5, r24	; 0x05
     2a8:	c0 e0       	ldi	r28, 0x00	; 0
     2aa:	da e0       	ldi	r29, 0x0A	; 10
     2ac:	88 81       	ld	r24, Y
     2ae:	87 60       	ori	r24, 0x07	; 7
     2b0:	88 83       	st	Y, r24
     2b2:	89 81       	ldd	r24, Y+1	; 0x01
     2b4:	87 60       	ori	r24, 0x07	; 7
     2b6:	89 83       	std	Y+1, r24	; 0x01
     2b8:	89 85       	ldd	r24, Y+9	; 0x09
     2ba:	8e 7f       	andi	r24, 0xFE	; 254
     2bc:	89 87       	std	Y+9, r24	; 0x09
     2be:	81 e7       	ldi	r24, 0x71	; 113
     2c0:	92 e0       	ldi	r25, 0x02	; 2
     2c2:	8e ab       	std	Y+54, r24	; 0x36
     2c4:	9f ab       	std	Y+55, r25	; 0x37
     2c6:	10 91 6a 28 	lds	r17, 0x286A	; 0x80286a <duty_cycle>
     2ca:	61 2f       	mov	r22, r17
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 ce 04 	call	0x99c	; 0x99c <__floatsisf>
     2d6:	2a e0       	ldi	r18, 0x0A	; 10
     2d8:	37 ed       	ldi	r19, 0xD7	; 215
     2da:	43 e2       	ldi	r20, 0x23	; 35
     2dc:	5c e3       	ldi	r21, 0x3C	; 60
     2de:	0e 94 32 05 	call	0xa64	; 0xa64 <__mulsf3>
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e4       	ldi	r19, 0x40	; 64
     2e6:	4c e1       	ldi	r20, 0x1C	; 28
     2e8:	54 e4       	ldi	r21, 0x44	; 68
     2ea:	0e 94 32 05 	call	0xa64	; 0xa64 <__mulsf3>
     2ee:	0e 94 9d 04 	call	0x93a	; 0x93a <__fixunssfsi>
     2f2:	6c af       	std	Y+60, r22	; 0x3c
     2f4:	7d af       	std	Y+61, r23	; 0x3d
     2f6:	10 93 bb 28 	sts	0x28BB, r17	; 0x8028bb <duty_cycle_old>
     2fa:	89 81       	ldd	r24, Y+1	; 0x01
     2fc:	8f 7b       	andi	r24, 0xBF	; 191
     2fe:	89 83       	std	Y+1, r24	; 0x01
     300:	e0 e0       	ldi	r30, 0x00	; 0
     302:	f6 e0       	ldi	r31, 0x06	; 6
     304:	82 81       	ldd	r24, Z+2	; 0x02
     306:	81 61       	ori	r24, 0x11	; 17
     308:	82 83       	std	Z+2, r24	; 0x02
     30a:	80 81       	ld	r24, Z
     30c:	81 60       	ori	r24, 0x01	; 1
     30e:	80 83       	st	Z, r24
     310:	0e 94 40 04 	call	0x880	; 0x880 <uart_init>
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	1f 91       	pop	r17
     31a:	08 95       	ret

0000031c <main>:

/*
    Application
    *************************************************/
int main(void) {
    init();
     31c:	0e 94 12 01 	call	0x224	; 0x224 <init>
    sei();
     320:	78 94       	sei
    printf("test\r\n");
     322:	8c e1       	ldi	r24, 0x1C	; 28
     324:	95 e5       	ldi	r25, 0x55	; 85
     326:	0e 94 1b 07 	call	0xe36	; 0xe36 <puts>
    char *input;
    while (1) {
        input = uart0_readLine();
        cmd_parse(input);
        lockstate = (PORTD.IN & LOCK_B) ? 1 : 0;
     32a:	c0 e6       	ldi	r28, 0x60	; 96
     32c:	d4 e0       	ldi	r29, 0x04	; 4
    init();
    sei();
    printf("test\r\n");
    char *input;
    while (1) {
        input = uart0_readLine();
     32e:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <uart0_readLine>
        cmd_parse(input);
     332:	0e 94 aa 02 	call	0x554	; 0x554 <cmd_parse>
        lockstate = (PORTD.IN & LOCK_B) ? 1 : 0;
     336:	88 85       	ldd	r24, Y+8	; 0x08
     338:	82 fb       	bst	r24, 2
     33a:	88 27       	eor	r24, r24
     33c:	80 f9       	bld	r24, 0
     33e:	80 93 7c 28 	sts	0x287C, r24	; 0x80287c <lockstate>
     342:	f5 cf       	rjmp	.-22     	; 0x32e <main+0x12>

00000344 <cmd_exec>:
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
     344:	24 e0       	ldi	r18, 0x04	; 4
     346:	82 9f       	mul	r24, r18
     348:	c0 01       	movw	r24, r0
     34a:	11 24       	eor	r1, r1
     34c:	fc 01       	movw	r30, r24
     34e:	e2 5e       	subi	r30, 0xE2	; 226
     350:	f7 4d       	sbci	r31, 0xD7	; 215
     352:	02 80       	ldd	r0, Z+2	; 0x02
     354:	f3 81       	ldd	r31, Z+3	; 0x03
     356:	e0 2d       	mov	r30, r0
     358:	30 97       	sbiw	r30, 0x00	; 0
     35a:	11 f0       	breq	.+4      	; 0x360 <cmd_exec+0x1c>
        retval = cmd_table[index].cmd_func_ptr();
     35c:	09 95       	icall
     35e:	08 95       	ret
                int8_t cmd_func();
                Excepted are system commands, which are used to deal with parameter get/set operations and status reports.
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
     360:	8e ef       	ldi	r24, 0xFE	; 254
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}
     362:	08 95       	ret

00000364 <param_get>:
        return retval;
    }
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
     364:	af 92       	push	r10
     366:	bf 92       	push	r11
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	0f 93       	push	r16
     372:	1f 93       	push	r17
     374:	cf 93       	push	r28
     376:	df 93       	push	r29
     378:	5c 01       	movw	r10, r24
     37a:	8b 01       	movw	r16, r22
     37c:	0f 2e       	mov	r0, r31
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	cf 2e       	mov	r12, r31
     382:	f8 e2       	ldi	r31, 0x28	; 40
     384:	df 2e       	mov	r13, r31
     386:	f0 2d       	mov	r31, r0
     388:	e1 2c       	mov	r14, r1
     38a:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < PARAM_NO; i++) {
        if (strcmp((const char *)param_string, (const char *)param_table[i].param) == 0) {
     38c:	e7 01       	movw	r28, r14
     38e:	f6 01       	movw	r30, r12
     390:	60 81       	ld	r22, Z
     392:	71 81       	ldd	r23, Z+1	; 0x01
     394:	c5 01       	movw	r24, r10
     396:	0e 94 d5 06 	call	0xdaa	; 0xdaa <strcmp>
     39a:	89 2b       	or	r24, r25
     39c:	09 f0       	breq	.+2      	; 0x3a0 <param_get+0x3c>
     39e:	4a c0       	rjmp	.+148    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
            cli();
     3a0:	f8 94       	cli
            switch (param_table[i].size) {                      // cast pointer to the correct data type according to param table size info
     3a2:	f7 01       	movw	r30, r14
     3a4:	ee 0f       	add	r30, r30
     3a6:	ff 1f       	adc	r31, r31
     3a8:	ee 0f       	add	r30, r30
     3aa:	ff 1f       	adc	r31, r31
     3ac:	ee 0d       	add	r30, r14
     3ae:	ff 1d       	adc	r31, r15
     3b0:	e0 50       	subi	r30, 0x00	; 0
     3b2:	f8 4d       	sbci	r31, 0xD8	; 216
     3b4:	84 81       	ldd	r24, Z+4	; 0x04
     3b6:	80 31       	cpi	r24, 0x10	; 16
     3b8:	89 f0       	breq	.+34     	; 0x3dc <param_get+0x78>
     3ba:	80 32       	cpi	r24, 0x20	; 32
     3bc:	21 f1       	breq	.+72     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3be:	88 30       	cpi	r24, 0x08	; 8
     3c0:	b1 f5       	brne	.+108    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
            case 8:
                *param_value = *(uint8_t *)param_table[i].value;
     3c2:	02 80       	ldd	r0, Z+2	; 0x02
     3c4:	f3 81       	ldd	r31, Z+3	; 0x03
     3c6:	e0 2d       	mov	r30, r0
     3c8:	80 81       	ld	r24, Z
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	a0 e0       	ldi	r26, 0x00	; 0
     3ce:	b0 e0       	ldi	r27, 0x00	; 0
     3d0:	f8 01       	movw	r30, r16
     3d2:	80 83       	st	Z, r24
     3d4:	91 83       	std	Z+1, r25	; 0x01
     3d6:	a2 83       	std	Z+2, r26	; 0x02
     3d8:	b3 83       	std	Z+3, r27	; 0x03
            	break;
     3da:	29 c0       	rjmp	.+82     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
            case 16:
                *param_value = *(uint16_t *)param_table[i].value;
     3dc:	c7 01       	movw	r24, r14
     3de:	88 0f       	add	r24, r24
     3e0:	99 1f       	adc	r25, r25
     3e2:	88 0f       	add	r24, r24
     3e4:	99 1f       	adc	r25, r25
     3e6:	c8 0f       	add	r28, r24
     3e8:	d9 1f       	adc	r29, r25
     3ea:	c0 50       	subi	r28, 0x00	; 0
     3ec:	d8 4d       	sbci	r29, 0xD8	; 216
     3ee:	ea 81       	ldd	r30, Y+2	; 0x02
     3f0:	fb 81       	ldd	r31, Y+3	; 0x03
     3f2:	80 81       	ld	r24, Z
     3f4:	91 81       	ldd	r25, Z+1	; 0x01
     3f6:	a0 e0       	ldi	r26, 0x00	; 0
     3f8:	b0 e0       	ldi	r27, 0x00	; 0
     3fa:	f8 01       	movw	r30, r16
     3fc:	80 83       	st	Z, r24
     3fe:	91 83       	std	Z+1, r25	; 0x01
     400:	a2 83       	std	Z+2, r26	; 0x02
     402:	b3 83       	std	Z+3, r27	; 0x03
                break;
     404:	14 c0       	rjmp	.+40     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
            case 32:
                *param_value = *(uint32_t *)param_table[i].value;
     406:	c7 01       	movw	r24, r14
     408:	88 0f       	add	r24, r24
     40a:	99 1f       	adc	r25, r25
     40c:	88 0f       	add	r24, r24
     40e:	99 1f       	adc	r25, r25
     410:	c8 0f       	add	r28, r24
     412:	d9 1f       	adc	r29, r25
     414:	c0 50       	subi	r28, 0x00	; 0
     416:	d8 4d       	sbci	r29, 0xD8	; 216
     418:	ea 81       	ldd	r30, Y+2	; 0x02
     41a:	fb 81       	ldd	r31, Y+3	; 0x03
     41c:	80 81       	ld	r24, Z
     41e:	91 81       	ldd	r25, Z+1	; 0x01
     420:	a2 81       	ldd	r26, Z+2	; 0x02
     422:	b3 81       	ldd	r27, Z+3	; 0x03
     424:	f8 01       	movw	r30, r16
     426:	80 83       	st	Z, r24
     428:	91 83       	std	Z+1, r25	; 0x01
     42a:	a2 83       	std	Z+2, r26	; 0x02
     42c:	b3 83       	std	Z+3, r27	; 0x03
                break;               
            }
            sei();
     42e:	78 94       	sei
            i = PARAM_NO;                                   // exit loop
            retval = 0;
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	0c c0       	rjmp	.+24     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     434:	ff ef       	ldi	r31, 0xFF	; 255
     436:	ef 1a       	sub	r14, r31
     438:	ff 0a       	sbc	r15, r31
     43a:	85 e0       	ldi	r24, 0x05	; 5
     43c:	c8 0e       	add	r12, r24
     43e:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < PARAM_NO; i++) {
     440:	e6 e0       	ldi	r30, 0x06	; 6
     442:	ee 16       	cp	r14, r30
     444:	f1 04       	cpc	r15, r1
     446:	09 f0       	breq	.+2      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     448:	a1 cf       	rjmp	.-190    	; 0x38c <param_get+0x28>
     44a:	8c ef       	ldi	r24, 0xFC	; 252
            i = PARAM_NO;                                   // exit loop
            retval = 0;
        }
    }
    return retval;
}
     44c:	df 91       	pop	r29
     44e:	cf 91       	pop	r28
     450:	1f 91       	pop	r17
     452:	0f 91       	pop	r16
     454:	ff 90       	pop	r15
     456:	ef 90       	pop	r14
     458:	df 90       	pop	r13
     45a:	cf 90       	pop	r12
     45c:	bf 90       	pop	r11
     45e:	af 90       	pop	r10
     460:	08 95       	ret

00000462 <param_set>:

int8_t param_set(char *param_string, void *param_new_val_ptr) {
     462:	af 92       	push	r10
     464:	bf 92       	push	r11
     466:	cf 92       	push	r12
     468:	df 92       	push	r13
     46a:	ef 92       	push	r14
     46c:	ff 92       	push	r15
     46e:	0f 93       	push	r16
     470:	1f 93       	push	r17
     472:	cf 93       	push	r28
     474:	df 93       	push	r29
     476:	5c 01       	movw	r10, r24
     478:	8b 01       	movw	r16, r22
     47a:	0f 2e       	mov	r0, r31
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	cf 2e       	mov	r12, r31
     480:	f8 e2       	ldi	r31, 0x28	; 40
     482:	df 2e       	mov	r13, r31
     484:	f0 2d       	mov	r31, r0
     486:	e1 2c       	mov	r14, r1
     488:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < PARAM_NO; i++) {
        if (strcmp(param_string, param_table[i].param) == 0) {
     48a:	e7 01       	movw	r28, r14
     48c:	d6 01       	movw	r26, r12
     48e:	6d 91       	ld	r22, X+
     490:	7c 91       	ld	r23, X
     492:	c5 01       	movw	r24, r10
     494:	0e 94 d5 06 	call	0xdaa	; 0xdaa <strcmp>
     498:	89 2b       	or	r24, r25
     49a:	09 f0       	breq	.+2      	; 0x49e <param_set+0x3c>
     49c:	44 c0       	rjmp	.+136    	; 0x526 <param_set+0xc4>
            cli();
     49e:	f8 94       	cli
            switch (param_table[i].size) {                                           // cast pointer to the correct data type according to param table size info
     4a0:	f7 01       	movw	r30, r14
     4a2:	ee 0f       	add	r30, r30
     4a4:	ff 1f       	adc	r31, r31
     4a6:	ee 0f       	add	r30, r30
     4a8:	ff 1f       	adc	r31, r31
     4aa:	ee 0d       	add	r30, r14
     4ac:	ff 1d       	adc	r31, r15
     4ae:	e0 50       	subi	r30, 0x00	; 0
     4b0:	f8 4d       	sbci	r31, 0xD8	; 216
     4b2:	84 81       	ldd	r24, Z+4	; 0x04
     4b4:	80 31       	cpi	r24, 0x10	; 16
     4b6:	61 f0       	breq	.+24     	; 0x4d0 <param_set+0x6e>
     4b8:	80 32       	cpi	r24, 0x20	; 32
     4ba:	e1 f0       	breq	.+56     	; 0x4f4 <param_set+0x92>
     4bc:	88 30       	cpi	r24, 0x08	; 8
     4be:	81 f5       	brne	.+96     	; 0x520 <param_set+0xbe>
            case 8:
                *(uint8_t *)param_table[i].value = *(uint8_t *)param_new_val_ptr;
     4c0:	02 80       	ldd	r0, Z+2	; 0x02
     4c2:	f3 81       	ldd	r31, Z+3	; 0x03
     4c4:	e0 2d       	mov	r30, r0
     4c6:	e8 01       	movw	r28, r16
     4c8:	88 81       	ld	r24, Y
     4ca:	80 83       	st	Z, r24
                retval = 0;
     4cc:	80 e0       	ldi	r24, 0x00	; 0
            	break;
     4ce:	29 c0       	rjmp	.+82     	; 0x522 <param_set+0xc0>
            case 16:
                *(uint16_t *)param_table[i].value = *(uint16_t *)param_new_val_ptr;
     4d0:	c7 01       	movw	r24, r14
     4d2:	88 0f       	add	r24, r24
     4d4:	99 1f       	adc	r25, r25
     4d6:	88 0f       	add	r24, r24
     4d8:	99 1f       	adc	r25, r25
     4da:	c8 0f       	add	r28, r24
     4dc:	d9 1f       	adc	r29, r25
     4de:	c0 50       	subi	r28, 0x00	; 0
     4e0:	d8 4d       	sbci	r29, 0xD8	; 216
     4e2:	ea 81       	ldd	r30, Y+2	; 0x02
     4e4:	fb 81       	ldd	r31, Y+3	; 0x03
     4e6:	d8 01       	movw	r26, r16
     4e8:	8d 91       	ld	r24, X+
     4ea:	9c 91       	ld	r25, X
     4ec:	80 83       	st	Z, r24
     4ee:	91 83       	std	Z+1, r25	; 0x01
                retval = 0;
     4f0:	80 e0       	ldi	r24, 0x00	; 0
                break;
     4f2:	17 c0       	rjmp	.+46     	; 0x522 <param_set+0xc0>
            case 32:
                *(uint32_t *)param_table[i].value = *(uint32_t *)param_new_val_ptr;
     4f4:	c7 01       	movw	r24, r14
     4f6:	88 0f       	add	r24, r24
     4f8:	99 1f       	adc	r25, r25
     4fa:	88 0f       	add	r24, r24
     4fc:	99 1f       	adc	r25, r25
     4fe:	c8 0f       	add	r28, r24
     500:	d9 1f       	adc	r29, r25
     502:	c0 50       	subi	r28, 0x00	; 0
     504:	d8 4d       	sbci	r29, 0xD8	; 216
     506:	ea 81       	ldd	r30, Y+2	; 0x02
     508:	fb 81       	ldd	r31, Y+3	; 0x03
     50a:	e8 01       	movw	r28, r16
     50c:	88 81       	ld	r24, Y
     50e:	99 81       	ldd	r25, Y+1	; 0x01
     510:	aa 81       	ldd	r26, Y+2	; 0x02
     512:	bb 81       	ldd	r27, Y+3	; 0x03
     514:	80 83       	st	Z, r24
     516:	91 83       	std	Z+1, r25	; 0x01
     518:	a2 83       	std	Z+2, r26	; 0x02
     51a:	b3 83       	std	Z+3, r27	; 0x03
                retval = 0;
     51c:	80 e0       	ldi	r24, 0x00	; 0
                break; 
     51e:	01 c0       	rjmp	.+2      	; 0x522 <param_set+0xc0>
            default:
                retval = -3;                                                // default return value -3 -> invalid value size               
     520:	8d ef       	ldi	r24, 0xFD	; 253
            }
            sei();
     522:	78 94       	sei
     524:	0c c0       	rjmp	.+24     	; 0x53e <param_set+0xdc>
     526:	df ef       	ldi	r29, 0xFF	; 255
     528:	ed 1a       	sub	r14, r29
     52a:	fd 0a       	sbc	r15, r29
     52c:	e5 e0       	ldi	r30, 0x05	; 5
     52e:	ce 0e       	add	r12, r30
     530:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_set(char *param_string, void *param_new_val_ptr) {
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < PARAM_NO; i++) {
     532:	f6 e0       	ldi	r31, 0x06	; 6
     534:	ef 16       	cp	r14, r31
     536:	f1 04       	cpc	r15, r1
     538:	09 f0       	breq	.+2      	; 0x53c <param_set+0xda>
     53a:	a7 cf       	rjmp	.-178    	; 0x48a <param_set+0x28>
     53c:	8c ef       	ldi	r24, 0xFC	; 252
            sei();
            i = PARAM_NO;                                               // exit loop
        }
    }
    return retval;
}
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	1f 91       	pop	r17
     544:	0f 91       	pop	r16
     546:	ff 90       	pop	r15
     548:	ef 90       	pop	r14
     54a:	df 90       	pop	r13
     54c:	cf 90       	pop	r12
     54e:	bf 90       	pop	r11
     550:	af 90       	pop	r10
     552:	08 95       	ret

00000554 <cmd_parse>:
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     554:	bf 92       	push	r11
     556:	cf 92       	push	r12
     558:	df 92       	push	r13
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	cd b7       	in	r28, 0x3d	; 61
     568:	de b7       	in	r29, 0x3e	; 62
     56a:	28 97       	sbiw	r28, 0x08	; 8
     56c:	cd bf       	out	0x3d, r28	; 61
     56e:	de bf       	out	0x3e, r29	; 62
     570:	6c 01       	movw	r12, r24
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
     572:	6b ef       	ldi	r22, 0xFB	; 251
     574:	75 e5       	ldi	r23, 0x55	; 85
     576:	0e 94 d5 06 	call	0xdaa	; 0xdaa <strcmp>
     57a:	89 2b       	or	r24, r25
     57c:	09 f4       	brne	.+2      	; 0x580 <cmd_parse+0x2c>
     57e:	db c0       	rjmp	.+438    	; 0x736 <cmd_parse+0x1e2>
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
     580:	6f e3       	ldi	r22, 0x3F	; 63
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	c6 01       	movw	r24, r12
     586:	0e 94 ca 06 	call	0xd94	; 0xd94 <strchr>
     58a:	89 2b       	or	r24, r25
     58c:	61 f1       	breq	.+88     	; 0x5e6 <cmd_parse+0x92>
        command = "param_get";                      
        param = strtok(string, "?");
     58e:	6c ef       	ldi	r22, 0xFC	; 252
     590:	75 e5       	ldi	r23, 0x55	; 85
     592:	c6 01       	movw	r24, r12
     594:	0e 94 c5 06 	call	0xd8a	; 0xd8a <strtok>
     598:	e8 2e       	mov	r14, r24
     59a:	b9 2e       	mov	r11, r25
        is_param_op = 1;
        uint32_t param_val = 0;
     59c:	19 82       	std	Y+1, r1	; 0x01
     59e:	1a 82       	std	Y+2, r1	; 0x02
     5a0:	1b 82       	std	Y+3, r1	; 0x03
     5a2:	1c 82       	std	Y+4, r1	; 0x04
        retval = param_get(param, &param_val);
     5a4:	be 01       	movw	r22, r28
     5a6:	6f 5f       	subi	r22, 0xFF	; 255
     5a8:	7f 4f       	sbci	r23, 0xFF	; 255
     5aa:	0e 94 b2 01 	call	0x364	; 0x364 <param_get>
     5ae:	18 2f       	mov	r17, r24
        if (retval == 0) {
     5b0:	81 11       	cpse	r24, r1
     5b2:	12 c0       	rjmp	.+36     	; 0x5d8 <cmd_parse+0x84>
            printf("%s = %"PRIu32"\r\n", param, param_val);               
     5b4:	8c 81       	ldd	r24, Y+4	; 0x04
     5b6:	8f 93       	push	r24
     5b8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ba:	8f 93       	push	r24
     5bc:	8a 81       	ldd	r24, Y+2	; 0x02
     5be:	8f 93       	push	r24
     5c0:	89 81       	ldd	r24, Y+1	; 0x01
     5c2:	8f 93       	push	r24
     5c4:	bf 92       	push	r11
     5c6:	ef 92       	push	r14
     5c8:	8b ef       	ldi	r24, 0xFB	; 251
     5ca:	96 e5       	ldi	r25, 0x56	; 86
     5cc:	9f 93       	push	r25
     5ce:	8f 93       	push	r24
     5d0:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
     5d4:	cd bf       	out	0x3d, r28	; 61
     5d6:	de bf       	out	0x3e, r29	; 62
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
        command = "param_get";                      
     5d8:	0f 2e       	mov	r0, r31
     5da:	f8 e6       	ldi	r31, 0x68	; 104
     5dc:	cf 2e       	mov	r12, r31
     5de:	f5 e5       	ldi	r31, 0x55	; 85
     5e0:	df 2e       	mov	r13, r31
     5e2:	f0 2d       	mov	r31, r0
     5e4:	62 c0       	rjmp	.+196    	; 0x6aa <cmd_parse+0x156>
        if (retval == 0) {
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
     5e6:	6d e3       	ldi	r22, 0x3D	; 61
     5e8:	70 e0       	ldi	r23, 0x00	; 0
     5ea:	c6 01       	movw	r24, r12
     5ec:	0e 94 ca 06 	call	0xd94	; 0xd94 <strchr>
     5f0:	89 2b       	or	r24, r25
     5f2:	09 f4       	brne	.+2      	; 0x5f6 <cmd_parse+0xa2>
     5f4:	a6 c0       	rjmp	.+332    	; 0x742 <cmd_parse+0x1ee>
        command = "param_set";
        is_param_op = 1;
        param = strtok(string, "=");
     5f6:	6e ef       	ldi	r22, 0xFE	; 254
     5f8:	75 e5       	ldi	r23, 0x55	; 85
     5fa:	c6 01       	movw	r24, r12
     5fc:	0e 94 c5 06 	call	0xd8a	; 0xd8a <strtok>
     600:	e8 2e       	mov	r14, r24
     602:	b9 2e       	mov	r11, r25
        char *str_value = strtok(NULL, "=");
     604:	6e ef       	ldi	r22, 0xFE	; 254
     606:	75 e5       	ldi	r23, 0x55	; 85
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	0e 94 c5 06 	call	0xd8a	; 0xd8a <strtok>
        uint32_t value = (uint32_t)strtoul(str_value, NULL, 0);
     610:	40 e0       	ldi	r20, 0x00	; 0
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	60 e0       	ldi	r22, 0x00	; 0
     616:	70 e0       	ldi	r23, 0x00	; 0
     618:	0e 94 c7 05 	call	0xb8e	; 0xb8e <strtoul>
     61c:	6d 83       	std	Y+5, r22	; 0x05
     61e:	7e 83       	std	Y+6, r23	; 0x06
     620:	8f 83       	std	Y+7, r24	; 0x07
     622:	98 87       	std	Y+8, r25	; 0x08
        retval = param_set(param, &value);
     624:	be 01       	movw	r22, r28
     626:	6b 5f       	subi	r22, 0xFB	; 251
     628:	7f 4f       	sbci	r23, 0xFF	; 255
     62a:	8e 2d       	mov	r24, r14
     62c:	9b 2d       	mov	r25, r11
     62e:	0e 94 31 02 	call	0x462	; 0x462 <param_set>
     632:	18 2f       	mov	r17, r24
        if (retval == 0) {
     634:	81 11       	cpse	r24, r1
     636:	1d c0       	rjmp	.+58     	; 0x672 <cmd_parse+0x11e>
            uint32_t param_val = 0;
     638:	19 82       	std	Y+1, r1	; 0x01
     63a:	1a 82       	std	Y+2, r1	; 0x02
     63c:	1b 82       	std	Y+3, r1	; 0x03
     63e:	1c 82       	std	Y+4, r1	; 0x04
            param_get(param, &param_val);        
     640:	be 01       	movw	r22, r28
     642:	6f 5f       	subi	r22, 0xFF	; 255
     644:	7f 4f       	sbci	r23, 0xFF	; 255
     646:	8e 2d       	mov	r24, r14
     648:	9b 2d       	mov	r25, r11
     64a:	0e 94 b2 01 	call	0x364	; 0x364 <param_get>
            printf("%s = %"PRIu32"\r\n", param, param_val);
     64e:	8c 81       	ldd	r24, Y+4	; 0x04
     650:	8f 93       	push	r24
     652:	8b 81       	ldd	r24, Y+3	; 0x03
     654:	8f 93       	push	r24
     656:	8a 81       	ldd	r24, Y+2	; 0x02
     658:	8f 93       	push	r24
     65a:	89 81       	ldd	r24, Y+1	; 0x01
     65c:	8f 93       	push	r24
     65e:	bf 92       	push	r11
     660:	ef 92       	push	r14
     662:	8b ef       	ldi	r24, 0xFB	; 251
     664:	96 e5       	ldi	r25, 0x56	; 86
     666:	9f 93       	push	r25
     668:	8f 93       	push	r24
     66a:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
     66e:	cd bf       	out	0x3d, r28	; 61
     670:	de bf       	out	0x3e, r29	; 62
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
        command = "param_set";
     672:	0f 2e       	mov	r0, r31
     674:	f2 e7       	ldi	r31, 0x72	; 114
     676:	cf 2e       	mov	r12, r31
     678:	f5 e5       	ldi	r31, 0x55	; 85
     67a:	df 2e       	mov	r13, r31
     67c:	f0 2d       	mov	r31, r0
     67e:	15 c0       	rjmp	.+42     	; 0x6aa <cmd_parse+0x156>
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < CMD_NO; i++) {
            if (strcmp(command, cmd_table[i].cmd) == 0) {
     680:	f8 01       	movw	r30, r16
     682:	60 81       	ld	r22, Z
     684:	71 81       	ldd	r23, Z+1	; 0x01
     686:	c6 01       	movw	r24, r12
     688:	0e 94 d5 06 	call	0xdaa	; 0xdaa <strcmp>
     68c:	89 2b       	or	r24, r25
     68e:	29 f4       	brne	.+10     	; 0x69a <cmd_parse+0x146>
                retval = cmd_exec(i);
     690:	8f 2d       	mov	r24, r15
     692:	0e 94 a2 01 	call	0x344	; 0x344 <cmd_exec>
     696:	18 2f       	mov	r17, r24
     698:	08 c0       	rjmp	.+16     	; 0x6aa <cmd_parse+0x156>
            param_get(param, &param_val);        
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < CMD_NO; i++) {
     69a:	f3 94       	inc	r15
     69c:	0c 5f       	subi	r16, 0xFC	; 252
     69e:	1f 4f       	sbci	r17, 0xFF	; 255
     6a0:	f3 e1       	ldi	r31, 0x13	; 19
     6a2:	ff 12       	cpse	r15, r31
     6a4:	ed cf       	rjmp	.-38     	; 0x680 <cmd_parse+0x12c>
     6a6:	1f ef       	ldi	r17, 0xFF	; 255
     6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <cmd_parse+0x170>
                i = CMD_NO;                             // exit loop
            }
	    } 
    }
    
    switch (retval) {                                   // select appropriate feedback to return
     6aa:	1e 3f       	cpi	r17, 0xFE	; 254
     6ac:	c1 f0       	breq	.+48     	; 0x6de <cmd_parse+0x18a>
     6ae:	2c f4       	brge	.+10     	; 0x6ba <cmd_parse+0x166>
     6b0:	1c 3f       	cpi	r17, 0xFC	; 252
     6b2:	79 f1       	breq	.+94     	; 0x712 <cmd_parse+0x1be>
     6b4:	1d 3f       	cpi	r17, 0xFD	; 253
     6b6:	01 f1       	breq	.+64     	; 0x6f8 <cmd_parse+0x1a4>
     6b8:	48 c0       	rjmp	.+144    	; 0x74a <cmd_parse+0x1f6>
     6ba:	1f 3f       	cpi	r17, 0xFF	; 255
     6bc:	19 f0       	breq	.+6      	; 0x6c4 <cmd_parse+0x170>
     6be:	11 23       	and	r17, r17
     6c0:	a9 f1       	breq	.+106    	; 0x72c <cmd_parse+0x1d8>
     6c2:	43 c0       	rjmp	.+134    	; 0x74a <cmd_parse+0x1f6>
    case -1:
        printf("FAIL. Command %s not found in command table!\r\n", command);
     6c4:	df 92       	push	r13
     6c6:	cf 92       	push	r12
     6c8:	80 e0       	ldi	r24, 0x00	; 0
     6ca:	96 e5       	ldi	r25, 0x56	; 86
     6cc:	9f 93       	push	r25
     6ce:	8f 93       	push	r24
     6d0:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
    	return retval;
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	36 c0       	rjmp	.+108    	; 0x74a <cmd_parse+0x1f6>
    case -2:
        printf("FAIL. Failed to execute command %s!\r\n", command);
     6de:	df 92       	push	r13
     6e0:	cf 92       	push	r12
     6e2:	8f e2       	ldi	r24, 0x2F	; 47
     6e4:	96 e5       	ldi	r25, 0x56	; 86
     6e6:	9f 93       	push	r25
     6e8:	8f 93       	push	r24
     6ea:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
        return retval;
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	0f 90       	pop	r0
     6f6:	29 c0       	rjmp	.+82     	; 0x74a <cmd_parse+0x1f6>
    case -3:
        printf("FAIL. Invalid options/parameters for command %s!\r\n", command);
     6f8:	df 92       	push	r13
     6fa:	cf 92       	push	r12
     6fc:	85 e5       	ldi	r24, 0x55	; 85
     6fe:	96 e5       	ldi	r25, 0x56	; 86
     700:	9f 93       	push	r25
     702:	8f 93       	push	r24
     704:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
        return retval;
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	1c c0       	rjmp	.+56     	; 0x74a <cmd_parse+0x1f6>
    case -4:
        printf("FAIL. Parameter %s not found in parameter table!\r\n", param);
     712:	bf 92       	push	r11
     714:	ef 92       	push	r14
     716:	88 e8       	ldi	r24, 0x88	; 136
     718:	96 e5       	ldi	r25, 0x56	; 86
     71a:	9f 93       	push	r25
     71c:	8f 93       	push	r24
     71e:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
        return retval;
     722:	0f 90       	pop	r0
     724:	0f 90       	pop	r0
     726:	0f 90       	pop	r0
     728:	0f 90       	pop	r0
     72a:	0f c0       	rjmp	.+30     	; 0x74a <cmd_parse+0x1f6>
    case 0:
        printf("OK.\r\n");
     72c:	8b eb       	ldi	r24, 0xBB	; 187
     72e:	96 e5       	ldi	r25, 0x56	; 86
     730:	0e 94 1b 07 	call	0xe36	; 0xe36 <puts>
        return retval;
     734:	0a c0       	rjmp	.+20     	; 0x74a <cmd_parse+0x1f6>
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
     736:	0f 2e       	mov	r0, r31
     738:	f1 e6       	ldi	r31, 0x61	; 97
     73a:	cf 2e       	mov	r12, r31
     73c:	f5 e5       	ldi	r31, 0x55	; 85
     73e:	df 2e       	mov	r13, r31
     740:	f0 2d       	mov	r31, r0
     742:	0e e1       	ldi	r16, 0x1E	; 30
     744:	18 e2       	ldi	r17, 0x28	; 40
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     746:	f1 2c       	mov	r15, r1
     748:	9b cf       	rjmp	.-202    	; 0x680 <cmd_parse+0x12c>
    case 0:
        printf("OK.\r\n");
        return retval;
    }
    return retval;
}
     74a:	81 2f       	mov	r24, r17
     74c:	28 96       	adiw	r28, 0x08	; 8
     74e:	cd bf       	out	0x3d, r28	; 61
     750:	de bf       	out	0x3e, r29	; 62
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	1f 91       	pop	r17
     758:	0f 91       	pop	r16
     75a:	ff 90       	pop	r15
     75c:	ef 90       	pop	r14
     75e:	df 90       	pop	r13
     760:	cf 90       	pop	r12
     762:	bf 90       	pop	r11
     764:	08 95       	ret

00000766 <sys_status>:
        }
    }
    return retval;
}

int8_t sys_status() {
     766:	cf 92       	push	r12
     768:	df 92       	push	r13
     76a:	ef 92       	push	r14
     76c:	ff 92       	push	r15
     76e:	0f 93       	push	r16
     770:	1f 93       	push	r17
     772:	cf 93       	push	r28
     774:	df 93       	push	r29
     776:	00 d0       	rcall	.+0      	; 0x778 <sys_status+0x12>
     778:	00 d0       	rcall	.+0      	; 0x77a <sys_status+0x14>
     77a:	cd b7       	in	r28, 0x3d	; 61
     77c:	de b7       	in	r29, 0x3e	; 62
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
     77e:	80 ec       	ldi	r24, 0xC0	; 192
     780:	96 e5       	ldi	r25, 0x56	; 86
     782:	0e 94 1b 07 	call	0xe36	; 0xe36 <puts>
     786:	0e e1       	ldi	r16, 0x1E	; 30
     788:	18 e2       	ldi	r17, 0x28	; 40
     78a:	0f 2e       	mov	r0, r31
     78c:	fa e6       	ldi	r31, 0x6A	; 106
     78e:	ef 2e       	mov	r14, r31
     790:	f8 e2       	ldi	r31, 0x28	; 40
     792:	ff 2e       	mov	r15, r31
     794:	f0 2d       	mov	r31, r0
    for (uint8_t i = 0; i < CMD_NO; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
     796:	0f 2e       	mov	r0, r31
     798:	f7 ed       	ldi	r31, 0xD7	; 215
     79a:	cf 2e       	mov	r12, r31
     79c:	f6 e5       	ldi	r31, 0x56	; 86
     79e:	df 2e       	mov	r13, r31
     7a0:	f0 2d       	mov	r31, r0
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < CMD_NO; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
     7a2:	d8 01       	movw	r26, r16
     7a4:	ed 91       	ld	r30, X+
     7a6:	fc 91       	ld	r31, X
        if (strcmp(cmd, "\0") != 0) {
     7a8:	80 81       	ld	r24, Z
     7aa:	88 23       	and	r24, r24
     7ac:	51 f0       	breq	.+20     	; 0x7c2 <sys_status+0x5c>
            printf("$ %s\r\n", cmd);
     7ae:	ff 93       	push	r31
     7b0:	ef 93       	push	r30
     7b2:	df 92       	push	r13
     7b4:	cf 92       	push	r12
     7b6:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
     7ba:	0f 90       	pop	r0
     7bc:	0f 90       	pop	r0
     7be:	0f 90       	pop	r0
     7c0:	0f 90       	pop	r0
     7c2:	0c 5f       	subi	r16, 0xFC	; 252
     7c4:	1f 4f       	sbci	r17, 0xFF	; 255
    return retval;
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < CMD_NO; i++) {
     7c6:	0e 15       	cp	r16, r14
     7c8:	1f 05       	cpc	r17, r15
     7ca:	59 f7       	brne	.-42     	; 0x7a2 <sys_status+0x3c>
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
     7cc:	8e ed       	ldi	r24, 0xDE	; 222
     7ce:	96 e5       	ldi	r25, 0x56	; 86
     7d0:	0e 94 1b 07 	call	0xe36	; 0xe36 <puts>
     7d4:	0f 2e       	mov	r0, r31
     7d6:	f0 e0       	ldi	r31, 0x00	; 0
     7d8:	ef 2e       	mov	r14, r31
     7da:	f8 e2       	ldi	r31, 0x28	; 40
     7dc:	ff 2e       	mov	r15, r31
     7de:	f0 2d       	mov	r31, r0
     7e0:	00 e0       	ldi	r16, 0x00	; 0
     7e2:	10 e0       	ldi	r17, 0x00	; 0
    for (uint8_t i = 0; i < PARAM_NO; i++) {
        uint32_t param_value = 0;
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     7e4:	0f 2e       	mov	r0, r31
     7e6:	f5 ef       	ldi	r31, 0xF5	; 245
     7e8:	cf 2e       	mov	r12, r31
     7ea:	f6 e5       	ldi	r31, 0x56	; 86
     7ec:	df 2e       	mov	r13, r31
     7ee:	f0 2d       	mov	r31, r0
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < PARAM_NO; i++) {
        uint32_t param_value = 0;
     7f0:	19 82       	std	Y+1, r1	; 0x01
     7f2:	1a 82       	std	Y+2, r1	; 0x02
     7f4:	1b 82       	std	Y+3, r1	; 0x03
     7f6:	1c 82       	std	Y+4, r1	; 0x04
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
     7f8:	d7 01       	movw	r26, r14
     7fa:	ed 91       	ld	r30, X+
     7fc:	fc 91       	ld	r31, X
     7fe:	80 81       	ld	r24, Z
     800:	88 23       	and	r24, r24
     802:	d9 f0       	breq	.+54     	; 0x83a <sys_status+0xd4>
            param_get(param_table[i].param, &param_value);
     804:	be 01       	movw	r22, r28
     806:	6f 5f       	subi	r22, 0xFF	; 255
     808:	7f 4f       	sbci	r23, 0xFF	; 255
     80a:	cf 01       	movw	r24, r30
     80c:	0e 94 b2 01 	call	0x364	; 0x364 <param_get>
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     810:	8c 81       	ldd	r24, Y+4	; 0x04
     812:	8f 93       	push	r24
     814:	8b 81       	ldd	r24, Y+3	; 0x03
     816:	8f 93       	push	r24
     818:	8a 81       	ldd	r24, Y+2	; 0x02
     81a:	8f 93       	push	r24
     81c:	89 81       	ldd	r24, Y+1	; 0x01
     81e:	8f 93       	push	r24
     820:	f7 01       	movw	r30, r14
     822:	81 81       	ldd	r24, Z+1	; 0x01
     824:	8f 93       	push	r24
     826:	80 81       	ld	r24, Z
     828:	8f 93       	push	r24
     82a:	1f 93       	push	r17
     82c:	0f 93       	push	r16
     82e:	df 92       	push	r13
     830:	cf 92       	push	r12
     832:	0e 94 05 07 	call	0xe0a	; 0xe0a <printf>
     836:	cd bf       	out	0x3d, r28	; 61
     838:	de bf       	out	0x3e, r29	; 62
     83a:	0f 5f       	subi	r16, 0xFF	; 255
     83c:	1f 4f       	sbci	r17, 0xFF	; 255
     83e:	95 e0       	ldi	r25, 0x05	; 5
     840:	e9 0e       	add	r14, r25
     842:	f1 1c       	adc	r15, r1
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < PARAM_NO; i++) {
     844:	06 30       	cpi	r16, 0x06	; 6
     846:	11 05       	cpc	r17, r1
     848:	99 f6       	brne	.-90     	; 0x7f0 <sys_status+0x8a>
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
        }

    }
    printf("$ Status message end #\r\n");
     84a:	86 e0       	ldi	r24, 0x06	; 6
     84c:	97 e5       	ldi	r25, 0x57	; 87
     84e:	0e 94 1b 07 	call	0xe36	; 0xe36 <puts>
    return 0;
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	24 96       	adiw	r28, 0x04	; 4
     856:	cd bf       	out	0x3d, r28	; 61
     858:	de bf       	out	0x3e, r29	; 62
     85a:	df 91       	pop	r29
     85c:	cf 91       	pop	r28
     85e:	1f 91       	pop	r17
     860:	0f 91       	pop	r16
     862:	ff 90       	pop	r15
     864:	ef 90       	pop	r14
     866:	df 90       	pop	r13
     868:	cf 90       	pop	r12
     86a:	08 95       	ret

0000086c <uart0_printChar>:
    USART1.TXDATAL = c;
    while (!(USART1.STATUS & USART_DREIF_bm)) {     // Check for completed transmission
        ;
    }
    /* Return to receiver mode */
    PORTC.OUTCLR = PIN3_bm;
     86c:	e0 e0       	ldi	r30, 0x00	; 0
     86e:	f8 e0       	ldi	r31, 0x08	; 8
     870:	94 81       	ldd	r25, Z+4	; 0x04
     872:	95 ff       	sbrs	r25, 5
     874:	fd cf       	rjmp	.-6      	; 0x870 <uart0_printChar+0x4>
     876:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x700802>
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	08 95       	ret

00000880 <uart_init>:
    Function definitions
    *************************************************/
void uart_init() {
    /* Setup stream for printf() */  
    #if USART_SEL == 0
        stdout = &uart0_stream;
     880:	8b e6       	ldi	r24, 0x6B	; 107
     882:	98 e2       	ldi	r25, 0x28	; 40
     884:	80 93 c2 28 	sts	0x28C2, r24	; 0x8028c2 <__iob+0x2>
     888:	90 93 c3 28 	sts	0x28C3, r25	; 0x8028c3 <__iob+0x3>
        stdout = &uart1_stream;
    #endif
    
    /* USART0 Config (Main comms and debug interface) */
    /* Baud rate */
    USART0.BAUD = (uint16_t)USART_BAUD_RATE(BAUD0);
     88c:	e0 e0       	ldi	r30, 0x00	; 0
     88e:	f8 e0       	ldi	r31, 0x08	; 8
     890:	8b e5       	ldi	r24, 0x5B	; 91
     892:	91 e0       	ldi	r25, 0x01	; 1
     894:	80 87       	std	Z+8, r24	; 0x08
     896:	91 87       	std	Z+9, r25	; 0x09
    /* Enable interrupts */
    USART0.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm);
     898:	85 81       	ldd	r24, Z+5	; 0x05
     89a:	80 6e       	ori	r24, 0xE0	; 224
     89c:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */
    USART0.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);
     89e:	86 81       	ldd	r24, Z+6	; 0x06
     8a0:	80 6c       	ori	r24, 0xC0	; 192
     8a2:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PA0) to output, RX(PA1) to input */
    PORTA.DIRSET = PIN0_bm;
     8a4:	e0 e0       	ldi	r30, 0x00	; 0
     8a6:	f4 e0       	ldi	r31, 0x04	; 4
     8a8:	21 e0       	ldi	r18, 0x01	; 1
     8aa:	21 83       	std	Z+1, r18	; 0x01
    PORTA.DIRCLR = PIN1_bm;
     8ac:	92 e0       	ldi	r25, 0x02	; 2
     8ae:	92 83       	std	Z+2, r25	; 0x02
                                               

    
    /* USART1 Config (RS485 interface) */
    /* Baud rate */
    USART1.BAUD = (uint16_t)USART_BAUD_RATE(BAUD1);
     8b0:	e0 e2       	ldi	r30, 0x20	; 32
     8b2:	f8 e0       	ldi	r31, 0x08	; 8
     8b4:	47 e4       	ldi	r20, 0x47	; 71
     8b6:	50 e1       	ldi	r21, 0x10	; 16
     8b8:	40 87       	std	Z+8, r20	; 0x08
     8ba:	51 87       	std	Z+9, r21	; 0x09
    /* Enable interrupts */
    USART1.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm | USART_RS485_EXT_gc); 
     8bc:	85 81       	ldd	r24, Z+5	; 0x05
     8be:	81 6e       	ori	r24, 0xE1	; 225
     8c0:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */    
    USART1.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);   
     8c2:	86 81       	ldd	r24, Z+6	; 0x06
     8c4:	80 6c       	ori	r24, 0xC0	; 192
     8c6:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PC0) and XDIR(PC3) to output, RX(PC1) to input. XDIR low ->  Receiver mode */                     
    PORTC.DIRSET = PIN0_bm;                                              
     8c8:	e0 e4       	ldi	r30, 0x40	; 64
     8ca:	f4 e0       	ldi	r31, 0x04	; 4
     8cc:	21 83       	std	Z+1, r18	; 0x01
    PORTC.DIRCLR = PIN1_bm;                                                
     8ce:	92 83       	std	Z+2, r25	; 0x02
    PORTC.DIRSET = PIN3_bm;                                                
     8d0:	88 e0       	ldi	r24, 0x08	; 8
     8d2:	81 83       	std	Z+1, r24	; 0x01
    PORTC.OUTCLR = PIN3_bm;
     8d4:	86 83       	std	Z+6, r24	; 0x06
     8d6:	08 95       	ret

000008d8 <uart0_readLine>:
    }
    return USART0.RXDATAL;
}

char * uart0_readLine() {                             // Read a single line from uart0 RX
    uint8_t index = 0;
     8d8:	a0 e0       	ldi	r26, 0x00	; 0
    uart0_sendChar(c);
    return 0;
}

static uint8_t uart0_readChar() {
    while (!(USART0.STATUS & USART_RXCIF_bm)) {
     8da:	e0 e0       	ldi	r30, 0x00	; 0
     8dc:	f8 e0       	ldi	r31, 0x08	; 8
     8de:	84 81       	ldd	r24, Z+4	; 0x04
     8e0:	88 23       	and	r24, r24
     8e2:	ec f7       	brge	.-6      	; 0x8de <uart0_readLine+0x6>
        ;
    }
    return USART0.RXDATAL;
     8e4:	80 81       	ld	r24, Z
    uint8_t index = 0;
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
     8e6:	8a 30       	cpi	r24, 0x0A	; 10
     8e8:	09 f1       	breq	.+66     	; 0x92c <uart0_readLine+0x54>
     8ea:	8d 30       	cpi	r24, 0x0D	; 13
     8ec:	c1 f3       	breq	.-16     	; 0x8de <uart0_readLine+0x6>
            buffer[index++] = c;
     8ee:	91 e0       	ldi	r25, 0x01	; 1
     8f0:	9a 0f       	add	r25, r26
     8f2:	b0 e0       	ldi	r27, 0x00	; 0
     8f4:	a1 58       	subi	r26, 0x81	; 129
     8f6:	b7 4d       	sbci	r27, 0xD7	; 215
     8f8:	8c 93       	st	X, r24
            if (index > MAX_LINE_LEN) {
     8fa:	9d 33       	cpi	r25, 0x3D	; 61
     8fc:	a8 f0       	brcs	.+42     	; 0x928 <uart0_readLine+0x50>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
     8fe:	1f 92       	push	r1
     900:	8c e3       	ldi	r24, 0x3C	; 60
     902:	8f 93       	push	r24
     904:	2e e1       	ldi	r18, 0x1E	; 30
     906:	37 e5       	ldi	r19, 0x57	; 87
     908:	3f 93       	push	r19
     90a:	2f 93       	push	r18
     90c:	1f 92       	push	r1
     90e:	8f 93       	push	r24
     910:	8f e7       	ldi	r24, 0x7F	; 127
     912:	98 e2       	ldi	r25, 0x28	; 40
     914:	9f 93       	push	r25
     916:	8f 93       	push	r24
     918:	0e 94 4b 07 	call	0xe96	; 0xe96 <snprintf>
                return buffer;
     91c:	8d b7       	in	r24, 0x3d	; 61
     91e:	9e b7       	in	r25, 0x3e	; 62
     920:	08 96       	adiw	r24, 0x08	; 8
     922:	8d bf       	out	0x3d, r24	; 61
     924:	9e bf       	out	0x3e, r25	; 62
     926:	06 c0       	rjmp	.+12     	; 0x934 <uart0_readLine+0x5c>
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
            buffer[index++] = c;
     928:	a9 2f       	mov	r26, r25
     92a:	d9 cf       	rjmp	.-78     	; 0x8de <uart0_readLine+0x6>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
                return buffer;
            }
        }        
        if (c == '\n') {
            buffer[index] = '\0';
     92c:	b0 e0       	ldi	r27, 0x00	; 0
     92e:	a1 58       	subi	r26, 0x81	; 129
     930:	b7 4d       	sbci	r27, 0xD7	; 215
     932:	1c 92       	st	X, r1
            index = 0;
            return buffer;
        }
    }
}     
     934:	8f e7       	ldi	r24, 0x7F	; 127
     936:	98 e2       	ldi	r25, 0x28	; 40
     938:	08 95       	ret

0000093a <__fixunssfsi>:
     93a:	0e 94 11 05 	call	0xa22	; 0xa22 <__fp_splitA>
     93e:	88 f0       	brcs	.+34     	; 0x962 <__fixunssfsi+0x28>
     940:	9f 57       	subi	r25, 0x7F	; 127
     942:	98 f0       	brcs	.+38     	; 0x96a <__fixunssfsi+0x30>
     944:	b9 2f       	mov	r27, r25
     946:	99 27       	eor	r25, r25
     948:	b7 51       	subi	r27, 0x17	; 23
     94a:	b0 f0       	brcs	.+44     	; 0x978 <__fixunssfsi+0x3e>
     94c:	e1 f0       	breq	.+56     	; 0x986 <__fixunssfsi+0x4c>
     94e:	66 0f       	add	r22, r22
     950:	77 1f       	adc	r23, r23
     952:	88 1f       	adc	r24, r24
     954:	99 1f       	adc	r25, r25
     956:	1a f0       	brmi	.+6      	; 0x95e <__fixunssfsi+0x24>
     958:	ba 95       	dec	r27
     95a:	c9 f7       	brne	.-14     	; 0x94e <__fixunssfsi+0x14>
     95c:	14 c0       	rjmp	.+40     	; 0x986 <__fixunssfsi+0x4c>
     95e:	b1 30       	cpi	r27, 0x01	; 1
     960:	91 f0       	breq	.+36     	; 0x986 <__fixunssfsi+0x4c>
     962:	0e 94 2b 05 	call	0xa56	; 0xa56 <__fp_zero>
     966:	b1 e0       	ldi	r27, 0x01	; 1
     968:	08 95       	ret
     96a:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_zero>
     96e:	67 2f       	mov	r22, r23
     970:	78 2f       	mov	r23, r24
     972:	88 27       	eor	r24, r24
     974:	b8 5f       	subi	r27, 0xF8	; 248
     976:	39 f0       	breq	.+14     	; 0x986 <__fixunssfsi+0x4c>
     978:	b9 3f       	cpi	r27, 0xF9	; 249
     97a:	cc f3       	brlt	.-14     	; 0x96e <__fixunssfsi+0x34>
     97c:	86 95       	lsr	r24
     97e:	77 95       	ror	r23
     980:	67 95       	ror	r22
     982:	b3 95       	inc	r27
     984:	d9 f7       	brne	.-10     	; 0x97c <__fixunssfsi+0x42>
     986:	3e f4       	brtc	.+14     	; 0x996 <__fixunssfsi+0x5c>
     988:	90 95       	com	r25
     98a:	80 95       	com	r24
     98c:	70 95       	com	r23
     98e:	61 95       	neg	r22
     990:	7f 4f       	sbci	r23, 0xFF	; 255
     992:	8f 4f       	sbci	r24, 0xFF	; 255
     994:	9f 4f       	sbci	r25, 0xFF	; 255
     996:	08 95       	ret

00000998 <__floatunsisf>:
     998:	e8 94       	clt
     99a:	09 c0       	rjmp	.+18     	; 0x9ae <__floatsisf+0x12>

0000099c <__floatsisf>:
     99c:	97 fb       	bst	r25, 7
     99e:	3e f4       	brtc	.+14     	; 0x9ae <__floatsisf+0x12>
     9a0:	90 95       	com	r25
     9a2:	80 95       	com	r24
     9a4:	70 95       	com	r23
     9a6:	61 95       	neg	r22
     9a8:	7f 4f       	sbci	r23, 0xFF	; 255
     9aa:	8f 4f       	sbci	r24, 0xFF	; 255
     9ac:	9f 4f       	sbci	r25, 0xFF	; 255
     9ae:	99 23       	and	r25, r25
     9b0:	a9 f0       	breq	.+42     	; 0x9dc <__floatsisf+0x40>
     9b2:	f9 2f       	mov	r31, r25
     9b4:	96 e9       	ldi	r25, 0x96	; 150
     9b6:	bb 27       	eor	r27, r27
     9b8:	93 95       	inc	r25
     9ba:	f6 95       	lsr	r31
     9bc:	87 95       	ror	r24
     9be:	77 95       	ror	r23
     9c0:	67 95       	ror	r22
     9c2:	b7 95       	ror	r27
     9c4:	f1 11       	cpse	r31, r1
     9c6:	f8 cf       	rjmp	.-16     	; 0x9b8 <__floatsisf+0x1c>
     9c8:	fa f4       	brpl	.+62     	; 0xa08 <__floatsisf+0x6c>
     9ca:	bb 0f       	add	r27, r27
     9cc:	11 f4       	brne	.+4      	; 0x9d2 <__floatsisf+0x36>
     9ce:	60 ff       	sbrs	r22, 0
     9d0:	1b c0       	rjmp	.+54     	; 0xa08 <__floatsisf+0x6c>
     9d2:	6f 5f       	subi	r22, 0xFF	; 255
     9d4:	7f 4f       	sbci	r23, 0xFF	; 255
     9d6:	8f 4f       	sbci	r24, 0xFF	; 255
     9d8:	9f 4f       	sbci	r25, 0xFF	; 255
     9da:	16 c0       	rjmp	.+44     	; 0xa08 <__floatsisf+0x6c>
     9dc:	88 23       	and	r24, r24
     9de:	11 f0       	breq	.+4      	; 0x9e4 <__floatsisf+0x48>
     9e0:	96 e9       	ldi	r25, 0x96	; 150
     9e2:	11 c0       	rjmp	.+34     	; 0xa06 <__floatsisf+0x6a>
     9e4:	77 23       	and	r23, r23
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatsisf+0x54>
     9e8:	9e e8       	ldi	r25, 0x8E	; 142
     9ea:	87 2f       	mov	r24, r23
     9ec:	76 2f       	mov	r23, r22
     9ee:	05 c0       	rjmp	.+10     	; 0x9fa <__floatsisf+0x5e>
     9f0:	66 23       	and	r22, r22
     9f2:	71 f0       	breq	.+28     	; 0xa10 <__floatsisf+0x74>
     9f4:	96 e8       	ldi	r25, 0x86	; 134
     9f6:	86 2f       	mov	r24, r22
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	60 e0       	ldi	r22, 0x00	; 0
     9fc:	2a f0       	brmi	.+10     	; 0xa08 <__floatsisf+0x6c>
     9fe:	9a 95       	dec	r25
     a00:	66 0f       	add	r22, r22
     a02:	77 1f       	adc	r23, r23
     a04:	88 1f       	adc	r24, r24
     a06:	da f7       	brpl	.-10     	; 0x9fe <__floatsisf+0x62>
     a08:	88 0f       	add	r24, r24
     a0a:	96 95       	lsr	r25
     a0c:	87 95       	ror	r24
     a0e:	97 f9       	bld	r25, 7
     a10:	08 95       	ret

00000a12 <__fp_split3>:
     a12:	57 fd       	sbrc	r21, 7
     a14:	90 58       	subi	r25, 0x80	; 128
     a16:	44 0f       	add	r20, r20
     a18:	55 1f       	adc	r21, r21
     a1a:	59 f0       	breq	.+22     	; 0xa32 <__fp_splitA+0x10>
     a1c:	5f 3f       	cpi	r21, 0xFF	; 255
     a1e:	71 f0       	breq	.+28     	; 0xa3c <__fp_splitA+0x1a>
     a20:	47 95       	ror	r20

00000a22 <__fp_splitA>:
     a22:	88 0f       	add	r24, r24
     a24:	97 fb       	bst	r25, 7
     a26:	99 1f       	adc	r25, r25
     a28:	61 f0       	breq	.+24     	; 0xa42 <__fp_splitA+0x20>
     a2a:	9f 3f       	cpi	r25, 0xFF	; 255
     a2c:	79 f0       	breq	.+30     	; 0xa4c <__fp_splitA+0x2a>
     a2e:	87 95       	ror	r24
     a30:	08 95       	ret
     a32:	12 16       	cp	r1, r18
     a34:	13 06       	cpc	r1, r19
     a36:	14 06       	cpc	r1, r20
     a38:	55 1f       	adc	r21, r21
     a3a:	f2 cf       	rjmp	.-28     	; 0xa20 <__fp_split3+0xe>
     a3c:	46 95       	lsr	r20
     a3e:	f1 df       	rcall	.-30     	; 0xa22 <__fp_splitA>
     a40:	08 c0       	rjmp	.+16     	; 0xa52 <__fp_splitA+0x30>
     a42:	16 16       	cp	r1, r22
     a44:	17 06       	cpc	r1, r23
     a46:	18 06       	cpc	r1, r24
     a48:	99 1f       	adc	r25, r25
     a4a:	f1 cf       	rjmp	.-30     	; 0xa2e <__fp_splitA+0xc>
     a4c:	86 95       	lsr	r24
     a4e:	71 05       	cpc	r23, r1
     a50:	61 05       	cpc	r22, r1
     a52:	08 94       	sec
     a54:	08 95       	ret

00000a56 <__fp_zero>:
     a56:	e8 94       	clt

00000a58 <__fp_szero>:
     a58:	bb 27       	eor	r27, r27
     a5a:	66 27       	eor	r22, r22
     a5c:	77 27       	eor	r23, r23
     a5e:	cb 01       	movw	r24, r22
     a60:	97 f9       	bld	r25, 7
     a62:	08 95       	ret

00000a64 <__mulsf3>:
     a64:	0e 94 45 05 	call	0xa8a	; 0xa8a <__mulsf3x>
     a68:	0c 94 b6 05 	jmp	0xb6c	; 0xb6c <__fp_round>
     a6c:	0e 94 a8 05 	call	0xb50	; 0xb50 <__fp_pscA>
     a70:	38 f0       	brcs	.+14     	; 0xa80 <__mulsf3+0x1c>
     a72:	0e 94 af 05 	call	0xb5e	; 0xb5e <__fp_pscB>
     a76:	20 f0       	brcs	.+8      	; 0xa80 <__mulsf3+0x1c>
     a78:	95 23       	and	r25, r21
     a7a:	11 f0       	breq	.+4      	; 0xa80 <__mulsf3+0x1c>
     a7c:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_inf>
     a80:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_nan>
     a84:	11 24       	eor	r1, r1
     a86:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>

00000a8a <__mulsf3x>:
     a8a:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_split3>
     a8e:	70 f3       	brcs	.-36     	; 0xa6c <__mulsf3+0x8>

00000a90 <__mulsf3_pse>:
     a90:	95 9f       	mul	r25, r21
     a92:	c1 f3       	breq	.-16     	; 0xa84 <__mulsf3+0x20>
     a94:	95 0f       	add	r25, r21
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	55 1f       	adc	r21, r21
     a9a:	62 9f       	mul	r22, r18
     a9c:	f0 01       	movw	r30, r0
     a9e:	72 9f       	mul	r23, r18
     aa0:	bb 27       	eor	r27, r27
     aa2:	f0 0d       	add	r31, r0
     aa4:	b1 1d       	adc	r27, r1
     aa6:	63 9f       	mul	r22, r19
     aa8:	aa 27       	eor	r26, r26
     aaa:	f0 0d       	add	r31, r0
     aac:	b1 1d       	adc	r27, r1
     aae:	aa 1f       	adc	r26, r26
     ab0:	64 9f       	mul	r22, r20
     ab2:	66 27       	eor	r22, r22
     ab4:	b0 0d       	add	r27, r0
     ab6:	a1 1d       	adc	r26, r1
     ab8:	66 1f       	adc	r22, r22
     aba:	82 9f       	mul	r24, r18
     abc:	22 27       	eor	r18, r18
     abe:	b0 0d       	add	r27, r0
     ac0:	a1 1d       	adc	r26, r1
     ac2:	62 1f       	adc	r22, r18
     ac4:	73 9f       	mul	r23, r19
     ac6:	b0 0d       	add	r27, r0
     ac8:	a1 1d       	adc	r26, r1
     aca:	62 1f       	adc	r22, r18
     acc:	83 9f       	mul	r24, r19
     ace:	a0 0d       	add	r26, r0
     ad0:	61 1d       	adc	r22, r1
     ad2:	22 1f       	adc	r18, r18
     ad4:	74 9f       	mul	r23, r20
     ad6:	33 27       	eor	r19, r19
     ad8:	a0 0d       	add	r26, r0
     ada:	61 1d       	adc	r22, r1
     adc:	23 1f       	adc	r18, r19
     ade:	84 9f       	mul	r24, r20
     ae0:	60 0d       	add	r22, r0
     ae2:	21 1d       	adc	r18, r1
     ae4:	82 2f       	mov	r24, r18
     ae6:	76 2f       	mov	r23, r22
     ae8:	6a 2f       	mov	r22, r26
     aea:	11 24       	eor	r1, r1
     aec:	9f 57       	subi	r25, 0x7F	; 127
     aee:	50 40       	sbci	r21, 0x00	; 0
     af0:	9a f0       	brmi	.+38     	; 0xb18 <__mulsf3_pse+0x88>
     af2:	f1 f0       	breq	.+60     	; 0xb30 <__mulsf3_pse+0xa0>
     af4:	88 23       	and	r24, r24
     af6:	4a f0       	brmi	.+18     	; 0xb0a <__mulsf3_pse+0x7a>
     af8:	ee 0f       	add	r30, r30
     afa:	ff 1f       	adc	r31, r31
     afc:	bb 1f       	adc	r27, r27
     afe:	66 1f       	adc	r22, r22
     b00:	77 1f       	adc	r23, r23
     b02:	88 1f       	adc	r24, r24
     b04:	91 50       	subi	r25, 0x01	; 1
     b06:	50 40       	sbci	r21, 0x00	; 0
     b08:	a9 f7       	brne	.-22     	; 0xaf4 <__mulsf3_pse+0x64>
     b0a:	9e 3f       	cpi	r25, 0xFE	; 254
     b0c:	51 05       	cpc	r21, r1
     b0e:	80 f0       	brcs	.+32     	; 0xb30 <__mulsf3_pse+0xa0>
     b10:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_inf>
     b14:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>
     b18:	5f 3f       	cpi	r21, 0xFF	; 255
     b1a:	e4 f3       	brlt	.-8      	; 0xb14 <__mulsf3_pse+0x84>
     b1c:	98 3e       	cpi	r25, 0xE8	; 232
     b1e:	d4 f3       	brlt	.-12     	; 0xb14 <__mulsf3_pse+0x84>
     b20:	86 95       	lsr	r24
     b22:	77 95       	ror	r23
     b24:	67 95       	ror	r22
     b26:	b7 95       	ror	r27
     b28:	f7 95       	ror	r31
     b2a:	e7 95       	ror	r30
     b2c:	9f 5f       	subi	r25, 0xFF	; 255
     b2e:	c1 f7       	brne	.-16     	; 0xb20 <__mulsf3_pse+0x90>
     b30:	fe 2b       	or	r31, r30
     b32:	88 0f       	add	r24, r24
     b34:	91 1d       	adc	r25, r1
     b36:	96 95       	lsr	r25
     b38:	87 95       	ror	r24
     b3a:	97 f9       	bld	r25, 7
     b3c:	08 95       	ret

00000b3e <__fp_inf>:
     b3e:	97 f9       	bld	r25, 7
     b40:	9f 67       	ori	r25, 0x7F	; 127
     b42:	80 e8       	ldi	r24, 0x80	; 128
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	60 e0       	ldi	r22, 0x00	; 0
     b48:	08 95       	ret

00000b4a <__fp_nan>:
     b4a:	9f ef       	ldi	r25, 0xFF	; 255
     b4c:	80 ec       	ldi	r24, 0xC0	; 192
     b4e:	08 95       	ret

00000b50 <__fp_pscA>:
     b50:	00 24       	eor	r0, r0
     b52:	0a 94       	dec	r0
     b54:	16 16       	cp	r1, r22
     b56:	17 06       	cpc	r1, r23
     b58:	18 06       	cpc	r1, r24
     b5a:	09 06       	cpc	r0, r25
     b5c:	08 95       	ret

00000b5e <__fp_pscB>:
     b5e:	00 24       	eor	r0, r0
     b60:	0a 94       	dec	r0
     b62:	12 16       	cp	r1, r18
     b64:	13 06       	cpc	r1, r19
     b66:	14 06       	cpc	r1, r20
     b68:	05 06       	cpc	r0, r21
     b6a:	08 95       	ret

00000b6c <__fp_round>:
     b6c:	09 2e       	mov	r0, r25
     b6e:	03 94       	inc	r0
     b70:	00 0c       	add	r0, r0
     b72:	11 f4       	brne	.+4      	; 0xb78 <__fp_round+0xc>
     b74:	88 23       	and	r24, r24
     b76:	52 f0       	brmi	.+20     	; 0xb8c <__fp_round+0x20>
     b78:	bb 0f       	add	r27, r27
     b7a:	40 f4       	brcc	.+16     	; 0xb8c <__fp_round+0x20>
     b7c:	bf 2b       	or	r27, r31
     b7e:	11 f4       	brne	.+4      	; 0xb84 <__fp_round+0x18>
     b80:	60 ff       	sbrs	r22, 0
     b82:	04 c0       	rjmp	.+8      	; 0xb8c <__fp_round+0x20>
     b84:	6f 5f       	subi	r22, 0xFF	; 255
     b86:	7f 4f       	sbci	r23, 0xFF	; 255
     b88:	8f 4f       	sbci	r24, 0xFF	; 255
     b8a:	9f 4f       	sbci	r25, 0xFF	; 255
     b8c:	08 95       	ret

00000b8e <strtoul>:
     b8e:	a0 e0       	ldi	r26, 0x00	; 0
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	ed ec       	ldi	r30, 0xCD	; 205
     b94:	f5 e0       	ldi	r31, 0x05	; 5
     b96:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__prologue_saves__+0x2>
     b9a:	5c 01       	movw	r10, r24
     b9c:	6b 01       	movw	r12, r22
     b9e:	7a 01       	movw	r14, r20
     ba0:	61 15       	cp	r22, r1
     ba2:	71 05       	cpc	r23, r1
     ba4:	19 f0       	breq	.+6      	; 0xbac <strtoul+0x1e>
     ba6:	fb 01       	movw	r30, r22
     ba8:	80 83       	st	Z, r24
     baa:	91 83       	std	Z+1, r25	; 0x01
     bac:	e1 14       	cp	r14, r1
     bae:	f1 04       	cpc	r15, r1
     bb0:	29 f0       	breq	.+10     	; 0xbbc <strtoul+0x2e>
     bb2:	c7 01       	movw	r24, r14
     bb4:	02 97       	sbiw	r24, 0x02	; 2
     bb6:	83 97       	sbiw	r24, 0x23	; 35
     bb8:	08 f0       	brcs	.+2      	; 0xbbc <strtoul+0x2e>
     bba:	c9 c0       	rjmp	.+402    	; 0xd4e <strtoul+0x1c0>
     bbc:	e5 01       	movw	r28, r10
     bbe:	21 96       	adiw	r28, 0x01	; 1
     bc0:	f5 01       	movw	r30, r10
     bc2:	10 81       	ld	r17, Z
     bc4:	81 2f       	mov	r24, r17
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	0e 94 bc 06 	call	0xd78	; 0xd78 <isspace>
     bcc:	89 2b       	or	r24, r25
     bce:	11 f0       	breq	.+4      	; 0xbd4 <strtoul+0x46>
     bd0:	5e 01       	movw	r10, r28
     bd2:	f4 cf       	rjmp	.-24     	; 0xbbc <strtoul+0x2e>
     bd4:	1d 32       	cpi	r17, 0x2D	; 45
     bd6:	29 f4       	brne	.+10     	; 0xbe2 <strtoul+0x54>
     bd8:	21 96       	adiw	r28, 0x01	; 1
     bda:	f5 01       	movw	r30, r10
     bdc:	11 81       	ldd	r17, Z+1	; 0x01
     bde:	01 e0       	ldi	r16, 0x01	; 1
     be0:	07 c0       	rjmp	.+14     	; 0xbf0 <strtoul+0x62>
     be2:	1b 32       	cpi	r17, 0x2B	; 43
     be4:	21 f4       	brne	.+8      	; 0xbee <strtoul+0x60>
     be6:	e5 01       	movw	r28, r10
     be8:	22 96       	adiw	r28, 0x02	; 2
     bea:	f5 01       	movw	r30, r10
     bec:	11 81       	ldd	r17, Z+1	; 0x01
     bee:	00 e0       	ldi	r16, 0x00	; 0
     bf0:	e1 14       	cp	r14, r1
     bf2:	f1 04       	cpc	r15, r1
     bf4:	b1 f0       	breq	.+44     	; 0xc22 <strtoul+0x94>
     bf6:	f0 e1       	ldi	r31, 0x10	; 16
     bf8:	ef 16       	cp	r14, r31
     bfa:	f1 04       	cpc	r15, r1
     bfc:	29 f4       	brne	.+10     	; 0xc08 <strtoul+0x7a>
     bfe:	b0 c0       	rjmp	.+352    	; 0xd60 <strtoul+0x1d2>
     c00:	10 e3       	ldi	r17, 0x30	; 48
     c02:	e1 14       	cp	r14, r1
     c04:	f1 04       	cpc	r15, r1
     c06:	01 f1       	breq	.+64     	; 0xc48 <strtoul+0xba>
     c08:	2a e0       	ldi	r18, 0x0A	; 10
     c0a:	e2 16       	cp	r14, r18
     c0c:	f1 04       	cpc	r15, r1
     c0e:	b1 f1       	breq	.+108    	; 0xc7c <strtoul+0xee>
     c10:	80 e1       	ldi	r24, 0x10	; 16
     c12:	e8 16       	cp	r14, r24
     c14:	f1 04       	cpc	r15, r1
     c16:	71 f0       	breq	.+28     	; 0xc34 <strtoul+0xa6>
     c18:	e8 e0       	ldi	r30, 0x08	; 8
     c1a:	ee 16       	cp	r14, r30
     c1c:	f1 04       	cpc	r15, r1
     c1e:	f1 f4       	brne	.+60     	; 0xc5c <strtoul+0xce>
     c20:	13 c0       	rjmp	.+38     	; 0xc48 <strtoul+0xba>
     c22:	10 33       	cpi	r17, 0x30	; 48
     c24:	41 f5       	brne	.+80     	; 0xc76 <strtoul+0xe8>
     c26:	88 81       	ld	r24, Y
     c28:	8f 7d       	andi	r24, 0xDF	; 223
     c2a:	88 35       	cpi	r24, 0x58	; 88
     c2c:	49 f7       	brne	.-46     	; 0xc00 <strtoul+0x72>
     c2e:	19 81       	ldd	r17, Y+1	; 0x01
     c30:	22 96       	adiw	r28, 0x02	; 2
     c32:	02 60       	ori	r16, 0x02	; 2
     c34:	f0 e1       	ldi	r31, 0x10	; 16
     c36:	ef 2e       	mov	r14, r31
     c38:	f1 2c       	mov	r15, r1
     c3a:	88 24       	eor	r8, r8
     c3c:	8a 94       	dec	r8
     c3e:	98 2c       	mov	r9, r8
     c40:	a8 2c       	mov	r10, r8
     c42:	af e0       	ldi	r26, 0x0F	; 15
     c44:	ba 2e       	mov	r11, r26
     c46:	20 c0       	rjmp	.+64     	; 0xc88 <strtoul+0xfa>
     c48:	78 e0       	ldi	r23, 0x08	; 8
     c4a:	e7 2e       	mov	r14, r23
     c4c:	f1 2c       	mov	r15, r1
     c4e:	88 24       	eor	r8, r8
     c50:	8a 94       	dec	r8
     c52:	98 2c       	mov	r9, r8
     c54:	a8 2c       	mov	r10, r8
     c56:	ef e1       	ldi	r30, 0x1F	; 31
     c58:	be 2e       	mov	r11, r30
     c5a:	16 c0       	rjmp	.+44     	; 0xc88 <strtoul+0xfa>
     c5c:	6f ef       	ldi	r22, 0xFF	; 255
     c5e:	7f ef       	ldi	r23, 0xFF	; 255
     c60:	cb 01       	movw	r24, r22
     c62:	97 01       	movw	r18, r14
     c64:	0f 2c       	mov	r0, r15
     c66:	00 0c       	add	r0, r0
     c68:	44 0b       	sbc	r20, r20
     c6a:	55 0b       	sbc	r21, r21
     c6c:	0e 94 1f 0a 	call	0x143e	; 0x143e <__udivmodsi4>
     c70:	49 01       	movw	r8, r18
     c72:	5a 01       	movw	r10, r20
     c74:	09 c0       	rjmp	.+18     	; 0xc88 <strtoul+0xfa>
     c76:	8a e0       	ldi	r24, 0x0A	; 10
     c78:	e8 2e       	mov	r14, r24
     c7a:	f1 2c       	mov	r15, r1
     c7c:	69 e9       	ldi	r22, 0x99	; 153
     c7e:	86 2e       	mov	r8, r22
     c80:	98 2c       	mov	r9, r8
     c82:	a8 2c       	mov	r10, r8
     c84:	69 e1       	ldi	r22, 0x19	; 25
     c86:	b6 2e       	mov	r11, r22
     c88:	40 e0       	ldi	r20, 0x00	; 0
     c8a:	60 e0       	ldi	r22, 0x00	; 0
     c8c:	70 e0       	ldi	r23, 0x00	; 0
     c8e:	cb 01       	movw	r24, r22
     c90:	27 01       	movw	r4, r14
     c92:	0f 2c       	mov	r0, r15
     c94:	00 0c       	add	r0, r0
     c96:	66 08       	sbc	r6, r6
     c98:	77 08       	sbc	r7, r7
     c9a:	fe 01       	movw	r30, r28
     c9c:	50 ed       	ldi	r21, 0xD0	; 208
     c9e:	35 2e       	mov	r3, r21
     ca0:	31 0e       	add	r3, r17
     ca2:	29 e0       	ldi	r18, 0x09	; 9
     ca4:	23 15       	cp	r18, r3
     ca6:	70 f4       	brcc	.+28     	; 0xcc4 <strtoul+0x136>
     ca8:	2f eb       	ldi	r18, 0xBF	; 191
     caa:	21 0f       	add	r18, r17
     cac:	2a 31       	cpi	r18, 0x1A	; 26
     cae:	18 f4       	brcc	.+6      	; 0xcb6 <strtoul+0x128>
     cb0:	39 ec       	ldi	r19, 0xC9	; 201
     cb2:	33 2e       	mov	r3, r19
     cb4:	06 c0       	rjmp	.+12     	; 0xcc2 <strtoul+0x134>
     cb6:	2f e9       	ldi	r18, 0x9F	; 159
     cb8:	21 0f       	add	r18, r17
     cba:	2a 31       	cpi	r18, 0x1A	; 26
     cbc:	30 f5       	brcc	.+76     	; 0xd0a <strtoul+0x17c>
     cbe:	29 ea       	ldi	r18, 0xA9	; 169
     cc0:	32 2e       	mov	r3, r18
     cc2:	31 0e       	add	r3, r17
     cc4:	23 2d       	mov	r18, r3
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	2e 15       	cp	r18, r14
     cca:	3f 05       	cpc	r19, r15
     ccc:	f4 f4       	brge	.+60     	; 0xd0a <strtoul+0x17c>
     cce:	4f 3f       	cpi	r20, 0xFF	; 255
     cd0:	c9 f0       	breq	.+50     	; 0xd04 <strtoul+0x176>
     cd2:	86 16       	cp	r8, r22
     cd4:	97 06       	cpc	r9, r23
     cd6:	a8 06       	cpc	r10, r24
     cd8:	b9 06       	cpc	r11, r25
     cda:	88 f0       	brcs	.+34     	; 0xcfe <strtoul+0x170>
     cdc:	a3 01       	movw	r20, r6
     cde:	92 01       	movw	r18, r4
     ce0:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsi3>
     ce4:	23 2d       	mov	r18, r3
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	40 e0       	ldi	r20, 0x00	; 0
     cea:	50 e0       	ldi	r21, 0x00	; 0
     cec:	62 0f       	add	r22, r18
     cee:	73 1f       	adc	r23, r19
     cf0:	84 1f       	adc	r24, r20
     cf2:	95 1f       	adc	r25, r21
     cf4:	62 17       	cp	r22, r18
     cf6:	73 07       	cpc	r23, r19
     cf8:	84 07       	cpc	r24, r20
     cfa:	95 07       	cpc	r25, r21
     cfc:	10 f4       	brcc	.+4      	; 0xd02 <strtoul+0x174>
     cfe:	4f ef       	ldi	r20, 0xFF	; 255
     d00:	01 c0       	rjmp	.+2      	; 0xd04 <strtoul+0x176>
     d02:	41 e0       	ldi	r20, 0x01	; 1
     d04:	21 96       	adiw	r28, 0x01	; 1
     d06:	10 81       	ld	r17, Z
     d08:	c8 cf       	rjmp	.-112    	; 0xc9a <strtoul+0x10c>
     d0a:	c1 14       	cp	r12, r1
     d0c:	d1 04       	cpc	r13, r1
     d0e:	51 f0       	breq	.+20     	; 0xd24 <strtoul+0x196>
     d10:	44 23       	and	r20, r20
     d12:	11 f0       	breq	.+4      	; 0xd18 <strtoul+0x18a>
     d14:	21 97       	sbiw	r28, 0x01	; 1
     d16:	03 c0       	rjmp	.+6      	; 0xd1e <strtoul+0x190>
     d18:	01 ff       	sbrs	r16, 1
     d1a:	04 c0       	rjmp	.+8      	; 0xd24 <strtoul+0x196>
     d1c:	22 97       	sbiw	r28, 0x02	; 2
     d1e:	f6 01       	movw	r30, r12
     d20:	c0 83       	st	Z, r28
     d22:	d1 83       	std	Z+1, r29	; 0x01
     d24:	00 ff       	sbrs	r16, 0
     d26:	07 c0       	rjmp	.+14     	; 0xd36 <strtoul+0x1a8>
     d28:	90 95       	com	r25
     d2a:	80 95       	com	r24
     d2c:	70 95       	com	r23
     d2e:	61 95       	neg	r22
     d30:	7f 4f       	sbci	r23, 0xFF	; 255
     d32:	8f 4f       	sbci	r24, 0xFF	; 255
     d34:	9f 4f       	sbci	r25, 0xFF	; 255
     d36:	4f 3f       	cpi	r20, 0xFF	; 255
     d38:	79 f4       	brne	.+30     	; 0xd58 <strtoul+0x1ca>
     d3a:	82 e2       	ldi	r24, 0x22	; 34
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	80 93 c6 28 	sts	0x28C6, r24	; 0x8028c6 <errno>
     d42:	90 93 c7 28 	sts	0x28C7, r25	; 0x8028c7 <errno+0x1>
     d46:	3f ef       	ldi	r19, 0xFF	; 255
     d48:	2f ef       	ldi	r18, 0xFF	; 255
     d4a:	9f ef       	ldi	r25, 0xFF	; 255
     d4c:	0d c0       	rjmp	.+26     	; 0xd68 <strtoul+0x1da>
     d4e:	40 e0       	ldi	r20, 0x00	; 0
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	08 c0       	rjmp	.+16     	; 0xd68 <strtoul+0x1da>
     d58:	46 2f       	mov	r20, r22
     d5a:	37 2f       	mov	r19, r23
     d5c:	28 2f       	mov	r18, r24
     d5e:	04 c0       	rjmp	.+8      	; 0xd68 <strtoul+0x1da>
     d60:	10 33       	cpi	r17, 0x30	; 48
     d62:	09 f0       	breq	.+2      	; 0xd66 <strtoul+0x1d8>
     d64:	67 cf       	rjmp	.-306    	; 0xc34 <strtoul+0xa6>
     d66:	5f cf       	rjmp	.-322    	; 0xc26 <strtoul+0x98>
     d68:	64 2f       	mov	r22, r20
     d6a:	73 2f       	mov	r23, r19
     d6c:	82 2f       	mov	r24, r18
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	e1 e1       	ldi	r30, 0x11	; 17
     d74:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <__epilogue_restores__+0x2>

00000d78 <isspace>:
     d78:	91 11       	cpse	r25, r1
     d7a:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <__ctype_isfalse>
     d7e:	80 32       	cpi	r24, 0x20	; 32
     d80:	19 f0       	breq	.+6      	; 0xd88 <isspace+0x10>
     d82:	89 50       	subi	r24, 0x09	; 9
     d84:	85 50       	subi	r24, 0x05	; 5
     d86:	c8 f7       	brcc	.-14     	; 0xd7a <isspace+0x2>
     d88:	08 95       	ret

00000d8a <strtok>:
     d8a:	4a e7       	ldi	r20, 0x7A	; 122
     d8c:	58 e2       	ldi	r21, 0x28	; 40
     d8e:	0e 94 de 06 	call	0xdbc	; 0xdbc <strtok_r>
     d92:	08 95       	ret

00000d94 <strchr>:
     d94:	fc 01       	movw	r30, r24
     d96:	81 91       	ld	r24, Z+
     d98:	86 17       	cp	r24, r22
     d9a:	21 f0       	breq	.+8      	; 0xda4 <strchr+0x10>
     d9c:	88 23       	and	r24, r24
     d9e:	d9 f7       	brne	.-10     	; 0xd96 <strchr+0x2>
     da0:	99 27       	eor	r25, r25
     da2:	08 95       	ret
     da4:	31 97       	sbiw	r30, 0x01	; 1
     da6:	cf 01       	movw	r24, r30
     da8:	08 95       	ret

00000daa <strcmp>:
     daa:	fb 01       	movw	r30, r22
     dac:	dc 01       	movw	r26, r24
     dae:	8d 91       	ld	r24, X+
     db0:	01 90       	ld	r0, Z+
     db2:	80 19       	sub	r24, r0
     db4:	01 10       	cpse	r0, r1
     db6:	d9 f3       	breq	.-10     	; 0xdae <strcmp+0x4>
     db8:	99 0b       	sbc	r25, r25
     dba:	08 95       	ret

00000dbc <strtok_r>:
     dbc:	fa 01       	movw	r30, r20
     dbe:	a1 91       	ld	r26, Z+
     dc0:	b0 81       	ld	r27, Z
     dc2:	00 97       	sbiw	r24, 0x00	; 0
     dc4:	19 f4       	brne	.+6      	; 0xdcc <strtok_r+0x10>
     dc6:	10 97       	sbiw	r26, 0x00	; 0
     dc8:	e1 f0       	breq	.+56     	; 0xe02 <strtok_r+0x46>
     dca:	cd 01       	movw	r24, r26
     dcc:	dc 01       	movw	r26, r24
     dce:	cd 01       	movw	r24, r26
     dd0:	0d 90       	ld	r0, X+
     dd2:	00 20       	and	r0, r0
     dd4:	11 f4       	brne	.+4      	; 0xdda <strtok_r+0x1e>
     dd6:	c0 01       	movw	r24, r0
     dd8:	13 c0       	rjmp	.+38     	; 0xe00 <strtok_r+0x44>
     dda:	fb 01       	movw	r30, r22
     ddc:	21 91       	ld	r18, Z+
     dde:	22 23       	and	r18, r18
     de0:	19 f0       	breq	.+6      	; 0xde8 <strtok_r+0x2c>
     de2:	20 15       	cp	r18, r0
     de4:	d9 f7       	brne	.-10     	; 0xddc <strtok_r+0x20>
     de6:	f3 cf       	rjmp	.-26     	; 0xdce <strtok_r+0x12>
     de8:	fb 01       	movw	r30, r22
     dea:	21 91       	ld	r18, Z+
     dec:	20 15       	cp	r18, r0
     dee:	19 f4       	brne	.+6      	; 0xdf6 <strtok_r+0x3a>
     df0:	1e 92       	st	-X, r1
     df2:	11 96       	adiw	r26, 0x01	; 1
     df4:	06 c0       	rjmp	.+12     	; 0xe02 <strtok_r+0x46>
     df6:	22 23       	and	r18, r18
     df8:	c1 f7       	brne	.-16     	; 0xdea <strtok_r+0x2e>
     dfa:	0d 90       	ld	r0, X+
     dfc:	00 20       	and	r0, r0
     dfe:	a1 f7       	brne	.-24     	; 0xde8 <strtok_r+0x2c>
     e00:	d0 01       	movw	r26, r0
     e02:	fa 01       	movw	r30, r20
     e04:	a1 93       	st	Z+, r26
     e06:	b0 83       	st	Z, r27
     e08:	08 95       	ret

00000e0a <printf>:
     e0a:	a0 e0       	ldi	r26, 0x00	; 0
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	eb e0       	ldi	r30, 0x0B	; 11
     e10:	f7 e0       	ldi	r31, 0x07	; 7
     e12:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__prologue_saves__+0x20>
     e16:	ae 01       	movw	r20, r28
     e18:	4b 5f       	subi	r20, 0xFB	; 251
     e1a:	5f 4f       	sbci	r21, 0xFF	; 255
     e1c:	fa 01       	movw	r30, r20
     e1e:	61 91       	ld	r22, Z+
     e20:	71 91       	ld	r23, Z+
     e22:	af 01       	movw	r20, r30
     e24:	80 91 c2 28 	lds	r24, 0x28C2	; 0x8028c2 <__iob+0x2>
     e28:	90 91 c3 28 	lds	r25, 0x28C3	; 0x8028c3 <__iob+0x3>
     e2c:	0e 94 7b 07 	call	0xef6	; 0xef6 <vfprintf>
     e30:	e2 e0       	ldi	r30, 0x02	; 2
     e32:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__epilogue_restores__+0x20>

00000e36 <puts>:
     e36:	0f 93       	push	r16
     e38:	1f 93       	push	r17
     e3a:	cf 93       	push	r28
     e3c:	df 93       	push	r29
     e3e:	e0 91 c2 28 	lds	r30, 0x28C2	; 0x8028c2 <__iob+0x2>
     e42:	f0 91 c3 28 	lds	r31, 0x28C3	; 0x8028c3 <__iob+0x3>
     e46:	23 81       	ldd	r18, Z+3	; 0x03
     e48:	21 ff       	sbrs	r18, 1
     e4a:	1b c0       	rjmp	.+54     	; 0xe82 <puts+0x4c>
     e4c:	8c 01       	movw	r16, r24
     e4e:	d0 e0       	ldi	r29, 0x00	; 0
     e50:	c0 e0       	ldi	r28, 0x00	; 0
     e52:	f8 01       	movw	r30, r16
     e54:	81 91       	ld	r24, Z+
     e56:	8f 01       	movw	r16, r30
     e58:	60 91 c2 28 	lds	r22, 0x28C2	; 0x8028c2 <__iob+0x2>
     e5c:	70 91 c3 28 	lds	r23, 0x28C3	; 0x8028c3 <__iob+0x3>
     e60:	db 01       	movw	r26, r22
     e62:	18 96       	adiw	r26, 0x08	; 8
     e64:	ed 91       	ld	r30, X+
     e66:	fc 91       	ld	r31, X
     e68:	19 97       	sbiw	r26, 0x09	; 9
     e6a:	88 23       	and	r24, r24
     e6c:	31 f0       	breq	.+12     	; 0xe7a <puts+0x44>
     e6e:	09 95       	icall
     e70:	89 2b       	or	r24, r25
     e72:	79 f3       	breq	.-34     	; 0xe52 <puts+0x1c>
     e74:	df ef       	ldi	r29, 0xFF	; 255
     e76:	cf ef       	ldi	r28, 0xFF	; 255
     e78:	ec cf       	rjmp	.-40     	; 0xe52 <puts+0x1c>
     e7a:	8a e0       	ldi	r24, 0x0A	; 10
     e7c:	09 95       	icall
     e7e:	89 2b       	or	r24, r25
     e80:	19 f0       	breq	.+6      	; 0xe88 <puts+0x52>
     e82:	8f ef       	ldi	r24, 0xFF	; 255
     e84:	9f ef       	ldi	r25, 0xFF	; 255
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <puts+0x56>
     e88:	8d 2f       	mov	r24, r29
     e8a:	9c 2f       	mov	r25, r28
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	1f 91       	pop	r17
     e92:	0f 91       	pop	r16
     e94:	08 95       	ret

00000e96 <snprintf>:
     e96:	ae e0       	ldi	r26, 0x0E	; 14
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	e1 e5       	ldi	r30, 0x51	; 81
     e9c:	f7 e0       	ldi	r31, 0x07	; 7
     e9e:	0c 94 5a 0a 	jmp	0x14b4	; 0x14b4 <__prologue_saves__+0x1c>
     ea2:	0d 89       	ldd	r16, Y+21	; 0x15
     ea4:	1e 89       	ldd	r17, Y+22	; 0x16
     ea6:	8f 89       	ldd	r24, Y+23	; 0x17
     ea8:	98 8d       	ldd	r25, Y+24	; 0x18
     eaa:	26 e0       	ldi	r18, 0x06	; 6
     eac:	2c 83       	std	Y+4, r18	; 0x04
     eae:	09 83       	std	Y+1, r16	; 0x01
     eb0:	1a 83       	std	Y+2, r17	; 0x02
     eb2:	97 ff       	sbrs	r25, 7
     eb4:	02 c0       	rjmp	.+4      	; 0xeba <snprintf+0x24>
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	90 e8       	ldi	r25, 0x80	; 128
     eba:	01 97       	sbiw	r24, 0x01	; 1
     ebc:	8d 83       	std	Y+5, r24	; 0x05
     ebe:	9e 83       	std	Y+6, r25	; 0x06
     ec0:	ae 01       	movw	r20, r28
     ec2:	45 5e       	subi	r20, 0xE5	; 229
     ec4:	5f 4f       	sbci	r21, 0xFF	; 255
     ec6:	69 8d       	ldd	r22, Y+25	; 0x19
     ec8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     eca:	ce 01       	movw	r24, r28
     ecc:	01 96       	adiw	r24, 0x01	; 1
     ece:	0e 94 7b 07 	call	0xef6	; 0xef6 <vfprintf>
     ed2:	4d 81       	ldd	r20, Y+5	; 0x05
     ed4:	5e 81       	ldd	r21, Y+6	; 0x06
     ed6:	57 fd       	sbrc	r21, 7
     ed8:	0a c0       	rjmp	.+20     	; 0xeee <snprintf+0x58>
     eda:	2f 81       	ldd	r18, Y+7	; 0x07
     edc:	38 85       	ldd	r19, Y+8	; 0x08
     ede:	42 17       	cp	r20, r18
     ee0:	53 07       	cpc	r21, r19
     ee2:	0c f4       	brge	.+2      	; 0xee6 <snprintf+0x50>
     ee4:	9a 01       	movw	r18, r20
     ee6:	f8 01       	movw	r30, r16
     ee8:	e2 0f       	add	r30, r18
     eea:	f3 1f       	adc	r31, r19
     eec:	10 82       	st	Z, r1
     eee:	2e 96       	adiw	r28, 0x0e	; 14
     ef0:	e4 e0       	ldi	r30, 0x04	; 4
     ef2:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__epilogue_restores__+0x1c>

00000ef6 <vfprintf>:
     ef6:	ab e0       	ldi	r26, 0x0B	; 11
     ef8:	b0 e0       	ldi	r27, 0x00	; 0
     efa:	e1 e8       	ldi	r30, 0x81	; 129
     efc:	f7 e0       	ldi	r31, 0x07	; 7
     efe:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__prologue_saves__>
     f02:	6c 01       	movw	r12, r24
     f04:	7b 01       	movw	r14, r22
     f06:	8a 01       	movw	r16, r20
     f08:	fc 01       	movw	r30, r24
     f0a:	16 82       	std	Z+6, r1	; 0x06
     f0c:	17 82       	std	Z+7, r1	; 0x07
     f0e:	83 81       	ldd	r24, Z+3	; 0x03
     f10:	81 ff       	sbrs	r24, 1
     f12:	cc c1       	rjmp	.+920    	; 0x12ac <vfprintf+0x3b6>
     f14:	ce 01       	movw	r24, r28
     f16:	01 96       	adiw	r24, 0x01	; 1
     f18:	3c 01       	movw	r6, r24
     f1a:	f6 01       	movw	r30, r12
     f1c:	93 81       	ldd	r25, Z+3	; 0x03
     f1e:	f7 01       	movw	r30, r14
     f20:	93 fd       	sbrc	r25, 3
     f22:	85 91       	lpm	r24, Z+
     f24:	93 ff       	sbrs	r25, 3
     f26:	81 91       	ld	r24, Z+
     f28:	7f 01       	movw	r14, r30
     f2a:	88 23       	and	r24, r24
     f2c:	09 f4       	brne	.+2      	; 0xf30 <vfprintf+0x3a>
     f2e:	ba c1       	rjmp	.+884    	; 0x12a4 <vfprintf+0x3ae>
     f30:	85 32       	cpi	r24, 0x25	; 37
     f32:	39 f4       	brne	.+14     	; 0xf42 <vfprintf+0x4c>
     f34:	93 fd       	sbrc	r25, 3
     f36:	85 91       	lpm	r24, Z+
     f38:	93 ff       	sbrs	r25, 3
     f3a:	81 91       	ld	r24, Z+
     f3c:	7f 01       	movw	r14, r30
     f3e:	85 32       	cpi	r24, 0x25	; 37
     f40:	29 f4       	brne	.+10     	; 0xf4c <vfprintf+0x56>
     f42:	b6 01       	movw	r22, r12
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
     f4a:	e7 cf       	rjmp	.-50     	; 0xf1a <vfprintf+0x24>
     f4c:	91 2c       	mov	r9, r1
     f4e:	21 2c       	mov	r2, r1
     f50:	31 2c       	mov	r3, r1
     f52:	ff e1       	ldi	r31, 0x1F	; 31
     f54:	f3 15       	cp	r31, r3
     f56:	d8 f0       	brcs	.+54     	; 0xf8e <vfprintf+0x98>
     f58:	8b 32       	cpi	r24, 0x2B	; 43
     f5a:	79 f0       	breq	.+30     	; 0xf7a <vfprintf+0x84>
     f5c:	38 f4       	brcc	.+14     	; 0xf6c <vfprintf+0x76>
     f5e:	80 32       	cpi	r24, 0x20	; 32
     f60:	79 f0       	breq	.+30     	; 0xf80 <vfprintf+0x8a>
     f62:	83 32       	cpi	r24, 0x23	; 35
     f64:	a1 f4       	brne	.+40     	; 0xf8e <vfprintf+0x98>
     f66:	23 2d       	mov	r18, r3
     f68:	20 61       	ori	r18, 0x10	; 16
     f6a:	1d c0       	rjmp	.+58     	; 0xfa6 <vfprintf+0xb0>
     f6c:	8d 32       	cpi	r24, 0x2D	; 45
     f6e:	61 f0       	breq	.+24     	; 0xf88 <vfprintf+0x92>
     f70:	80 33       	cpi	r24, 0x30	; 48
     f72:	69 f4       	brne	.+26     	; 0xf8e <vfprintf+0x98>
     f74:	23 2d       	mov	r18, r3
     f76:	21 60       	ori	r18, 0x01	; 1
     f78:	16 c0       	rjmp	.+44     	; 0xfa6 <vfprintf+0xb0>
     f7a:	83 2d       	mov	r24, r3
     f7c:	82 60       	ori	r24, 0x02	; 2
     f7e:	38 2e       	mov	r3, r24
     f80:	e3 2d       	mov	r30, r3
     f82:	e4 60       	ori	r30, 0x04	; 4
     f84:	3e 2e       	mov	r3, r30
     f86:	2a c0       	rjmp	.+84     	; 0xfdc <vfprintf+0xe6>
     f88:	f3 2d       	mov	r31, r3
     f8a:	f8 60       	ori	r31, 0x08	; 8
     f8c:	1d c0       	rjmp	.+58     	; 0xfc8 <vfprintf+0xd2>
     f8e:	37 fc       	sbrc	r3, 7
     f90:	2d c0       	rjmp	.+90     	; 0xfec <vfprintf+0xf6>
     f92:	20 ed       	ldi	r18, 0xD0	; 208
     f94:	28 0f       	add	r18, r24
     f96:	2a 30       	cpi	r18, 0x0A	; 10
     f98:	40 f0       	brcs	.+16     	; 0xfaa <vfprintf+0xb4>
     f9a:	8e 32       	cpi	r24, 0x2E	; 46
     f9c:	b9 f4       	brne	.+46     	; 0xfcc <vfprintf+0xd6>
     f9e:	36 fc       	sbrc	r3, 6
     fa0:	81 c1       	rjmp	.+770    	; 0x12a4 <vfprintf+0x3ae>
     fa2:	23 2d       	mov	r18, r3
     fa4:	20 64       	ori	r18, 0x40	; 64
     fa6:	32 2e       	mov	r3, r18
     fa8:	19 c0       	rjmp	.+50     	; 0xfdc <vfprintf+0xe6>
     faa:	36 fe       	sbrs	r3, 6
     fac:	06 c0       	rjmp	.+12     	; 0xfba <vfprintf+0xc4>
     fae:	8a e0       	ldi	r24, 0x0A	; 10
     fb0:	98 9e       	mul	r9, r24
     fb2:	20 0d       	add	r18, r0
     fb4:	11 24       	eor	r1, r1
     fb6:	92 2e       	mov	r9, r18
     fb8:	11 c0       	rjmp	.+34     	; 0xfdc <vfprintf+0xe6>
     fba:	ea e0       	ldi	r30, 0x0A	; 10
     fbc:	2e 9e       	mul	r2, r30
     fbe:	20 0d       	add	r18, r0
     fc0:	11 24       	eor	r1, r1
     fc2:	22 2e       	mov	r2, r18
     fc4:	f3 2d       	mov	r31, r3
     fc6:	f0 62       	ori	r31, 0x20	; 32
     fc8:	3f 2e       	mov	r3, r31
     fca:	08 c0       	rjmp	.+16     	; 0xfdc <vfprintf+0xe6>
     fcc:	8c 36       	cpi	r24, 0x6C	; 108
     fce:	21 f4       	brne	.+8      	; 0xfd8 <vfprintf+0xe2>
     fd0:	83 2d       	mov	r24, r3
     fd2:	80 68       	ori	r24, 0x80	; 128
     fd4:	38 2e       	mov	r3, r24
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <vfprintf+0xe6>
     fd8:	88 36       	cpi	r24, 0x68	; 104
     fda:	41 f4       	brne	.+16     	; 0xfec <vfprintf+0xf6>
     fdc:	f7 01       	movw	r30, r14
     fde:	93 fd       	sbrc	r25, 3
     fe0:	85 91       	lpm	r24, Z+
     fe2:	93 ff       	sbrs	r25, 3
     fe4:	81 91       	ld	r24, Z+
     fe6:	7f 01       	movw	r14, r30
     fe8:	81 11       	cpse	r24, r1
     fea:	b3 cf       	rjmp	.-154    	; 0xf52 <vfprintf+0x5c>
     fec:	98 2f       	mov	r25, r24
     fee:	9f 7d       	andi	r25, 0xDF	; 223
     ff0:	95 54       	subi	r25, 0x45	; 69
     ff2:	93 30       	cpi	r25, 0x03	; 3
     ff4:	28 f4       	brcc	.+10     	; 0x1000 <vfprintf+0x10a>
     ff6:	0c 5f       	subi	r16, 0xFC	; 252
     ff8:	1f 4f       	sbci	r17, 0xFF	; 255
     ffa:	9f e3       	ldi	r25, 0x3F	; 63
     ffc:	99 83       	std	Y+1, r25	; 0x01
     ffe:	0d c0       	rjmp	.+26     	; 0x101a <vfprintf+0x124>
    1000:	83 36       	cpi	r24, 0x63	; 99
    1002:	31 f0       	breq	.+12     	; 0x1010 <vfprintf+0x11a>
    1004:	83 37       	cpi	r24, 0x73	; 115
    1006:	71 f0       	breq	.+28     	; 0x1024 <vfprintf+0x12e>
    1008:	83 35       	cpi	r24, 0x53	; 83
    100a:	09 f0       	breq	.+2      	; 0x100e <vfprintf+0x118>
    100c:	59 c0       	rjmp	.+178    	; 0x10c0 <vfprintf+0x1ca>
    100e:	21 c0       	rjmp	.+66     	; 0x1052 <vfprintf+0x15c>
    1010:	f8 01       	movw	r30, r16
    1012:	80 81       	ld	r24, Z
    1014:	89 83       	std	Y+1, r24	; 0x01
    1016:	0e 5f       	subi	r16, 0xFE	; 254
    1018:	1f 4f       	sbci	r17, 0xFF	; 255
    101a:	88 24       	eor	r8, r8
    101c:	83 94       	inc	r8
    101e:	91 2c       	mov	r9, r1
    1020:	53 01       	movw	r10, r6
    1022:	13 c0       	rjmp	.+38     	; 0x104a <vfprintf+0x154>
    1024:	28 01       	movw	r4, r16
    1026:	f2 e0       	ldi	r31, 0x02	; 2
    1028:	4f 0e       	add	r4, r31
    102a:	51 1c       	adc	r5, r1
    102c:	f8 01       	movw	r30, r16
    102e:	a0 80       	ld	r10, Z
    1030:	b1 80       	ldd	r11, Z+1	; 0x01
    1032:	36 fe       	sbrs	r3, 6
    1034:	03 c0       	rjmp	.+6      	; 0x103c <vfprintf+0x146>
    1036:	69 2d       	mov	r22, r9
    1038:	70 e0       	ldi	r23, 0x00	; 0
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <vfprintf+0x14a>
    103c:	6f ef       	ldi	r22, 0xFF	; 255
    103e:	7f ef       	ldi	r23, 0xFF	; 255
    1040:	c5 01       	movw	r24, r10
    1042:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <strnlen>
    1046:	4c 01       	movw	r8, r24
    1048:	82 01       	movw	r16, r4
    104a:	f3 2d       	mov	r31, r3
    104c:	ff 77       	andi	r31, 0x7F	; 127
    104e:	3f 2e       	mov	r3, r31
    1050:	16 c0       	rjmp	.+44     	; 0x107e <vfprintf+0x188>
    1052:	28 01       	movw	r4, r16
    1054:	22 e0       	ldi	r18, 0x02	; 2
    1056:	42 0e       	add	r4, r18
    1058:	51 1c       	adc	r5, r1
    105a:	f8 01       	movw	r30, r16
    105c:	a0 80       	ld	r10, Z
    105e:	b1 80       	ldd	r11, Z+1	; 0x01
    1060:	36 fe       	sbrs	r3, 6
    1062:	03 c0       	rjmp	.+6      	; 0x106a <vfprintf+0x174>
    1064:	69 2d       	mov	r22, r9
    1066:	70 e0       	ldi	r23, 0x00	; 0
    1068:	02 c0       	rjmp	.+4      	; 0x106e <vfprintf+0x178>
    106a:	6f ef       	ldi	r22, 0xFF	; 255
    106c:	7f ef       	ldi	r23, 0xFF	; 255
    106e:	c5 01       	movw	r24, r10
    1070:	0e 94 5f 09 	call	0x12be	; 0x12be <strnlen_P>
    1074:	4c 01       	movw	r8, r24
    1076:	f3 2d       	mov	r31, r3
    1078:	f0 68       	ori	r31, 0x80	; 128
    107a:	3f 2e       	mov	r3, r31
    107c:	82 01       	movw	r16, r4
    107e:	33 fc       	sbrc	r3, 3
    1080:	1b c0       	rjmp	.+54     	; 0x10b8 <vfprintf+0x1c2>
    1082:	82 2d       	mov	r24, r2
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	88 16       	cp	r8, r24
    1088:	99 06       	cpc	r9, r25
    108a:	b0 f4       	brcc	.+44     	; 0x10b8 <vfprintf+0x1c2>
    108c:	b6 01       	movw	r22, r12
    108e:	80 e2       	ldi	r24, 0x20	; 32
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    1096:	2a 94       	dec	r2
    1098:	f4 cf       	rjmp	.-24     	; 0x1082 <vfprintf+0x18c>
    109a:	f5 01       	movw	r30, r10
    109c:	37 fc       	sbrc	r3, 7
    109e:	85 91       	lpm	r24, Z+
    10a0:	37 fe       	sbrs	r3, 7
    10a2:	81 91       	ld	r24, Z+
    10a4:	5f 01       	movw	r10, r30
    10a6:	b6 01       	movw	r22, r12
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    10ae:	21 10       	cpse	r2, r1
    10b0:	2a 94       	dec	r2
    10b2:	21 e0       	ldi	r18, 0x01	; 1
    10b4:	82 1a       	sub	r8, r18
    10b6:	91 08       	sbc	r9, r1
    10b8:	81 14       	cp	r8, r1
    10ba:	91 04       	cpc	r9, r1
    10bc:	71 f7       	brne	.-36     	; 0x109a <vfprintf+0x1a4>
    10be:	e8 c0       	rjmp	.+464    	; 0x1290 <vfprintf+0x39a>
    10c0:	84 36       	cpi	r24, 0x64	; 100
    10c2:	11 f0       	breq	.+4      	; 0x10c8 <vfprintf+0x1d2>
    10c4:	89 36       	cpi	r24, 0x69	; 105
    10c6:	41 f5       	brne	.+80     	; 0x1118 <vfprintf+0x222>
    10c8:	f8 01       	movw	r30, r16
    10ca:	37 fe       	sbrs	r3, 7
    10cc:	07 c0       	rjmp	.+14     	; 0x10dc <vfprintf+0x1e6>
    10ce:	60 81       	ld	r22, Z
    10d0:	71 81       	ldd	r23, Z+1	; 0x01
    10d2:	82 81       	ldd	r24, Z+2	; 0x02
    10d4:	93 81       	ldd	r25, Z+3	; 0x03
    10d6:	0c 5f       	subi	r16, 0xFC	; 252
    10d8:	1f 4f       	sbci	r17, 0xFF	; 255
    10da:	08 c0       	rjmp	.+16     	; 0x10ec <vfprintf+0x1f6>
    10dc:	60 81       	ld	r22, Z
    10de:	71 81       	ldd	r23, Z+1	; 0x01
    10e0:	07 2e       	mov	r0, r23
    10e2:	00 0c       	add	r0, r0
    10e4:	88 0b       	sbc	r24, r24
    10e6:	99 0b       	sbc	r25, r25
    10e8:	0e 5f       	subi	r16, 0xFE	; 254
    10ea:	1f 4f       	sbci	r17, 0xFF	; 255
    10ec:	f3 2d       	mov	r31, r3
    10ee:	ff 76       	andi	r31, 0x6F	; 111
    10f0:	3f 2e       	mov	r3, r31
    10f2:	97 ff       	sbrs	r25, 7
    10f4:	09 c0       	rjmp	.+18     	; 0x1108 <vfprintf+0x212>
    10f6:	90 95       	com	r25
    10f8:	80 95       	com	r24
    10fa:	70 95       	com	r23
    10fc:	61 95       	neg	r22
    10fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1100:	8f 4f       	sbci	r24, 0xFF	; 255
    1102:	9f 4f       	sbci	r25, 0xFF	; 255
    1104:	f0 68       	ori	r31, 0x80	; 128
    1106:	3f 2e       	mov	r3, r31
    1108:	2a e0       	ldi	r18, 0x0A	; 10
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	a3 01       	movw	r20, r6
    110e:	0e 94 b1 09 	call	0x1362	; 0x1362 <__ultoa_invert>
    1112:	88 2e       	mov	r8, r24
    1114:	86 18       	sub	r8, r6
    1116:	45 c0       	rjmp	.+138    	; 0x11a2 <vfprintf+0x2ac>
    1118:	85 37       	cpi	r24, 0x75	; 117
    111a:	31 f4       	brne	.+12     	; 0x1128 <vfprintf+0x232>
    111c:	23 2d       	mov	r18, r3
    111e:	2f 7e       	andi	r18, 0xEF	; 239
    1120:	b2 2e       	mov	r11, r18
    1122:	2a e0       	ldi	r18, 0x0A	; 10
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	25 c0       	rjmp	.+74     	; 0x1172 <vfprintf+0x27c>
    1128:	93 2d       	mov	r25, r3
    112a:	99 7f       	andi	r25, 0xF9	; 249
    112c:	b9 2e       	mov	r11, r25
    112e:	8f 36       	cpi	r24, 0x6F	; 111
    1130:	c1 f0       	breq	.+48     	; 0x1162 <vfprintf+0x26c>
    1132:	18 f4       	brcc	.+6      	; 0x113a <vfprintf+0x244>
    1134:	88 35       	cpi	r24, 0x58	; 88
    1136:	79 f0       	breq	.+30     	; 0x1156 <vfprintf+0x260>
    1138:	b5 c0       	rjmp	.+362    	; 0x12a4 <vfprintf+0x3ae>
    113a:	80 37       	cpi	r24, 0x70	; 112
    113c:	19 f0       	breq	.+6      	; 0x1144 <vfprintf+0x24e>
    113e:	88 37       	cpi	r24, 0x78	; 120
    1140:	21 f0       	breq	.+8      	; 0x114a <vfprintf+0x254>
    1142:	b0 c0       	rjmp	.+352    	; 0x12a4 <vfprintf+0x3ae>
    1144:	e9 2f       	mov	r30, r25
    1146:	e0 61       	ori	r30, 0x10	; 16
    1148:	be 2e       	mov	r11, r30
    114a:	b4 fe       	sbrs	r11, 4
    114c:	0d c0       	rjmp	.+26     	; 0x1168 <vfprintf+0x272>
    114e:	fb 2d       	mov	r31, r11
    1150:	f4 60       	ori	r31, 0x04	; 4
    1152:	bf 2e       	mov	r11, r31
    1154:	09 c0       	rjmp	.+18     	; 0x1168 <vfprintf+0x272>
    1156:	34 fe       	sbrs	r3, 4
    1158:	0a c0       	rjmp	.+20     	; 0x116e <vfprintf+0x278>
    115a:	29 2f       	mov	r18, r25
    115c:	26 60       	ori	r18, 0x06	; 6
    115e:	b2 2e       	mov	r11, r18
    1160:	06 c0       	rjmp	.+12     	; 0x116e <vfprintf+0x278>
    1162:	28 e0       	ldi	r18, 0x08	; 8
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	05 c0       	rjmp	.+10     	; 0x1172 <vfprintf+0x27c>
    1168:	20 e1       	ldi	r18, 0x10	; 16
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	02 c0       	rjmp	.+4      	; 0x1172 <vfprintf+0x27c>
    116e:	20 e1       	ldi	r18, 0x10	; 16
    1170:	32 e0       	ldi	r19, 0x02	; 2
    1172:	f8 01       	movw	r30, r16
    1174:	b7 fe       	sbrs	r11, 7
    1176:	07 c0       	rjmp	.+14     	; 0x1186 <vfprintf+0x290>
    1178:	60 81       	ld	r22, Z
    117a:	71 81       	ldd	r23, Z+1	; 0x01
    117c:	82 81       	ldd	r24, Z+2	; 0x02
    117e:	93 81       	ldd	r25, Z+3	; 0x03
    1180:	0c 5f       	subi	r16, 0xFC	; 252
    1182:	1f 4f       	sbci	r17, 0xFF	; 255
    1184:	06 c0       	rjmp	.+12     	; 0x1192 <vfprintf+0x29c>
    1186:	60 81       	ld	r22, Z
    1188:	71 81       	ldd	r23, Z+1	; 0x01
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 5f       	subi	r16, 0xFE	; 254
    1190:	1f 4f       	sbci	r17, 0xFF	; 255
    1192:	a3 01       	movw	r20, r6
    1194:	0e 94 b1 09 	call	0x1362	; 0x1362 <__ultoa_invert>
    1198:	88 2e       	mov	r8, r24
    119a:	86 18       	sub	r8, r6
    119c:	fb 2d       	mov	r31, r11
    119e:	ff 77       	andi	r31, 0x7F	; 127
    11a0:	3f 2e       	mov	r3, r31
    11a2:	36 fe       	sbrs	r3, 6
    11a4:	0d c0       	rjmp	.+26     	; 0x11c0 <vfprintf+0x2ca>
    11a6:	23 2d       	mov	r18, r3
    11a8:	2e 7f       	andi	r18, 0xFE	; 254
    11aa:	a2 2e       	mov	r10, r18
    11ac:	89 14       	cp	r8, r9
    11ae:	58 f4       	brcc	.+22     	; 0x11c6 <vfprintf+0x2d0>
    11b0:	34 fe       	sbrs	r3, 4
    11b2:	0b c0       	rjmp	.+22     	; 0x11ca <vfprintf+0x2d4>
    11b4:	32 fc       	sbrc	r3, 2
    11b6:	09 c0       	rjmp	.+18     	; 0x11ca <vfprintf+0x2d4>
    11b8:	83 2d       	mov	r24, r3
    11ba:	8e 7e       	andi	r24, 0xEE	; 238
    11bc:	a8 2e       	mov	r10, r24
    11be:	05 c0       	rjmp	.+10     	; 0x11ca <vfprintf+0x2d4>
    11c0:	b8 2c       	mov	r11, r8
    11c2:	a3 2c       	mov	r10, r3
    11c4:	03 c0       	rjmp	.+6      	; 0x11cc <vfprintf+0x2d6>
    11c6:	b8 2c       	mov	r11, r8
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <vfprintf+0x2d6>
    11ca:	b9 2c       	mov	r11, r9
    11cc:	a4 fe       	sbrs	r10, 4
    11ce:	0f c0       	rjmp	.+30     	; 0x11ee <vfprintf+0x2f8>
    11d0:	fe 01       	movw	r30, r28
    11d2:	e8 0d       	add	r30, r8
    11d4:	f1 1d       	adc	r31, r1
    11d6:	80 81       	ld	r24, Z
    11d8:	80 33       	cpi	r24, 0x30	; 48
    11da:	21 f4       	brne	.+8      	; 0x11e4 <vfprintf+0x2ee>
    11dc:	9a 2d       	mov	r25, r10
    11de:	99 7e       	andi	r25, 0xE9	; 233
    11e0:	a9 2e       	mov	r10, r25
    11e2:	09 c0       	rjmp	.+18     	; 0x11f6 <vfprintf+0x300>
    11e4:	a2 fe       	sbrs	r10, 2
    11e6:	06 c0       	rjmp	.+12     	; 0x11f4 <vfprintf+0x2fe>
    11e8:	b3 94       	inc	r11
    11ea:	b3 94       	inc	r11
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <vfprintf+0x300>
    11ee:	8a 2d       	mov	r24, r10
    11f0:	86 78       	andi	r24, 0x86	; 134
    11f2:	09 f0       	breq	.+2      	; 0x11f6 <vfprintf+0x300>
    11f4:	b3 94       	inc	r11
    11f6:	a3 fc       	sbrc	r10, 3
    11f8:	11 c0       	rjmp	.+34     	; 0x121c <vfprintf+0x326>
    11fa:	a0 fe       	sbrs	r10, 0
    11fc:	06 c0       	rjmp	.+12     	; 0x120a <vfprintf+0x314>
    11fe:	b2 14       	cp	r11, r2
    1200:	88 f4       	brcc	.+34     	; 0x1224 <vfprintf+0x32e>
    1202:	28 0c       	add	r2, r8
    1204:	92 2c       	mov	r9, r2
    1206:	9b 18       	sub	r9, r11
    1208:	0e c0       	rjmp	.+28     	; 0x1226 <vfprintf+0x330>
    120a:	b2 14       	cp	r11, r2
    120c:	60 f4       	brcc	.+24     	; 0x1226 <vfprintf+0x330>
    120e:	b6 01       	movw	r22, r12
    1210:	80 e2       	ldi	r24, 0x20	; 32
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    1218:	b3 94       	inc	r11
    121a:	f7 cf       	rjmp	.-18     	; 0x120a <vfprintf+0x314>
    121c:	b2 14       	cp	r11, r2
    121e:	18 f4       	brcc	.+6      	; 0x1226 <vfprintf+0x330>
    1220:	2b 18       	sub	r2, r11
    1222:	02 c0       	rjmp	.+4      	; 0x1228 <vfprintf+0x332>
    1224:	98 2c       	mov	r9, r8
    1226:	21 2c       	mov	r2, r1
    1228:	a4 fe       	sbrs	r10, 4
    122a:	10 c0       	rjmp	.+32     	; 0x124c <vfprintf+0x356>
    122c:	b6 01       	movw	r22, r12
    122e:	80 e3       	ldi	r24, 0x30	; 48
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    1236:	a2 fe       	sbrs	r10, 2
    1238:	17 c0       	rjmp	.+46     	; 0x1268 <vfprintf+0x372>
    123a:	a1 fc       	sbrc	r10, 1
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <vfprintf+0x34e>
    123e:	88 e7       	ldi	r24, 0x78	; 120
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <vfprintf+0x352>
    1244:	88 e5       	ldi	r24, 0x58	; 88
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	b6 01       	movw	r22, r12
    124a:	0c c0       	rjmp	.+24     	; 0x1264 <vfprintf+0x36e>
    124c:	8a 2d       	mov	r24, r10
    124e:	86 78       	andi	r24, 0x86	; 134
    1250:	59 f0       	breq	.+22     	; 0x1268 <vfprintf+0x372>
    1252:	a1 fe       	sbrs	r10, 1
    1254:	02 c0       	rjmp	.+4      	; 0x125a <vfprintf+0x364>
    1256:	8b e2       	ldi	r24, 0x2B	; 43
    1258:	01 c0       	rjmp	.+2      	; 0x125c <vfprintf+0x366>
    125a:	80 e2       	ldi	r24, 0x20	; 32
    125c:	a7 fc       	sbrc	r10, 7
    125e:	8d e2       	ldi	r24, 0x2D	; 45
    1260:	b6 01       	movw	r22, r12
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    1268:	89 14       	cp	r8, r9
    126a:	38 f4       	brcc	.+14     	; 0x127a <vfprintf+0x384>
    126c:	b6 01       	movw	r22, r12
    126e:	80 e3       	ldi	r24, 0x30	; 48
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    1276:	9a 94       	dec	r9
    1278:	f7 cf       	rjmp	.-18     	; 0x1268 <vfprintf+0x372>
    127a:	8a 94       	dec	r8
    127c:	f3 01       	movw	r30, r6
    127e:	e8 0d       	add	r30, r8
    1280:	f1 1d       	adc	r31, r1
    1282:	80 81       	ld	r24, Z
    1284:	b6 01       	movw	r22, r12
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    128c:	81 10       	cpse	r8, r1
    128e:	f5 cf       	rjmp	.-22     	; 0x127a <vfprintf+0x384>
    1290:	22 20       	and	r2, r2
    1292:	09 f4       	brne	.+2      	; 0x1296 <vfprintf+0x3a0>
    1294:	42 ce       	rjmp	.-892    	; 0xf1a <vfprintf+0x24>
    1296:	b6 01       	movw	r22, r12
    1298:	80 e2       	ldi	r24, 0x20	; 32
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	0e 94 75 09 	call	0x12ea	; 0x12ea <fputc>
    12a0:	2a 94       	dec	r2
    12a2:	f6 cf       	rjmp	.-20     	; 0x1290 <vfprintf+0x39a>
    12a4:	f6 01       	movw	r30, r12
    12a6:	86 81       	ldd	r24, Z+6	; 0x06
    12a8:	97 81       	ldd	r25, Z+7	; 0x07
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <vfprintf+0x3ba>
    12ac:	8f ef       	ldi	r24, 0xFF	; 255
    12ae:	9f ef       	ldi	r25, 0xFF	; 255
    12b0:	2b 96       	adiw	r28, 0x0b	; 11
    12b2:	e2 e1       	ldi	r30, 0x12	; 18
    12b4:	0c 94 65 0a 	jmp	0x14ca	; 0x14ca <__epilogue_restores__>

000012b8 <__ctype_isfalse>:
    12b8:	99 27       	eor	r25, r25
    12ba:	88 27       	eor	r24, r24

000012bc <__ctype_istrue>:
    12bc:	08 95       	ret

000012be <strnlen_P>:
    12be:	fc 01       	movw	r30, r24
    12c0:	05 90       	lpm	r0, Z+
    12c2:	61 50       	subi	r22, 0x01	; 1
    12c4:	70 40       	sbci	r23, 0x00	; 0
    12c6:	01 10       	cpse	r0, r1
    12c8:	d8 f7       	brcc	.-10     	; 0x12c0 <strnlen_P+0x2>
    12ca:	80 95       	com	r24
    12cc:	90 95       	com	r25
    12ce:	8e 0f       	add	r24, r30
    12d0:	9f 1f       	adc	r25, r31
    12d2:	08 95       	ret

000012d4 <strnlen>:
    12d4:	fc 01       	movw	r30, r24
    12d6:	61 50       	subi	r22, 0x01	; 1
    12d8:	70 40       	sbci	r23, 0x00	; 0
    12da:	01 90       	ld	r0, Z+
    12dc:	01 10       	cpse	r0, r1
    12de:	d8 f7       	brcc	.-10     	; 0x12d6 <strnlen+0x2>
    12e0:	80 95       	com	r24
    12e2:	90 95       	com	r25
    12e4:	8e 0f       	add	r24, r30
    12e6:	9f 1f       	adc	r25, r31
    12e8:	08 95       	ret

000012ea <fputc>:
    12ea:	0f 93       	push	r16
    12ec:	1f 93       	push	r17
    12ee:	cf 93       	push	r28
    12f0:	df 93       	push	r29
    12f2:	fb 01       	movw	r30, r22
    12f4:	23 81       	ldd	r18, Z+3	; 0x03
    12f6:	21 fd       	sbrc	r18, 1
    12f8:	03 c0       	rjmp	.+6      	; 0x1300 <fputc+0x16>
    12fa:	8f ef       	ldi	r24, 0xFF	; 255
    12fc:	9f ef       	ldi	r25, 0xFF	; 255
    12fe:	2c c0       	rjmp	.+88     	; 0x1358 <fputc+0x6e>
    1300:	22 ff       	sbrs	r18, 2
    1302:	16 c0       	rjmp	.+44     	; 0x1330 <fputc+0x46>
    1304:	46 81       	ldd	r20, Z+6	; 0x06
    1306:	57 81       	ldd	r21, Z+7	; 0x07
    1308:	24 81       	ldd	r18, Z+4	; 0x04
    130a:	35 81       	ldd	r19, Z+5	; 0x05
    130c:	42 17       	cp	r20, r18
    130e:	53 07       	cpc	r21, r19
    1310:	44 f4       	brge	.+16     	; 0x1322 <fputc+0x38>
    1312:	a0 81       	ld	r26, Z
    1314:	b1 81       	ldd	r27, Z+1	; 0x01
    1316:	9d 01       	movw	r18, r26
    1318:	2f 5f       	subi	r18, 0xFF	; 255
    131a:	3f 4f       	sbci	r19, 0xFF	; 255
    131c:	20 83       	st	Z, r18
    131e:	31 83       	std	Z+1, r19	; 0x01
    1320:	8c 93       	st	X, r24
    1322:	26 81       	ldd	r18, Z+6	; 0x06
    1324:	37 81       	ldd	r19, Z+7	; 0x07
    1326:	2f 5f       	subi	r18, 0xFF	; 255
    1328:	3f 4f       	sbci	r19, 0xFF	; 255
    132a:	26 83       	std	Z+6, r18	; 0x06
    132c:	37 83       	std	Z+7, r19	; 0x07
    132e:	14 c0       	rjmp	.+40     	; 0x1358 <fputc+0x6e>
    1330:	8b 01       	movw	r16, r22
    1332:	ec 01       	movw	r28, r24
    1334:	fb 01       	movw	r30, r22
    1336:	00 84       	ldd	r0, Z+8	; 0x08
    1338:	f1 85       	ldd	r31, Z+9	; 0x09
    133a:	e0 2d       	mov	r30, r0
    133c:	09 95       	icall
    133e:	89 2b       	or	r24, r25
    1340:	e1 f6       	brne	.-72     	; 0x12fa <fputc+0x10>
    1342:	d8 01       	movw	r26, r16
    1344:	16 96       	adiw	r26, 0x06	; 6
    1346:	8d 91       	ld	r24, X+
    1348:	9c 91       	ld	r25, X
    134a:	17 97       	sbiw	r26, 0x07	; 7
    134c:	01 96       	adiw	r24, 0x01	; 1
    134e:	16 96       	adiw	r26, 0x06	; 6
    1350:	8d 93       	st	X+, r24
    1352:	9c 93       	st	X, r25
    1354:	17 97       	sbiw	r26, 0x07	; 7
    1356:	ce 01       	movw	r24, r28
    1358:	df 91       	pop	r29
    135a:	cf 91       	pop	r28
    135c:	1f 91       	pop	r17
    135e:	0f 91       	pop	r16
    1360:	08 95       	ret

00001362 <__ultoa_invert>:
    1362:	fa 01       	movw	r30, r20
    1364:	aa 27       	eor	r26, r26
    1366:	28 30       	cpi	r18, 0x08	; 8
    1368:	51 f1       	breq	.+84     	; 0x13be <__ultoa_invert+0x5c>
    136a:	20 31       	cpi	r18, 0x10	; 16
    136c:	81 f1       	breq	.+96     	; 0x13ce <__ultoa_invert+0x6c>
    136e:	e8 94       	clt
    1370:	6f 93       	push	r22
    1372:	6e 7f       	andi	r22, 0xFE	; 254
    1374:	6e 5f       	subi	r22, 0xFE	; 254
    1376:	7f 4f       	sbci	r23, 0xFF	; 255
    1378:	8f 4f       	sbci	r24, 0xFF	; 255
    137a:	9f 4f       	sbci	r25, 0xFF	; 255
    137c:	af 4f       	sbci	r26, 0xFF	; 255
    137e:	b1 e0       	ldi	r27, 0x01	; 1
    1380:	3e d0       	rcall	.+124    	; 0x13fe <__ultoa_invert+0x9c>
    1382:	b4 e0       	ldi	r27, 0x04	; 4
    1384:	3c d0       	rcall	.+120    	; 0x13fe <__ultoa_invert+0x9c>
    1386:	67 0f       	add	r22, r23
    1388:	78 1f       	adc	r23, r24
    138a:	89 1f       	adc	r24, r25
    138c:	9a 1f       	adc	r25, r26
    138e:	a1 1d       	adc	r26, r1
    1390:	68 0f       	add	r22, r24
    1392:	79 1f       	adc	r23, r25
    1394:	8a 1f       	adc	r24, r26
    1396:	91 1d       	adc	r25, r1
    1398:	a1 1d       	adc	r26, r1
    139a:	6a 0f       	add	r22, r26
    139c:	71 1d       	adc	r23, r1
    139e:	81 1d       	adc	r24, r1
    13a0:	91 1d       	adc	r25, r1
    13a2:	a1 1d       	adc	r26, r1
    13a4:	20 d0       	rcall	.+64     	; 0x13e6 <__ultoa_invert+0x84>
    13a6:	09 f4       	brne	.+2      	; 0x13aa <__ultoa_invert+0x48>
    13a8:	68 94       	set
    13aa:	3f 91       	pop	r19
    13ac:	2a e0       	ldi	r18, 0x0A	; 10
    13ae:	26 9f       	mul	r18, r22
    13b0:	11 24       	eor	r1, r1
    13b2:	30 19       	sub	r19, r0
    13b4:	30 5d       	subi	r19, 0xD0	; 208
    13b6:	31 93       	st	Z+, r19
    13b8:	de f6       	brtc	.-74     	; 0x1370 <__ultoa_invert+0xe>
    13ba:	cf 01       	movw	r24, r30
    13bc:	08 95       	ret
    13be:	46 2f       	mov	r20, r22
    13c0:	47 70       	andi	r20, 0x07	; 7
    13c2:	40 5d       	subi	r20, 0xD0	; 208
    13c4:	41 93       	st	Z+, r20
    13c6:	b3 e0       	ldi	r27, 0x03	; 3
    13c8:	0f d0       	rcall	.+30     	; 0x13e8 <__ultoa_invert+0x86>
    13ca:	c9 f7       	brne	.-14     	; 0x13be <__ultoa_invert+0x5c>
    13cc:	f6 cf       	rjmp	.-20     	; 0x13ba <__ultoa_invert+0x58>
    13ce:	46 2f       	mov	r20, r22
    13d0:	4f 70       	andi	r20, 0x0F	; 15
    13d2:	40 5d       	subi	r20, 0xD0	; 208
    13d4:	4a 33       	cpi	r20, 0x3A	; 58
    13d6:	18 f0       	brcs	.+6      	; 0x13de <__ultoa_invert+0x7c>
    13d8:	49 5d       	subi	r20, 0xD9	; 217
    13da:	31 fd       	sbrc	r19, 1
    13dc:	40 52       	subi	r20, 0x20	; 32
    13de:	41 93       	st	Z+, r20
    13e0:	02 d0       	rcall	.+4      	; 0x13e6 <__ultoa_invert+0x84>
    13e2:	a9 f7       	brne	.-22     	; 0x13ce <__ultoa_invert+0x6c>
    13e4:	ea cf       	rjmp	.-44     	; 0x13ba <__ultoa_invert+0x58>
    13e6:	b4 e0       	ldi	r27, 0x04	; 4
    13e8:	a6 95       	lsr	r26
    13ea:	97 95       	ror	r25
    13ec:	87 95       	ror	r24
    13ee:	77 95       	ror	r23
    13f0:	67 95       	ror	r22
    13f2:	ba 95       	dec	r27
    13f4:	c9 f7       	brne	.-14     	; 0x13e8 <__ultoa_invert+0x86>
    13f6:	00 97       	sbiw	r24, 0x00	; 0
    13f8:	61 05       	cpc	r22, r1
    13fa:	71 05       	cpc	r23, r1
    13fc:	08 95       	ret
    13fe:	9b 01       	movw	r18, r22
    1400:	ac 01       	movw	r20, r24
    1402:	0a 2e       	mov	r0, r26
    1404:	06 94       	lsr	r0
    1406:	57 95       	ror	r21
    1408:	47 95       	ror	r20
    140a:	37 95       	ror	r19
    140c:	27 95       	ror	r18
    140e:	ba 95       	dec	r27
    1410:	c9 f7       	brne	.-14     	; 0x1404 <__ultoa_invert+0xa2>
    1412:	62 0f       	add	r22, r18
    1414:	73 1f       	adc	r23, r19
    1416:	84 1f       	adc	r24, r20
    1418:	95 1f       	adc	r25, r21
    141a:	a0 1d       	adc	r26, r0
    141c:	08 95       	ret

0000141e <__mulsi3>:
    141e:	db 01       	movw	r26, r22
    1420:	8f 93       	push	r24
    1422:	9f 93       	push	r25
    1424:	0e 94 41 0a 	call	0x1482	; 0x1482 <__muluhisi3>
    1428:	bf 91       	pop	r27
    142a:	af 91       	pop	r26
    142c:	a2 9f       	mul	r26, r18
    142e:	80 0d       	add	r24, r0
    1430:	91 1d       	adc	r25, r1
    1432:	a3 9f       	mul	r26, r19
    1434:	90 0d       	add	r25, r0
    1436:	b2 9f       	mul	r27, r18
    1438:	90 0d       	add	r25, r0
    143a:	11 24       	eor	r1, r1
    143c:	08 95       	ret

0000143e <__udivmodsi4>:
    143e:	a1 e2       	ldi	r26, 0x21	; 33
    1440:	1a 2e       	mov	r1, r26
    1442:	aa 1b       	sub	r26, r26
    1444:	bb 1b       	sub	r27, r27
    1446:	fd 01       	movw	r30, r26
    1448:	0d c0       	rjmp	.+26     	; 0x1464 <__udivmodsi4_ep>

0000144a <__udivmodsi4_loop>:
    144a:	aa 1f       	adc	r26, r26
    144c:	bb 1f       	adc	r27, r27
    144e:	ee 1f       	adc	r30, r30
    1450:	ff 1f       	adc	r31, r31
    1452:	a2 17       	cp	r26, r18
    1454:	b3 07       	cpc	r27, r19
    1456:	e4 07       	cpc	r30, r20
    1458:	f5 07       	cpc	r31, r21
    145a:	20 f0       	brcs	.+8      	; 0x1464 <__udivmodsi4_ep>
    145c:	a2 1b       	sub	r26, r18
    145e:	b3 0b       	sbc	r27, r19
    1460:	e4 0b       	sbc	r30, r20
    1462:	f5 0b       	sbc	r31, r21

00001464 <__udivmodsi4_ep>:
    1464:	66 1f       	adc	r22, r22
    1466:	77 1f       	adc	r23, r23
    1468:	88 1f       	adc	r24, r24
    146a:	99 1f       	adc	r25, r25
    146c:	1a 94       	dec	r1
    146e:	69 f7       	brne	.-38     	; 0x144a <__udivmodsi4_loop>
    1470:	60 95       	com	r22
    1472:	70 95       	com	r23
    1474:	80 95       	com	r24
    1476:	90 95       	com	r25
    1478:	9b 01       	movw	r18, r22
    147a:	ac 01       	movw	r20, r24
    147c:	bd 01       	movw	r22, r26
    147e:	cf 01       	movw	r24, r30
    1480:	08 95       	ret

00001482 <__muluhisi3>:
    1482:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <__umulhisi3>
    1486:	a5 9f       	mul	r26, r21
    1488:	90 0d       	add	r25, r0
    148a:	b4 9f       	mul	r27, r20
    148c:	90 0d       	add	r25, r0
    148e:	a4 9f       	mul	r26, r20
    1490:	80 0d       	add	r24, r0
    1492:	91 1d       	adc	r25, r1
    1494:	11 24       	eor	r1, r1
    1496:	08 95       	ret

00001498 <__prologue_saves__>:
    1498:	2f 92       	push	r2
    149a:	3f 92       	push	r3
    149c:	4f 92       	push	r4
    149e:	5f 92       	push	r5
    14a0:	6f 92       	push	r6
    14a2:	7f 92       	push	r7
    14a4:	8f 92       	push	r8
    14a6:	9f 92       	push	r9
    14a8:	af 92       	push	r10
    14aa:	bf 92       	push	r11
    14ac:	cf 92       	push	r12
    14ae:	df 92       	push	r13
    14b0:	ef 92       	push	r14
    14b2:	ff 92       	push	r15
    14b4:	0f 93       	push	r16
    14b6:	1f 93       	push	r17
    14b8:	cf 93       	push	r28
    14ba:	df 93       	push	r29
    14bc:	cd b7       	in	r28, 0x3d	; 61
    14be:	de b7       	in	r29, 0x3e	; 62
    14c0:	ca 1b       	sub	r28, r26
    14c2:	db 0b       	sbc	r29, r27
    14c4:	cd bf       	out	0x3d, r28	; 61
    14c6:	de bf       	out	0x3e, r29	; 62
    14c8:	09 94       	ijmp

000014ca <__epilogue_restores__>:
    14ca:	2a 88       	ldd	r2, Y+18	; 0x12
    14cc:	39 88       	ldd	r3, Y+17	; 0x11
    14ce:	48 88       	ldd	r4, Y+16	; 0x10
    14d0:	5f 84       	ldd	r5, Y+15	; 0x0f
    14d2:	6e 84       	ldd	r6, Y+14	; 0x0e
    14d4:	7d 84       	ldd	r7, Y+13	; 0x0d
    14d6:	8c 84       	ldd	r8, Y+12	; 0x0c
    14d8:	9b 84       	ldd	r9, Y+11	; 0x0b
    14da:	aa 84       	ldd	r10, Y+10	; 0x0a
    14dc:	b9 84       	ldd	r11, Y+9	; 0x09
    14de:	c8 84       	ldd	r12, Y+8	; 0x08
    14e0:	df 80       	ldd	r13, Y+7	; 0x07
    14e2:	ee 80       	ldd	r14, Y+6	; 0x06
    14e4:	fd 80       	ldd	r15, Y+5	; 0x05
    14e6:	0c 81       	ldd	r16, Y+4	; 0x04
    14e8:	1b 81       	ldd	r17, Y+3	; 0x03
    14ea:	aa 81       	ldd	r26, Y+2	; 0x02
    14ec:	b9 81       	ldd	r27, Y+1	; 0x01
    14ee:	ce 0f       	add	r28, r30
    14f0:	d1 1d       	adc	r29, r1
    14f2:	cd bf       	out	0x3d, r28	; 61
    14f4:	de bf       	out	0x3e, r29	; 62
    14f6:	ed 01       	movw	r28, r26
    14f8:	08 95       	ret

000014fa <__umulhisi3>:
    14fa:	a2 9f       	mul	r26, r18
    14fc:	b0 01       	movw	r22, r0
    14fe:	b3 9f       	mul	r27, r19
    1500:	c0 01       	movw	r24, r0
    1502:	a3 9f       	mul	r26, r19
    1504:	70 0d       	add	r23, r0
    1506:	81 1d       	adc	r24, r1
    1508:	11 24       	eor	r1, r1
    150a:	91 1d       	adc	r25, r1
    150c:	b2 9f       	mul	r27, r18
    150e:	70 0d       	add	r23, r0
    1510:	81 1d       	adc	r24, r1
    1512:	11 24       	eor	r1, r1
    1514:	91 1d       	adc	r25, r1
    1516:	08 95       	ret

00001518 <_exit>:
    1518:	f8 94       	cli

0000151a <__stop_program>:
    151a:	ff cf       	rjmp	.-2      	; 0x151a <__stop_program>
