
atmevse_firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00802800  00000a91  00000945  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000694  00000200  00000200  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001fd  00004894  00000894  00000748  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000cf  00802810  00802810  00000955  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00000955  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000988  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000158  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000467c  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002775  00000000  00000000  0000519c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dbd  00000000  00000000  00007911  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000354  00000000  00000000  000086d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000022d2  00000000  00000000  00008a24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000068a  00000000  00000000  0000acf6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000150  00000000  00000000  0000b380  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000200 <__vectors>:
 200:	0c 94 48 01 	jmp	0x290	; 0x290 <__ctors_end>
 204:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 208:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 20c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 210:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 214:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 218:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 21c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 220:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 224:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 228:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 22c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 230:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__vector_12>
 234:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 238:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 23c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 240:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 244:	0c 94 87 02 	jmp	0x50e	; 0x50e <__vector_17>
 248:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 24c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 250:	0c 94 45 02 	jmp	0x48a	; 0x48a <__vector_20>
 254:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 258:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 25c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 260:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 264:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 268:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 26c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 270:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 274:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 278:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 27c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 280:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 284:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 288:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 28c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>

00000290 <__ctors_end>:
 290:	11 24       	eor	r1, r1
 292:	1f be       	out	0x3f, r1	; 63
 294:	cf ef       	ldi	r28, 0xFF	; 255
 296:	cd bf       	out	0x3d, r28	; 61
 298:	df e3       	ldi	r29, 0x3F	; 63
 29a:	de bf       	out	0x3e, r29	; 62

0000029c <__do_copy_data>:
 29c:	18 e2       	ldi	r17, 0x28	; 40
 29e:	a0 e0       	ldi	r26, 0x00	; 0
 2a0:	b8 e2       	ldi	r27, 0x28	; 40
 2a2:	e1 e9       	ldi	r30, 0x91	; 145
 2a4:	fa e0       	ldi	r31, 0x0A	; 10
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x10>
 2a8:	05 90       	lpm	r0, Z+
 2aa:	0d 92       	st	X+, r0
 2ac:	a0 31       	cpi	r26, 0x10	; 16
 2ae:	b1 07       	cpc	r27, r17
 2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0xc>

000002b2 <__do_clear_bss>:
 2b2:	28 e2       	ldi	r18, 0x28	; 40
 2b4:	a0 e1       	ldi	r26, 0x10	; 16
 2b6:	b8 e2       	ldi	r27, 0x28	; 40
 2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
 2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
 2bc:	af 3d       	cpi	r26, 0xDF	; 223
 2be:	b2 07       	cpc	r27, r18
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
 2c2:	0e 94 b5 02 	call	0x56a	; 0x56a <main>
 2c6:	0c 94 48 04 	jmp	0x890	; 0x890 <_exit>

000002ca <__bad_interrupt>:
 2ca:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

000002ce <init>:
    else {
        dutyCycle = 10;
    }
    pwm_set_duty_cycle(dutyCycle);
    return 0;
}
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	98 ed       	ldi	r25, 0xD8	; 216
 2d4:	94 bf       	out	0x34, r25	; 52
 2d6:	e0 e1       	ldi	r30, 0x10	; 16
 2d8:	f1 e0       	ldi	r31, 0x01	; 1
 2da:	80 81       	ld	r24, Z
 2dc:	80 64       	ori	r24, 0x40	; 64
 2de:	80 83       	st	Z, r24
 2e0:	80 81       	ld	r24, Z
 2e2:	81 60       	ori	r24, 0x01	; 1
 2e4:	80 83       	st	Z, r24
 2e6:	94 bf       	out	0x34, r25	; 52
 2e8:	31 e0       	ldi	r19, 0x01	; 1
 2ea:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
 2ee:	e0 e6       	ldi	r30, 0x60	; 96
 2f0:	f4 e0       	ldi	r31, 0x04	; 4
 2f2:	88 e0       	ldi	r24, 0x08	; 8
 2f4:	81 83       	std	Z+1, r24	; 0x01
 2f6:	90 e1       	ldi	r25, 0x10	; 16
 2f8:	92 83       	std	Z+2, r25	; 0x02
 2fa:	94 89       	ldd	r25, Z+20	; 0x14
 2fc:	98 7f       	andi	r25, 0xF8	; 248
 2fe:	94 8b       	std	Z+20, r25	; 0x14
 300:	94 89       	ldd	r25, Z+20	; 0x14
 302:	92 60       	ori	r25, 0x02	; 2
 304:	94 8b       	std	Z+20, r25	; 0x14
 306:	94 89       	ldd	r25, Z+20	; 0x14
 308:	97 7f       	andi	r25, 0xF7	; 247
 30a:	94 8b       	std	Z+20, r25	; 0x14
 30c:	a0 e0       	ldi	r26, 0x00	; 0
 30e:	b4 e0       	ldi	r27, 0x04	; 4
 310:	90 e7       	ldi	r25, 0x70	; 112
 312:	11 96       	adiw	r26, 0x01	; 1
 314:	9c 93       	st	X, r25
 316:	11 97       	sbiw	r26, 0x01	; 1
 318:	16 96       	adiw	r26, 0x06	; 6
 31a:	9c 93       	st	X, r25
 31c:	16 97       	sbiw	r26, 0x06	; 6
 31e:	11 96       	adiw	r26, 0x01	; 1
 320:	8c 93       	st	X, r24
 322:	11 97       	sbiw	r26, 0x01	; 1
 324:	16 96       	adiw	r26, 0x06	; 6
 326:	8c 93       	st	X, r24
 328:	16 97       	sbiw	r26, 0x06	; 6
 32a:	90 e8       	ldi	r25, 0x80	; 128
 32c:	11 96       	adiw	r26, 0x01	; 1
 32e:	9c 93       	st	X, r25
 330:	11 97       	sbiw	r26, 0x01	; 1
 332:	15 96       	adiw	r26, 0x05	; 5
 334:	9c 93       	st	X, r25
 336:	15 97       	sbiw	r26, 0x05	; 5
 338:	c0 e4       	ldi	r28, 0x40	; 64
 33a:	d4 e0       	ldi	r29, 0x04	; 4
 33c:	84 e0       	ldi	r24, 0x04	; 4
 33e:	89 83       	std	Y+1, r24	; 0x01
 340:	8d 83       	std	Y+5, r24	; 0x05
 342:	82 83       	std	Z+2, r24	; 0x02
 344:	22 89       	ldd	r18, Z+18	; 0x12
 346:	22 8b       	std	Z+18, r18	; 0x12
 348:	20 e2       	ldi	r18, 0x20	; 32
 34a:	22 83       	std	Z+2, r18	; 0x02
 34c:	25 89       	ldd	r18, Z+21	; 0x15
 34e:	28 7f       	andi	r18, 0xF8	; 248
 350:	25 8b       	std	Z+21, r18	; 0x15
 352:	25 89       	ldd	r18, Z+21	; 0x15
 354:	24 60       	ori	r18, 0x04	; 4
 356:	25 8b       	std	Z+21, r18	; 0x15
 358:	25 89       	ldd	r18, Z+21	; 0x15
 35a:	27 7f       	andi	r18, 0xF7	; 247
 35c:	25 8b       	std	Z+21, r18	; 0x15
 35e:	20 e4       	ldi	r18, 0x40	; 64
 360:	22 83       	std	Z+2, r18	; 0x02
 362:	26 89       	ldd	r18, Z+22	; 0x16
 364:	28 7f       	andi	r18, 0xF8	; 248
 366:	26 8b       	std	Z+22, r18	; 0x16
 368:	26 89       	ldd	r18, Z+22	; 0x16
 36a:	24 60       	ori	r18, 0x04	; 4
 36c:	26 8b       	std	Z+22, r18	; 0x16
 36e:	26 89       	ldd	r18, Z+22	; 0x16
 370:	27 7f       	andi	r18, 0xF7	; 247
 372:	26 8b       	std	Z+22, r18	; 0x16
 374:	92 83       	std	Z+2, r25	; 0x02
 376:	97 89       	ldd	r25, Z+23	; 0x17
 378:	98 7f       	andi	r25, 0xF8	; 248
 37a:	97 8b       	std	Z+23, r25	; 0x17
 37c:	97 89       	ldd	r25, Z+23	; 0x17
 37e:	94 60       	ori	r25, 0x04	; 4
 380:	97 8b       	std	Z+23, r25	; 0x17
 382:	97 89       	ldd	r25, Z+23	; 0x17
 384:	97 7f       	andi	r25, 0xF7	; 247
 386:	97 8b       	std	Z+23, r25	; 0x17
 388:	32 83       	std	Z+2, r19	; 0x02
 38a:	90 89       	ldd	r25, Z+16	; 0x10
 38c:	98 7f       	andi	r25, 0xF8	; 248
 38e:	90 8b       	std	Z+16, r25	; 0x10
 390:	90 89       	ldd	r25, Z+16	; 0x10
 392:	94 60       	ori	r25, 0x04	; 4
 394:	90 8b       	std	Z+16, r25	; 0x10
 396:	90 89       	ldd	r25, Z+16	; 0x10
 398:	97 7f       	andi	r25, 0xF7	; 247
 39a:	90 8b       	std	Z+16, r25	; 0x10
 39c:	92 e0       	ldi	r25, 0x02	; 2
 39e:	92 83       	std	Z+2, r25	; 0x02
 3a0:	91 89       	ldd	r25, Z+17	; 0x11
 3a2:	98 7f       	andi	r25, 0xF8	; 248
 3a4:	91 8b       	std	Z+17, r25	; 0x11
 3a6:	91 89       	ldd	r25, Z+17	; 0x11
 3a8:	94 60       	ori	r25, 0x04	; 4
 3aa:	91 8b       	std	Z+17, r25	; 0x11
 3ac:	91 89       	ldd	r25, Z+17	; 0x11
 3ae:	97 7f       	andi	r25, 0xF7	; 247
 3b0:	91 8b       	std	Z+17, r25	; 0x11
 3b2:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
 3b6:	11 96       	adiw	r26, 0x01	; 1
 3b8:	8c 93       	st	X, r24
 3ba:	11 97       	sbiw	r26, 0x01	; 1
 3bc:	15 96       	adiw	r26, 0x05	; 5
 3be:	8c 93       	st	X, r24
 3c0:	c0 e0       	ldi	r28, 0x00	; 0
 3c2:	da e0       	ldi	r29, 0x0A	; 10
 3c4:	88 81       	ld	r24, Y
 3c6:	87 60       	ori	r24, 0x07	; 7
 3c8:	88 83       	st	Y, r24
 3ca:	89 81       	ldd	r24, Y+1	; 0x01
 3cc:	87 60       	ori	r24, 0x07	; 7
 3ce:	89 83       	std	Y+1, r24	; 0x01
 3d0:	89 85       	ldd	r24, Y+9	; 0x09
 3d2:	8e 7f       	andi	r24, 0xFE	; 254
 3d4:	89 87       	std	Y+9, r24	; 0x09
 3d6:	81 e7       	ldi	r24, 0x71	; 113
 3d8:	92 e0       	ldi	r25, 0x02	; 2
 3da:	8e ab       	std	Y+54, r24	; 0x36
 3dc:	9f ab       	std	Y+55, r25	; 0x37
 3de:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__data_start>
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	0e 94 1f 03 	call	0x63e	; 0x63e <__floatsisf>
 3ec:	2a e0       	ldi	r18, 0x0A	; 10
 3ee:	37 ed       	ldi	r19, 0xD7	; 215
 3f0:	43 e2       	ldi	r20, 0x23	; 35
 3f2:	5c e3       	ldi	r21, 0x3C	; 60
 3f4:	0e 94 83 03 	call	0x706	; 0x706 <__mulsf3>
 3f8:	20 e0       	ldi	r18, 0x00	; 0
 3fa:	30 e4       	ldi	r19, 0x40	; 64
 3fc:	4c e1       	ldi	r20, 0x1C	; 28
 3fe:	54 e4       	ldi	r21, 0x44	; 68
 400:	0e 94 83 03 	call	0x706	; 0x706 <__mulsf3>
 404:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fixunssfsi>
 408:	6c af       	std	Y+60, r22	; 0x3c
 40a:	7d af       	std	Y+61, r23	; 0x3d
 40c:	89 81       	ldd	r24, Y+1	; 0x01
 40e:	8f 7b       	andi	r24, 0xBF	; 191
 410:	89 83       	std	Y+1, r24	; 0x01
 412:	e0 e8       	ldi	r30, 0x80	; 128
 414:	fa e0       	ldi	r31, 0x0A	; 10
 416:	80 81       	ld	r24, Z
 418:	84 60       	ori	r24, 0x04	; 4
 41a:	80 83       	st	Z, r24
 41c:	81 81       	ldd	r24, Z+1	; 0x01
 41e:	81 83       	std	Z+1, r24	; 0x01
 420:	84 81       	ldd	r24, Z+4	; 0x04
 422:	8e 7f       	andi	r24, 0xFE	; 254
 424:	84 83       	std	Z+4, r24	; 0x04
 426:	85 81       	ldd	r24, Z+5	; 0x05
 428:	81 60       	ori	r24, 0x01	; 1
 42a:	85 83       	std	Z+5, r24	; 0x05
 42c:	8f ef       	ldi	r24, 0xFF	; 255
 42e:	9f ef       	ldi	r25, 0xFF	; 255
 430:	84 87       	std	Z+12, r24	; 0x0c
 432:	95 87       	std	Z+13, r25	; 0x0d
 434:	80 81       	ld	r24, Z
 436:	81 60       	ori	r24, 0x01	; 1
 438:	80 83       	st	Z, r24
 43a:	e0 e0       	ldi	r30, 0x00	; 0
 43c:	f1 e1       	ldi	r31, 0x11	; 17
 43e:	81 a1       	ldd	r24, Z+33	; 0x21
 440:	80 93 12 28 	sts	0x2812, r24	; 0x802812 <sigrow_offset>
 444:	80 a1       	ldd	r24, Z+32	; 0x20
 446:	80 93 11 28 	sts	0x2811, r24	; 0x802811 <sigrow_gain>
 44a:	e0 ea       	ldi	r30, 0xA0	; 160
 44c:	f0 e0       	ldi	r31, 0x00	; 0
 44e:	80 81       	ld	r24, Z
 450:	80 61       	ori	r24, 0x10	; 16
 452:	80 83       	st	Z, r24
 454:	81 81       	ldd	r24, Z+1	; 0x01
 456:	82 60       	ori	r24, 0x02	; 2
 458:	81 83       	std	Z+1, r24	; 0x01
 45a:	e0 e0       	ldi	r30, 0x00	; 0
 45c:	f6 e0       	ldi	r31, 0x06	; 6
 45e:	82 81       	ldd	r24, Z+2	; 0x02
 460:	85 61       	ori	r24, 0x15	; 21
 462:	82 83       	std	Z+2, r24	; 0x02
 464:	83 81       	ldd	r24, Z+3	; 0x03
 466:	83 83       	std	Z+3, r24	; 0x03
 468:	85 e0       	ldi	r24, 0x05	; 5
 46a:	85 83       	std	Z+5, r24	; 0x05
 46c:	82 81       	ldd	r24, Z+2	; 0x02
 46e:	80 64       	ori	r24, 0x40	; 64
 470:	82 83       	std	Z+2, r24	; 0x02
 472:	80 81       	ld	r24, Z
 474:	81 60       	ori	r24, 0x01	; 1
 476:	80 83       	st	Z, r24
 478:	0e 94 c2 02 	call	0x584	; 0x584 <uart_init>
 47c:	10 92 d7 28 	sts	0x28D7, r1	; 0x8028d7 <rxbuffer+0x40>
 480:	10 92 d8 28 	sts	0x28D8, r1	; 0x8028d8 <rxbuffer+0x41>
 484:	df 91       	pop	r29
 486:	cf 91       	pop	r28
 488:	08 95       	ret

0000048a <__vector_20>:
    ADC0.INTFLAGS = ADC_RESRDY_bm;
    return 0;
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
 48a:	1f 92       	push	r1
 48c:	0f 92       	push	r0
 48e:	0f b6       	in	r0, 0x3f	; 63
 490:	0f 92       	push	r0
 492:	11 24       	eor	r1, r1
 494:	8f 93       	push	r24
 496:	ef 93       	push	r30
 498:	ff 93       	push	r31
    rxbuffer.read = 0;
    rxbuffer.write = 0;
}

int8_t led_toggle() {
    PORTD.OUTTGL = LED;
 49a:	e0 e6       	ldi	r30, 0x60	; 96
 49c:	f4 e0       	ldi	r31, 0x04	; 4
 49e:	88 e0       	ldi	r24, 0x08	; 8
 4a0:	87 83       	std	Z+7, r24	; 0x07
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
    led_toggle();
    PORTD.INTFLAGS = PORT_INT4_bm;
 4a2:	80 e1       	ldi	r24, 0x10	; 16
 4a4:	81 87       	std	Z+9, r24	; 0x09
}
 4a6:	ff 91       	pop	r31
 4a8:	ef 91       	pop	r30
 4aa:	8f 91       	pop	r24
 4ac:	0f 90       	pop	r0
 4ae:	0f be       	out	0x3f, r0	; 63
 4b0:	0f 90       	pop	r0
 4b2:	1f 90       	pop	r1
 4b4:	18 95       	reti

000004b6 <__vector_12>:

ISR(TCB0_INT_vect) {
 4b6:	1f 92       	push	r1
 4b8:	0f 92       	push	r0
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	0f 92       	push	r0
 4be:	11 24       	eor	r1, r1
 4c0:	2f 93       	push	r18
 4c2:	3f 93       	push	r19
 4c4:	4f 93       	push	r20
 4c6:	5f 93       	push	r21
 4c8:	6f 93       	push	r22
 4ca:	7f 93       	push	r23
 4cc:	8f 93       	push	r24
 4ce:	9f 93       	push	r25
 4d0:	af 93       	push	r26
 4d2:	bf 93       	push	r27
 4d4:	ef 93       	push	r30
 4d6:	ff 93       	push	r31
    printf("Interrupt!\r\n");
 4d8:	84 e9       	ldi	r24, 0x94	; 148
 4da:	98 e4       	ldi	r25, 0x48	; 72
 4dc:	0e 94 18 04 	call	0x830	; 0x830 <puts>
    rxbuffer.read = 0;
    rxbuffer.write = 0;
}

int8_t led_toggle() {
    PORTD.OUTTGL = LED;
 4e0:	88 e0       	ldi	r24, 0x08	; 8
 4e2:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x7f4467>
}

ISR(TCB0_INT_vect) {
    printf("Interrupt!\r\n");
    led_toggle();
    TCB0.INTFLAGS = TCB_CAPT_bm;
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <__TEXT_REGION_LENGTH__+0x7f4a86>
}
 4ec:	ff 91       	pop	r31
 4ee:	ef 91       	pop	r30
 4f0:	bf 91       	pop	r27
 4f2:	af 91       	pop	r26
 4f4:	9f 91       	pop	r25
 4f6:	8f 91       	pop	r24
 4f8:	7f 91       	pop	r23
 4fa:	6f 91       	pop	r22
 4fc:	5f 91       	pop	r21
 4fe:	4f 91       	pop	r20
 500:	3f 91       	pop	r19
 502:	2f 91       	pop	r18
 504:	0f 90       	pop	r0
 506:	0f be       	out	0x3f, r0	; 63
 508:	0f 90       	pop	r0
 50a:	1f 90       	pop	r1
 50c:	18 95       	reti

0000050e <__vector_17>:

ISR(USART0_RXC_vect) {
 50e:	1f 92       	push	r1
 510:	0f 92       	push	r0
 512:	0f b6       	in	r0, 0x3f	; 63
 514:	0f 92       	push	r0
 516:	11 24       	eor	r1, r1
 518:	8f 93       	push	r24
 51a:	9f 93       	push	r25
 51c:	ef 93       	push	r30
 51e:	ff 93       	push	r31
    char c = USART0_RXDATAL;
 520:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f4800>
    if ((c != '\r') && (c != '\n')) {
 524:	8d 30       	cpi	r24, 0x0D	; 13
 526:	c1 f0       	breq	.+48     	; 0x558 <__vector_17+0x4a>
 528:	e0 91 d8 28 	lds	r30, 0x28D8	; 0x8028d8 <rxbuffer+0x41>
 52c:	8a 30       	cpi	r24, 0x0A	; 10
 52e:	49 f0       	breq	.+18     	; 0x542 <__vector_17+0x34>
        rxbuffer.data[rxbuffer.write++] = c;
 530:	91 e0       	ldi	r25, 0x01	; 1
 532:	9e 0f       	add	r25, r30
 534:	90 93 d8 28 	sts	0x28D8, r25	; 0x8028d8 <rxbuffer+0x41>
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	e9 56       	subi	r30, 0x69	; 105
 53c:	f7 4d       	sbci	r31, 0xD7	; 215
 53e:	80 83       	st	Z, r24
    }
    if (c == '\n') {
        rxbuffer.data[rxbuffer.write++] = '\0';
        rxflag = 1;
        }   
}
 540:	0b c0       	rjmp	.+22     	; 0x558 <__vector_17+0x4a>
    char c = USART0_RXDATAL;
    if ((c != '\r') && (c != '\n')) {
        rxbuffer.data[rxbuffer.write++] = c;
    }
    if (c == '\n') {
        rxbuffer.data[rxbuffer.write++] = '\0';
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	8e 0f       	add	r24, r30
 546:	80 93 d8 28 	sts	0x28D8, r24	; 0x8028d8 <rxbuffer+0x41>
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	e9 56       	subi	r30, 0x69	; 105
 54e:	f7 4d       	sbci	r31, 0xD7	; 215
 550:	10 82       	st	Z, r1
        rxflag = 1;
 552:	81 e0       	ldi	r24, 0x01	; 1
 554:	80 93 10 28 	sts	0x2810, r24	; 0x802810 <__data_end>
        }   
}
 558:	ff 91       	pop	r31
 55a:	ef 91       	pop	r30
 55c:	9f 91       	pop	r25
 55e:	8f 91       	pop	r24
 560:	0f 90       	pop	r0
 562:	0f be       	out	0x3f, r0	; 63
 564:	0f 90       	pop	r0
 566:	1f 90       	pop	r1
 568:	18 95       	reti

0000056a <main>:

/*
    Application
    *************************************************/
int main(void) {
    init();
 56a:	0e 94 67 01 	call	0x2ce	; 0x2ce <init>
    sei();
 56e:	78 94       	sei
 570:	ff cf       	rjmp	.-2      	; 0x570 <main+0x6>

00000572 <uart0_printChar>:
    USART1.TXDATAL = c;
    while (!(USART1.STATUS & USART_DREIF_bm)) {     // Check for completed transmission
        ;
    }
    /* Return to receiver mode */
    PORTC.OUTCLR = PIN3_bm;
 572:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f4804>
 576:	95 ff       	sbrs	r25, 5
 578:	fc cf       	rjmp	.-8      	; 0x572 <uart0_printChar>
 57a:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f4802>
 57e:	80 e0       	ldi	r24, 0x00	; 0
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	08 95       	ret

00000584 <uart_init>:
    Function definitions
    *************************************************/
void uart_init() {
    /* Setup stream for printf() */  
    #if UART_SEL == 0
        stdout = &uart0_stream;
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	98 e2       	ldi	r25, 0x28	; 40
 588:	80 93 db 28 	sts	0x28DB, r24	; 0x8028db <__iob+0x2>
 58c:	90 93 dc 28 	sts	0x28DC, r25	; 0x8028dc <__iob+0x3>
        stdout = &uart1_stream;
    #endif
    
    /* USART0 Config (Main comms and debug interface) */
    /* Baud rate */
    USART0.BAUD = (uint16_t)USART_BAUD_RATE(BAUD0);
 590:	e0 e0       	ldi	r30, 0x00	; 0
 592:	f8 e0       	ldi	r31, 0x08	; 8
 594:	8b e5       	ldi	r24, 0x5B	; 91
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	80 87       	std	Z+8, r24	; 0x08
 59a:	91 87       	std	Z+9, r25	; 0x09
    /* Enable interrupts */
    USART0.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm);
 59c:	85 81       	ldd	r24, Z+5	; 0x05
 59e:	80 6e       	ori	r24, 0xE0	; 224
 5a0:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */
    USART0.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);
 5a2:	86 81       	ldd	r24, Z+6	; 0x06
 5a4:	80 6c       	ori	r24, 0xC0	; 192
 5a6:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PA0) to output, RX(PA1) to input */
    PORTA.DIRSET = PIN0_bm;
 5a8:	e0 e0       	ldi	r30, 0x00	; 0
 5aa:	f4 e0       	ldi	r31, 0x04	; 4
 5ac:	21 e0       	ldi	r18, 0x01	; 1
 5ae:	21 83       	std	Z+1, r18	; 0x01
    PORTA.DIRCLR = PIN1_bm;
 5b0:	92 e0       	ldi	r25, 0x02	; 2
 5b2:	92 83       	std	Z+2, r25	; 0x02
                                               

    
    /* USART1 Config (RS485 interface) */
    /* Baud rate */
    USART1.BAUD = (uint16_t)USART_BAUD_RATE(BAUD1);
 5b4:	e0 e2       	ldi	r30, 0x20	; 32
 5b6:	f8 e0       	ldi	r31, 0x08	; 8
 5b8:	47 e4       	ldi	r20, 0x47	; 71
 5ba:	50 e1       	ldi	r21, 0x10	; 16
 5bc:	40 87       	std	Z+8, r20	; 0x08
 5be:	51 87       	std	Z+9, r21	; 0x09
    /* Enable interrupts */
    USART1.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm | USART_RS485_EXT_gc); 
 5c0:	85 81       	ldd	r24, Z+5	; 0x05
 5c2:	81 6e       	ori	r24, 0xE1	; 225
 5c4:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */    
    USART1.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);   
 5c6:	86 81       	ldd	r24, Z+6	; 0x06
 5c8:	80 6c       	ori	r24, 0xC0	; 192
 5ca:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PC0) and XDIR(PC3) to output, RX(PC1) to input. XDIR low ->  Receiver mode */                     
    PORTC.DIRSET = PIN0_bm;                                              
 5cc:	e0 e4       	ldi	r30, 0x40	; 64
 5ce:	f4 e0       	ldi	r31, 0x04	; 4
 5d0:	21 83       	std	Z+1, r18	; 0x01
    PORTC.DIRCLR = PIN1_bm;                                                
 5d2:	92 83       	std	Z+2, r25	; 0x02
    PORTC.DIRSET = PIN3_bm;                                                
 5d4:	88 e0       	ldi	r24, 0x08	; 8
 5d6:	81 83       	std	Z+1, r24	; 0x01
    PORTC.OUTCLR = PIN3_bm;
 5d8:	86 83       	std	Z+6, r24	; 0x06
 5da:	08 95       	ret

000005dc <__fixunssfsi>:
 5dc:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__fp_splitA>
 5e0:	88 f0       	brcs	.+34     	; 0x604 <__fixunssfsi+0x28>
 5e2:	9f 57       	subi	r25, 0x7F	; 127
 5e4:	98 f0       	brcs	.+38     	; 0x60c <__fixunssfsi+0x30>
 5e6:	b9 2f       	mov	r27, r25
 5e8:	99 27       	eor	r25, r25
 5ea:	b7 51       	subi	r27, 0x17	; 23
 5ec:	b0 f0       	brcs	.+44     	; 0x61a <__fixunssfsi+0x3e>
 5ee:	e1 f0       	breq	.+56     	; 0x628 <__fixunssfsi+0x4c>
 5f0:	66 0f       	add	r22, r22
 5f2:	77 1f       	adc	r23, r23
 5f4:	88 1f       	adc	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	1a f0       	brmi	.+6      	; 0x600 <__fixunssfsi+0x24>
 5fa:	ba 95       	dec	r27
 5fc:	c9 f7       	brne	.-14     	; 0x5f0 <__fixunssfsi+0x14>
 5fe:	14 c0       	rjmp	.+40     	; 0x628 <__fixunssfsi+0x4c>
 600:	b1 30       	cpi	r27, 0x01	; 1
 602:	91 f0       	breq	.+36     	; 0x628 <__fixunssfsi+0x4c>
 604:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__fp_zero>
 608:	b1 e0       	ldi	r27, 0x01	; 1
 60a:	08 95       	ret
 60c:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__fp_zero>
 610:	67 2f       	mov	r22, r23
 612:	78 2f       	mov	r23, r24
 614:	88 27       	eor	r24, r24
 616:	b8 5f       	subi	r27, 0xF8	; 248
 618:	39 f0       	breq	.+14     	; 0x628 <__fixunssfsi+0x4c>
 61a:	b9 3f       	cpi	r27, 0xF9	; 249
 61c:	cc f3       	brlt	.-14     	; 0x610 <__fixunssfsi+0x34>
 61e:	86 95       	lsr	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b3 95       	inc	r27
 626:	d9 f7       	brne	.-10     	; 0x61e <__fixunssfsi+0x42>
 628:	3e f4       	brtc	.+14     	; 0x638 <__fixunssfsi+0x5c>
 62a:	90 95       	com	r25
 62c:	80 95       	com	r24
 62e:	70 95       	com	r23
 630:	61 95       	neg	r22
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	08 95       	ret

0000063a <__floatunsisf>:
 63a:	e8 94       	clt
 63c:	09 c0       	rjmp	.+18     	; 0x650 <__floatsisf+0x12>

0000063e <__floatsisf>:
 63e:	97 fb       	bst	r25, 7
 640:	3e f4       	brtc	.+14     	; 0x650 <__floatsisf+0x12>
 642:	90 95       	com	r25
 644:	80 95       	com	r24
 646:	70 95       	com	r23
 648:	61 95       	neg	r22
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	99 23       	and	r25, r25
 652:	a9 f0       	breq	.+42     	; 0x67e <__floatsisf+0x40>
 654:	f9 2f       	mov	r31, r25
 656:	96 e9       	ldi	r25, 0x96	; 150
 658:	bb 27       	eor	r27, r27
 65a:	93 95       	inc	r25
 65c:	f6 95       	lsr	r31
 65e:	87 95       	ror	r24
 660:	77 95       	ror	r23
 662:	67 95       	ror	r22
 664:	b7 95       	ror	r27
 666:	f1 11       	cpse	r31, r1
 668:	f8 cf       	rjmp	.-16     	; 0x65a <__floatsisf+0x1c>
 66a:	fa f4       	brpl	.+62     	; 0x6aa <__floatsisf+0x6c>
 66c:	bb 0f       	add	r27, r27
 66e:	11 f4       	brne	.+4      	; 0x674 <__floatsisf+0x36>
 670:	60 ff       	sbrs	r22, 0
 672:	1b c0       	rjmp	.+54     	; 0x6aa <__floatsisf+0x6c>
 674:	6f 5f       	subi	r22, 0xFF	; 255
 676:	7f 4f       	sbci	r23, 0xFF	; 255
 678:	8f 4f       	sbci	r24, 0xFF	; 255
 67a:	9f 4f       	sbci	r25, 0xFF	; 255
 67c:	16 c0       	rjmp	.+44     	; 0x6aa <__floatsisf+0x6c>
 67e:	88 23       	and	r24, r24
 680:	11 f0       	breq	.+4      	; 0x686 <__floatsisf+0x48>
 682:	96 e9       	ldi	r25, 0x96	; 150
 684:	11 c0       	rjmp	.+34     	; 0x6a8 <__floatsisf+0x6a>
 686:	77 23       	and	r23, r23
 688:	21 f0       	breq	.+8      	; 0x692 <__floatsisf+0x54>
 68a:	9e e8       	ldi	r25, 0x8E	; 142
 68c:	87 2f       	mov	r24, r23
 68e:	76 2f       	mov	r23, r22
 690:	05 c0       	rjmp	.+10     	; 0x69c <__floatsisf+0x5e>
 692:	66 23       	and	r22, r22
 694:	71 f0       	breq	.+28     	; 0x6b2 <__floatsisf+0x74>
 696:	96 e8       	ldi	r25, 0x86	; 134
 698:	86 2f       	mov	r24, r22
 69a:	70 e0       	ldi	r23, 0x00	; 0
 69c:	60 e0       	ldi	r22, 0x00	; 0
 69e:	2a f0       	brmi	.+10     	; 0x6aa <__floatsisf+0x6c>
 6a0:	9a 95       	dec	r25
 6a2:	66 0f       	add	r22, r22
 6a4:	77 1f       	adc	r23, r23
 6a6:	88 1f       	adc	r24, r24
 6a8:	da f7       	brpl	.-10     	; 0x6a0 <__floatsisf+0x62>
 6aa:	88 0f       	add	r24, r24
 6ac:	96 95       	lsr	r25
 6ae:	87 95       	ror	r24
 6b0:	97 f9       	bld	r25, 7
 6b2:	08 95       	ret

000006b4 <__fp_split3>:
 6b4:	57 fd       	sbrc	r21, 7
 6b6:	90 58       	subi	r25, 0x80	; 128
 6b8:	44 0f       	add	r20, r20
 6ba:	55 1f       	adc	r21, r21
 6bc:	59 f0       	breq	.+22     	; 0x6d4 <__fp_splitA+0x10>
 6be:	5f 3f       	cpi	r21, 0xFF	; 255
 6c0:	71 f0       	breq	.+28     	; 0x6de <__fp_splitA+0x1a>
 6c2:	47 95       	ror	r20

000006c4 <__fp_splitA>:
 6c4:	88 0f       	add	r24, r24
 6c6:	97 fb       	bst	r25, 7
 6c8:	99 1f       	adc	r25, r25
 6ca:	61 f0       	breq	.+24     	; 0x6e4 <__fp_splitA+0x20>
 6cc:	9f 3f       	cpi	r25, 0xFF	; 255
 6ce:	79 f0       	breq	.+30     	; 0x6ee <__fp_splitA+0x2a>
 6d0:	87 95       	ror	r24
 6d2:	08 95       	ret
 6d4:	12 16       	cp	r1, r18
 6d6:	13 06       	cpc	r1, r19
 6d8:	14 06       	cpc	r1, r20
 6da:	55 1f       	adc	r21, r21
 6dc:	f2 cf       	rjmp	.-28     	; 0x6c2 <__fp_split3+0xe>
 6de:	46 95       	lsr	r20
 6e0:	f1 df       	rcall	.-30     	; 0x6c4 <__fp_splitA>
 6e2:	08 c0       	rjmp	.+16     	; 0x6f4 <__fp_splitA+0x30>
 6e4:	16 16       	cp	r1, r22
 6e6:	17 06       	cpc	r1, r23
 6e8:	18 06       	cpc	r1, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	f1 cf       	rjmp	.-30     	; 0x6d0 <__fp_splitA+0xc>
 6ee:	86 95       	lsr	r24
 6f0:	71 05       	cpc	r23, r1
 6f2:	61 05       	cpc	r22, r1
 6f4:	08 94       	sec
 6f6:	08 95       	ret

000006f8 <__fp_zero>:
 6f8:	e8 94       	clt

000006fa <__fp_szero>:
 6fa:	bb 27       	eor	r27, r27
 6fc:	66 27       	eor	r22, r22
 6fe:	77 27       	eor	r23, r23
 700:	cb 01       	movw	r24, r22
 702:	97 f9       	bld	r25, 7
 704:	08 95       	ret

00000706 <__mulsf3>:
 706:	0e 94 96 03 	call	0x72c	; 0x72c <__mulsf3x>
 70a:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_round>
 70e:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__fp_pscA>
 712:	38 f0       	brcs	.+14     	; 0x722 <__mulsf3+0x1c>
 714:	0e 94 00 04 	call	0x800	; 0x800 <__fp_pscB>
 718:	20 f0       	brcs	.+8      	; 0x722 <__mulsf3+0x1c>
 71a:	95 23       	and	r25, r21
 71c:	11 f0       	breq	.+4      	; 0x722 <__mulsf3+0x1c>
 71e:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__fp_inf>
 722:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_nan>
 726:	11 24       	eor	r1, r1
 728:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__fp_szero>

0000072c <__mulsf3x>:
 72c:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__fp_split3>
 730:	70 f3       	brcs	.-36     	; 0x70e <__mulsf3+0x8>

00000732 <__mulsf3_pse>:
 732:	95 9f       	mul	r25, r21
 734:	c1 f3       	breq	.-16     	; 0x726 <__mulsf3+0x20>
 736:	95 0f       	add	r25, r21
 738:	50 e0       	ldi	r21, 0x00	; 0
 73a:	55 1f       	adc	r21, r21
 73c:	62 9f       	mul	r22, r18
 73e:	f0 01       	movw	r30, r0
 740:	72 9f       	mul	r23, r18
 742:	bb 27       	eor	r27, r27
 744:	f0 0d       	add	r31, r0
 746:	b1 1d       	adc	r27, r1
 748:	63 9f       	mul	r22, r19
 74a:	aa 27       	eor	r26, r26
 74c:	f0 0d       	add	r31, r0
 74e:	b1 1d       	adc	r27, r1
 750:	aa 1f       	adc	r26, r26
 752:	64 9f       	mul	r22, r20
 754:	66 27       	eor	r22, r22
 756:	b0 0d       	add	r27, r0
 758:	a1 1d       	adc	r26, r1
 75a:	66 1f       	adc	r22, r22
 75c:	82 9f       	mul	r24, r18
 75e:	22 27       	eor	r18, r18
 760:	b0 0d       	add	r27, r0
 762:	a1 1d       	adc	r26, r1
 764:	62 1f       	adc	r22, r18
 766:	73 9f       	mul	r23, r19
 768:	b0 0d       	add	r27, r0
 76a:	a1 1d       	adc	r26, r1
 76c:	62 1f       	adc	r22, r18
 76e:	83 9f       	mul	r24, r19
 770:	a0 0d       	add	r26, r0
 772:	61 1d       	adc	r22, r1
 774:	22 1f       	adc	r18, r18
 776:	74 9f       	mul	r23, r20
 778:	33 27       	eor	r19, r19
 77a:	a0 0d       	add	r26, r0
 77c:	61 1d       	adc	r22, r1
 77e:	23 1f       	adc	r18, r19
 780:	84 9f       	mul	r24, r20
 782:	60 0d       	add	r22, r0
 784:	21 1d       	adc	r18, r1
 786:	82 2f       	mov	r24, r18
 788:	76 2f       	mov	r23, r22
 78a:	6a 2f       	mov	r22, r26
 78c:	11 24       	eor	r1, r1
 78e:	9f 57       	subi	r25, 0x7F	; 127
 790:	50 40       	sbci	r21, 0x00	; 0
 792:	9a f0       	brmi	.+38     	; 0x7ba <__mulsf3_pse+0x88>
 794:	f1 f0       	breq	.+60     	; 0x7d2 <__mulsf3_pse+0xa0>
 796:	88 23       	and	r24, r24
 798:	4a f0       	brmi	.+18     	; 0x7ac <__mulsf3_pse+0x7a>
 79a:	ee 0f       	add	r30, r30
 79c:	ff 1f       	adc	r31, r31
 79e:	bb 1f       	adc	r27, r27
 7a0:	66 1f       	adc	r22, r22
 7a2:	77 1f       	adc	r23, r23
 7a4:	88 1f       	adc	r24, r24
 7a6:	91 50       	subi	r25, 0x01	; 1
 7a8:	50 40       	sbci	r21, 0x00	; 0
 7aa:	a9 f7       	brne	.-22     	; 0x796 <__mulsf3_pse+0x64>
 7ac:	9e 3f       	cpi	r25, 0xFE	; 254
 7ae:	51 05       	cpc	r21, r1
 7b0:	80 f0       	brcs	.+32     	; 0x7d2 <__mulsf3_pse+0xa0>
 7b2:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__fp_inf>
 7b6:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__fp_szero>
 7ba:	5f 3f       	cpi	r21, 0xFF	; 255
 7bc:	e4 f3       	brlt	.-8      	; 0x7b6 <__mulsf3_pse+0x84>
 7be:	98 3e       	cpi	r25, 0xE8	; 232
 7c0:	d4 f3       	brlt	.-12     	; 0x7b6 <__mulsf3_pse+0x84>
 7c2:	86 95       	lsr	r24
 7c4:	77 95       	ror	r23
 7c6:	67 95       	ror	r22
 7c8:	b7 95       	ror	r27
 7ca:	f7 95       	ror	r31
 7cc:	e7 95       	ror	r30
 7ce:	9f 5f       	subi	r25, 0xFF	; 255
 7d0:	c1 f7       	brne	.-16     	; 0x7c2 <__mulsf3_pse+0x90>
 7d2:	fe 2b       	or	r31, r30
 7d4:	88 0f       	add	r24, r24
 7d6:	91 1d       	adc	r25, r1
 7d8:	96 95       	lsr	r25
 7da:	87 95       	ror	r24
 7dc:	97 f9       	bld	r25, 7
 7de:	08 95       	ret

000007e0 <__fp_inf>:
 7e0:	97 f9       	bld	r25, 7
 7e2:	9f 67       	ori	r25, 0x7F	; 127
 7e4:	80 e8       	ldi	r24, 0x80	; 128
 7e6:	70 e0       	ldi	r23, 0x00	; 0
 7e8:	60 e0       	ldi	r22, 0x00	; 0
 7ea:	08 95       	ret

000007ec <__fp_nan>:
 7ec:	9f ef       	ldi	r25, 0xFF	; 255
 7ee:	80 ec       	ldi	r24, 0xC0	; 192
 7f0:	08 95       	ret

000007f2 <__fp_pscA>:
 7f2:	00 24       	eor	r0, r0
 7f4:	0a 94       	dec	r0
 7f6:	16 16       	cp	r1, r22
 7f8:	17 06       	cpc	r1, r23
 7fa:	18 06       	cpc	r1, r24
 7fc:	09 06       	cpc	r0, r25
 7fe:	08 95       	ret

00000800 <__fp_pscB>:
 800:	00 24       	eor	r0, r0
 802:	0a 94       	dec	r0
 804:	12 16       	cp	r1, r18
 806:	13 06       	cpc	r1, r19
 808:	14 06       	cpc	r1, r20
 80a:	05 06       	cpc	r0, r21
 80c:	08 95       	ret

0000080e <__fp_round>:
 80e:	09 2e       	mov	r0, r25
 810:	03 94       	inc	r0
 812:	00 0c       	add	r0, r0
 814:	11 f4       	brne	.+4      	; 0x81a <__fp_round+0xc>
 816:	88 23       	and	r24, r24
 818:	52 f0       	brmi	.+20     	; 0x82e <__fp_round+0x20>
 81a:	bb 0f       	add	r27, r27
 81c:	40 f4       	brcc	.+16     	; 0x82e <__fp_round+0x20>
 81e:	bf 2b       	or	r27, r31
 820:	11 f4       	brne	.+4      	; 0x826 <__fp_round+0x18>
 822:	60 ff       	sbrs	r22, 0
 824:	04 c0       	rjmp	.+8      	; 0x82e <__fp_round+0x20>
 826:	6f 5f       	subi	r22, 0xFF	; 255
 828:	7f 4f       	sbci	r23, 0xFF	; 255
 82a:	8f 4f       	sbci	r24, 0xFF	; 255
 82c:	9f 4f       	sbci	r25, 0xFF	; 255
 82e:	08 95       	ret

00000830 <puts>:
 830:	0f 93       	push	r16
 832:	1f 93       	push	r17
 834:	cf 93       	push	r28
 836:	df 93       	push	r29
 838:	e0 91 db 28 	lds	r30, 0x28DB	; 0x8028db <__iob+0x2>
 83c:	f0 91 dc 28 	lds	r31, 0x28DC	; 0x8028dc <__iob+0x3>
 840:	23 81       	ldd	r18, Z+3	; 0x03
 842:	21 ff       	sbrs	r18, 1
 844:	1b c0       	rjmp	.+54     	; 0x87c <puts+0x4c>
 846:	8c 01       	movw	r16, r24
 848:	d0 e0       	ldi	r29, 0x00	; 0
 84a:	c0 e0       	ldi	r28, 0x00	; 0
 84c:	f8 01       	movw	r30, r16
 84e:	81 91       	ld	r24, Z+
 850:	8f 01       	movw	r16, r30
 852:	60 91 db 28 	lds	r22, 0x28DB	; 0x8028db <__iob+0x2>
 856:	70 91 dc 28 	lds	r23, 0x28DC	; 0x8028dc <__iob+0x3>
 85a:	db 01       	movw	r26, r22
 85c:	18 96       	adiw	r26, 0x08	; 8
 85e:	ed 91       	ld	r30, X+
 860:	fc 91       	ld	r31, X
 862:	19 97       	sbiw	r26, 0x09	; 9
 864:	88 23       	and	r24, r24
 866:	31 f0       	breq	.+12     	; 0x874 <puts+0x44>
 868:	09 95       	icall
 86a:	89 2b       	or	r24, r25
 86c:	79 f3       	breq	.-34     	; 0x84c <puts+0x1c>
 86e:	df ef       	ldi	r29, 0xFF	; 255
 870:	cf ef       	ldi	r28, 0xFF	; 255
 872:	ec cf       	rjmp	.-40     	; 0x84c <puts+0x1c>
 874:	8a e0       	ldi	r24, 0x0A	; 10
 876:	09 95       	icall
 878:	89 2b       	or	r24, r25
 87a:	19 f0       	breq	.+6      	; 0x882 <puts+0x52>
 87c:	8f ef       	ldi	r24, 0xFF	; 255
 87e:	9f ef       	ldi	r25, 0xFF	; 255
 880:	02 c0       	rjmp	.+4      	; 0x886 <puts+0x56>
 882:	8d 2f       	mov	r24, r29
 884:	9c 2f       	mov	r25, r28
 886:	df 91       	pop	r29
 888:	cf 91       	pop	r28
 88a:	1f 91       	pop	r17
 88c:	0f 91       	pop	r16
 88e:	08 95       	ret

00000890 <_exit>:
 890:	f8 94       	cli

00000892 <__stop_program>:
 892:	ff cf       	rjmp	.-2      	; 0x892 <__stop_program>
