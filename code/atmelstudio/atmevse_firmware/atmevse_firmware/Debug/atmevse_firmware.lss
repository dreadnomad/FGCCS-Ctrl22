
atmevse_firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00802800  00001ac9  00001b7d  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000178c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000033d  0000578c  0000178c  00001840  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000f4  00802922  00802922  00001c9f  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001c9f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cfc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000178  00000000  00000000  00001d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004a13  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000028ad  00000000  00000000  000068c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000102a  00000000  00000000  00009174  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003e0  00000000  00000000  0000a1a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000021ff  00000000  00000000  0000a580  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c3a  00000000  00000000  0000c77f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000148  00000000  00000000  0000d3b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__vector_20>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      8c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf ef       	ldi	r28, 0xFF	; 255
      96:	cd bf       	out	0x3d, r28	; 61
      98:	df e3       	ldi	r29, 0x3F	; 63
      9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_copy_data>:
      9c:	19 e2       	ldi	r17, 0x29	; 41
      9e:	a0 e0       	ldi	r26, 0x00	; 0
      a0:	b8 e2       	ldi	r27, 0x28	; 40
      a2:	e9 ec       	ldi	r30, 0xC9	; 201
      a4:	fa e1       	ldi	r31, 0x1A	; 26
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 32       	cpi	r26, 0x22	; 34
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	2a e2       	ldi	r18, 0x2A	; 42
      b4:	a2 e2       	ldi	r26, 0x22	; 34
      b6:	b9 e2       	ldi	r27, 0x29	; 41
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a6 31       	cpi	r26, 0x16	; 22
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <main>
      c6:	0c 94 c4 0b 	jmp	0x1788	; 0x1788 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <led_toggle>:
        return 0;        
    } 
    else {
        return -1;
    }
}
      ce:	88 e0       	ldi	r24, 0x08	; 8
      d0:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x7f4467>
      d4:	80 e0       	ldi	r24, 0x00	; 0
      d6:	08 95       	ret

000000d8 <led_on>:
      d8:	88 e0       	ldi	r24, 0x08	; 8
      da:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__TEXT_REGION_LENGTH__+0x7f4465>
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	08 95       	ret

000000e2 <led_off>:
      e2:	88 e0       	ldi	r24, 0x08	; 8
      e4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x7f4466>
      e8:	80 e0       	ldi	r24, 0x00	; 0
      ea:	08 95       	ret

000000ec <pwm_on>:
      ec:	e0 e0       	ldi	r30, 0x00	; 0
      ee:	fa e0       	ldi	r31, 0x0A	; 10
      f0:	81 81       	ldd	r24, Z+1	; 0x01
      f2:	80 64       	ori	r24, 0x40	; 64
      f4:	81 83       	std	Z+1, r24	; 0x01
      f6:	80 e0       	ldi	r24, 0x00	; 0
      f8:	08 95       	ret

000000fa <pwm_off>:
      fa:	e0 e0       	ldi	r30, 0x00	; 0
      fc:	fa e0       	ldi	r31, 0x0A	; 10
      fe:	81 81       	ldd	r24, Z+1	; 0x01
     100:	8f 7b       	andi	r24, 0xBF	; 191
     102:	81 83       	std	Z+1, r24	; 0x01
     104:	80 e0       	ldi	r24, 0x00	; 0
     106:	08 95       	ret

00000108 <ssr1_on>:
     108:	80 e4       	ldi	r24, 0x40	; 64
     10a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	08 95       	ret

00000112 <ssr1_off>:
     112:	80 e4       	ldi	r24, 0x40	; 64
     114:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	08 95       	ret

0000011c <ssr2_on>:
     11c:	80 e2       	ldi	r24, 0x20	; 32
     11e:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     122:	80 e0       	ldi	r24, 0x00	; 0
     124:	08 95       	ret

00000126 <ssr2_off>:
     126:	80 e2       	ldi	r24, 0x20	; 32
     128:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     12c:	80 e0       	ldi	r24, 0x00	; 0
     12e:	08 95       	ret

00000130 <ssr3_on>:
     130:	80 e1       	ldi	r24, 0x10	; 16
     132:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	08 95       	ret

0000013a <ssr3_off>:
     13a:	80 e1       	ldi	r24, 0x10	; 16
     13c:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	08 95       	ret

00000144 <lock_off>:
     144:	80 e8       	ldi	r24, 0x80	; 128
     146:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     14a:	84 e0       	ldi	r24, 0x04	; 4
     14c:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     150:	80 e0       	ldi	r24, 0x00	; 0
     152:	08 95       	ret

00000154 <relay_on>:
     154:	88 e0       	ldi	r24, 0x08	; 8
     156:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	08 95       	ret

0000015e <relay_off>:
     15e:	88 e0       	ldi	r24, 0x08	; 8
     160:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	08 95       	ret

00000168 <readCP>:
     168:	e0 e0       	ldi	r30, 0x00	; 0
     16a:	f6 e0       	ldi	r31, 0x06	; 6
     16c:	81 e0       	ldi	r24, 0x01	; 1
     16e:	86 83       	std	Z+6, r24	; 0x06
     170:	80 87       	std	Z+8, r24	; 0x08
     172:	83 85       	ldd	r24, Z+11	; 0x0b
     174:	80 ff       	sbrs	r24, 0
     176:	fd cf       	rjmp	.-6      	; 0x172 <readCP+0xa>
     178:	e0 e0       	ldi	r30, 0x00	; 0
     17a:	f6 e0       	ldi	r31, 0x06	; 6
     17c:	80 89       	ldd	r24, Z+16	; 0x10
     17e:	91 89       	ldd	r25, Z+17	; 0x11
     180:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <cpVal>
     184:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <cpVal+0x1>
     188:	21 e0       	ldi	r18, 0x01	; 1
     18a:	23 87       	std	Z+11, r18	; 0x0b
     18c:	85 3d       	cpi	r24, 0xD5	; 213
     18e:	23 e0       	ldi	r18, 0x03	; 3
     190:	92 07       	cpc	r25, r18
     192:	20 f0       	brcs	.+8      	; 0x19c <readCP+0x34>
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     19a:	1e c0       	rjmp	.+60     	; 0x1d8 <readCP+0x70>
     19c:	9c 01       	movw	r18, r24
     19e:	2d 55       	subi	r18, 0x5D	; 93
     1a0:	33 40       	sbci	r19, 0x03	; 3
     1a2:	26 33       	cpi	r18, 0x36	; 54
     1a4:	31 05       	cpc	r19, r1
     1a6:	20 f4       	brcc	.+8      	; 0x1b0 <readCP+0x48>
     1a8:	82 e0       	ldi	r24, 0x02	; 2
     1aa:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     1ae:	14 c0       	rjmp	.+40     	; 0x1d8 <readCP+0x70>
     1b0:	9c 01       	movw	r18, r24
     1b2:	21 5d       	subi	r18, 0xD1	; 209
     1b4:	32 40       	sbci	r19, 0x02	; 2
     1b6:	2f 34       	cpi	r18, 0x4F	; 79
     1b8:	31 05       	cpc	r19, r1
     1ba:	20 f4       	brcc	.+8      	; 0x1c4 <readCP+0x5c>
     1bc:	83 e0       	ldi	r24, 0x03	; 3
     1be:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     1c2:	0a c0       	rjmp	.+20     	; 0x1d8 <readCP+0x70>
     1c4:	4a 97       	sbiw	r24, 0x1a	; 26
     1c6:	85 34       	cpi	r24, 0x45	; 69
     1c8:	91 05       	cpc	r25, r1
     1ca:	20 f4       	brcc	.+8      	; 0x1d4 <readCP+0x6c>
     1cc:	84 e0       	ldi	r24, 0x04	; 4
     1ce:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <readCP+0x70>
     1d4:	10 92 3b 29 	sts	0x293B, r1	; 0x80293b <pilot>
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	08 95       	ret

000001dc <readPP>:
     1dc:	e0 e0       	ldi	r30, 0x00	; 0
     1de:	f6 e0       	ldi	r31, 0x06	; 6
     1e0:	16 82       	std	Z+6, r1	; 0x06
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	80 87       	std	Z+8, r24	; 0x08
     1e6:	83 85       	ldd	r24, Z+11	; 0x0b
     1e8:	80 ff       	sbrs	r24, 0
     1ea:	fd cf       	rjmp	.-6      	; 0x1e6 <readPP+0xa>
     1ec:	e0 e0       	ldi	r30, 0x00	; 0
     1ee:	f6 e0       	ldi	r31, 0x06	; 6
     1f0:	80 89       	ldd	r24, Z+16	; 0x10
     1f2:	91 89       	ldd	r25, Z+17	; 0x11
     1f4:	80 93 3e 29 	sts	0x293E, r24	; 0x80293e <ppVal>
     1f8:	90 93 3f 29 	sts	0x293F, r25	; 0x80293f <ppVal+0x1>
     1fc:	21 e0       	ldi	r18, 0x01	; 1
     1fe:	23 87       	std	Z+11, r18	; 0x0b
     200:	9c 01       	movw	r18, r24
     202:	2b 58       	subi	r18, 0x8B	; 139
     204:	31 40       	sbci	r19, 0x01	; 1
     206:	27 32       	cpi	r18, 0x27	; 39
     208:	31 05       	cpc	r19, r1
     20a:	20 f4       	brcc	.+8      	; 0x214 <readPP+0x38>
     20c:	80 e1       	ldi	r24, 0x10	; 16
     20e:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     212:	15 c0       	rjmp	.+42     	; 0x23e <readPP+0x62>
     214:	9c 01       	movw	r18, r24
     216:	20 5b       	subi	r18, 0xB0	; 176
     218:	31 09       	sbc	r19, r1
     21a:	21 31       	cpi	r18, 0x11	; 17
     21c:	31 05       	cpc	r19, r1
     21e:	20 f4       	brcc	.+8      	; 0x228 <readPP+0x4c>
     220:	80 e2       	ldi	r24, 0x20	; 32
     222:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     226:	0b c0       	rjmp	.+22     	; 0x23e <readPP+0x62>
     228:	89 55       	subi	r24, 0x59	; 89
     22a:	91 09       	sbc	r25, r1
     22c:	09 97       	sbiw	r24, 0x09	; 9
     22e:	20 f0       	brcs	.+8      	; 0x238 <readPP+0x5c>
     230:	8d e0       	ldi	r24, 0x0D	; 13
     232:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     236:	03 c0       	rjmp	.+6      	; 0x23e <readPP+0x62>
     238:	8f e3       	ldi	r24, 0x3F	; 63
     23a:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     23e:	80 91 2d 29 	lds	r24, 0x292D	; 0x80292d <cableConf>
     242:	88 23       	and	r24, r24
     244:	21 f0       	breq	.+8      	; 0x24e <readPP+0x72>
     246:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <maxCurrent>
     24a:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     24e:	80 e0       	ldi	r24, 0x00	; 0
     250:	08 95       	ret

00000252 <readCT>:
     252:	e0 e0       	ldi	r30, 0x00	; 0
     254:	f6 e0       	ldi	r31, 0x06	; 6
     256:	85 e0       	ldi	r24, 0x05	; 5
     258:	86 83       	std	Z+6, r24	; 0x06
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	80 87       	std	Z+8, r24	; 0x08
     25e:	83 85       	ldd	r24, Z+11	; 0x0b
     260:	80 ff       	sbrs	r24, 0
     262:	fd cf       	rjmp	.-6      	; 0x25e <readCT+0xc>
     264:	e0 e0       	ldi	r30, 0x00	; 0
     266:	f6 e0       	ldi	r31, 0x06	; 6
     268:	80 89       	ldd	r24, Z+16	; 0x10
     26a:	91 89       	ldd	r25, Z+17	; 0x11
     26c:	80 93 46 29 	sts	0x2946, r24	; 0x802946 <ctVal>
     270:	90 93 47 29 	sts	0x2947, r25	; 0x802947 <ctVal+0x1>
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	83 87       	std	Z+11, r24	; 0x0b
     278:	96 e0       	ldi	r25, 0x06	; 6
     27a:	96 83       	std	Z+6, r25	; 0x06
     27c:	80 87       	std	Z+8, r24	; 0x08
     27e:	83 85       	ldd	r24, Z+11	; 0x0b
     280:	80 ff       	sbrs	r24, 0
     282:	fd cf       	rjmp	.-6      	; 0x27e <readCT+0x2c>
     284:	e0 e0       	ldi	r30, 0x00	; 0
     286:	f6 e0       	ldi	r31, 0x06	; 6
     288:	80 89       	ldd	r24, Z+16	; 0x10
     28a:	91 89       	ldd	r25, Z+17	; 0x11
     28c:	80 93 48 29 	sts	0x2948, r24	; 0x802948 <ctVal+0x2>
     290:	90 93 49 29 	sts	0x2949, r25	; 0x802949 <ctVal+0x3>
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	83 87       	std	Z+11, r24	; 0x0b
     298:	97 e0       	ldi	r25, 0x07	; 7
     29a:	96 83       	std	Z+6, r25	; 0x06
     29c:	80 87       	std	Z+8, r24	; 0x08
     29e:	83 85       	ldd	r24, Z+11	; 0x0b
     2a0:	80 ff       	sbrs	r24, 0
     2a2:	fd cf       	rjmp	.-6      	; 0x29e <readCT+0x4c>
     2a4:	e0 e0       	ldi	r30, 0x00	; 0
     2a6:	f6 e0       	ldi	r31, 0x06	; 6
     2a8:	80 89       	ldd	r24, Z+16	; 0x10
     2aa:	91 89       	ldd	r25, Z+17	; 0x11
     2ac:	80 93 4a 29 	sts	0x294A, r24	; 0x80294a <ctVal+0x4>
     2b0:	90 93 4b 29 	sts	0x294B, r25	; 0x80294b <ctVal+0x5>
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	83 87       	std	Z+11, r24	; 0x0b
     2b8:	80 e0       	ldi	r24, 0x00	; 0
     2ba:	08 95       	ret

000002bc <lock_cable>:
     2bc:	80 e8       	ldi	r24, 0x80	; 128
     2be:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     2c2:	84 e0       	ldi	r24, 0x04	; 4
     2c4:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
     2c8:	2f eb       	ldi	r18, 0xBF	; 191
     2ca:	87 e2       	ldi	r24, 0x27	; 39
     2cc:	99 e0       	ldi	r25, 0x09	; 9
     2ce:	21 50       	subi	r18, 0x01	; 1
     2d0:	80 40       	sbci	r24, 0x00	; 0
     2d2:	90 40       	sbci	r25, 0x00	; 0
     2d4:	e1 f7       	brne	.-8      	; 0x2ce <lock_cable+0x12>
     2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <lock_cable+0x1c>
     2d8:	00 00       	nop
     2da:	0e 94 a2 00 	call	0x144	; 0x144 <lock_off>
     2de:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     2e2:	91 e0       	ldi	r25, 0x01	; 1
     2e4:	28 2f       	mov	r18, r24
     2e6:	24 70       	andi	r18, 0x04	; 4
     2e8:	82 ff       	sbrs	r24, 2
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     2f0:	21 11       	cpse	r18, r1
     2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <lock_cable+0x3c>
     2f4:	8e ef       	ldi	r24, 0xFE	; 254
     2f6:	08 95       	ret
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	08 95       	ret

000002fc <unlock_cable>:
     2fc:	80 e8       	ldi	r24, 0x80	; 128
     2fe:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     302:	84 e0       	ldi	r24, 0x04	; 4
     304:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     308:	2f eb       	ldi	r18, 0xBF	; 191
     30a:	87 e2       	ldi	r24, 0x27	; 39
     30c:	99 e0       	ldi	r25, 0x09	; 9
     30e:	21 50       	subi	r18, 0x01	; 1
     310:	80 40       	sbci	r24, 0x00	; 0
     312:	90 40       	sbci	r25, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <unlock_cable+0x12>
     316:	00 c0       	rjmp	.+0      	; 0x318 <unlock_cable+0x1c>
     318:	00 00       	nop
     31a:	0e 94 a2 00 	call	0x144	; 0x144 <lock_off>
     31e:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     322:	91 e0       	ldi	r25, 0x01	; 1
     324:	28 2f       	mov	r18, r24
     326:	24 70       	andi	r18, 0x04	; 4
     328:	82 ff       	sbrs	r24, 2
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     330:	22 23       	and	r18, r18
     332:	11 f0       	breq	.+4      	; 0x338 <unlock_cable+0x3c>
     334:	8e ef       	ldi	r24, 0xFE	; 254
     336:	08 95       	ret
     338:	80 e0       	ldi	r24, 0x00	; 0
     33a:	08 95       	ret

0000033c <readTemp>:
     33c:	e0 e0       	ldi	r30, 0x00	; 0
     33e:	f6 e0       	ldi	r31, 0x06	; 6
     340:	80 81       	ld	r24, Z
     342:	8e 7f       	andi	r24, 0xFE	; 254
     344:	80 83       	st	Z, r24
     346:	82 81       	ldd	r24, Z+2	; 0x02
     348:	82 83       	std	Z+2, r24	; 0x02
     34a:	8e e1       	ldi	r24, 0x1E	; 30
     34c:	86 83       	std	Z+6, r24	; 0x06
     34e:	83 81       	ldd	r24, Z+3	; 0x03
     350:	80 62       	ori	r24, 0x20	; 32
     352:	83 83       	std	Z+3, r24	; 0x03
     354:	80 81       	ld	r24, Z
     356:	81 60       	ori	r24, 0x01	; 1
     358:	80 83       	st	Z, r24
     35a:	89 ef       	ldi	r24, 0xF9	; 249
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	01 97       	sbiw	r24, 0x01	; 1
     360:	f1 f7       	brne	.-4      	; 0x35e <readTemp+0x22>
     362:	00 c0       	rjmp	.+0      	; 0x364 <readTemp+0x28>
     364:	00 00       	nop
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	80 87       	std	Z+8, r24	; 0x08
     36a:	83 85       	ldd	r24, Z+11	; 0x0b
     36c:	80 ff       	sbrs	r24, 0
     36e:	fd cf       	rjmp	.-6      	; 0x36a <readTemp+0x2e>
     370:	e0 e0       	ldi	r30, 0x00	; 0
     372:	f6 e0       	ldi	r31, 0x06	; 6
     374:	20 89       	ldd	r18, Z+16	; 0x10
     376:	31 89       	ldd	r19, Z+17	; 0x11
     378:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <sigrow_offset>
     37c:	28 1b       	sub	r18, r24
     37e:	31 09       	sbc	r19, r1
     380:	87 fd       	sbrc	r24, 7
     382:	33 95       	inc	r19
     384:	a0 91 24 29 	lds	r26, 0x2924	; 0x802924 <sigrow_gain>
     388:	b0 e0       	ldi	r27, 0x00	; 0
     38a:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__umulhisi3>
     38e:	dc 01       	movw	r26, r24
     390:	cb 01       	movw	r24, r22
     392:	80 58       	subi	r24, 0x80	; 128
     394:	9f 4f       	sbci	r25, 0xFF	; 255
     396:	af 4f       	sbci	r26, 0xFF	; 255
     398:	bf 4f       	sbci	r27, 0xFF	; 255
     39a:	89 2f       	mov	r24, r25
     39c:	9a 2f       	mov	r25, r26
     39e:	ab 2f       	mov	r26, r27
     3a0:	bb 27       	eor	r27, r27
     3a2:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <temperature>
     3a6:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <temperature+0x1>
     3aa:	80 81       	ld	r24, Z
     3ac:	8e 7f       	andi	r24, 0xFE	; 254
     3ae:	80 83       	st	Z, r24
     3b0:	82 81       	ldd	r24, Z+2	; 0x02
     3b2:	80 61       	ori	r24, 0x10	; 16
     3b4:	82 83       	std	Z+2, r24	; 0x02
     3b6:	83 81       	ldd	r24, Z+3	; 0x03
     3b8:	83 83       	std	Z+3, r24	; 0x03
     3ba:	80 81       	ld	r24, Z
     3bc:	81 60       	ori	r24, 0x01	; 1
     3be:	80 83       	st	Z, r24
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	83 87       	std	Z+11, r24	; 0x0b
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	08 95       	ret

000003c8 <all_ssr_off>:
     3c8:	e0 e0       	ldi	r30, 0x00	; 0
     3ca:	f4 e0       	ldi	r31, 0x04	; 4
     3cc:	80 e4       	ldi	r24, 0x40	; 64
     3ce:	86 83       	std	Z+6, r24	; 0x06
     3d0:	80 e2       	ldi	r24, 0x20	; 32
     3d2:	86 83       	std	Z+6, r24	; 0x06
     3d4:	80 e1       	ldi	r24, 0x10	; 16
     3d6:	86 83       	std	Z+6, r24	; 0x06
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	08 95       	ret

000003dc <all_ssr_on>:
     3dc:	e0 e0       	ldi	r30, 0x00	; 0
     3de:	f4 e0       	ldi	r31, 0x04	; 4
     3e0:	80 e4       	ldi	r24, 0x40	; 64
     3e2:	85 83       	std	Z+5, r24	; 0x05
     3e4:	80 e2       	ldi	r24, 0x20	; 32
     3e6:	85 83       	std	Z+5, r24	; 0x05
     3e8:	80 e1       	ldi	r24, 0x10	; 16
     3ea:	85 83       	std	Z+5, r24	; 0x05
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	08 95       	ret

000003f0 <init>:
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	98 ed       	ldi	r25, 0xD8	; 216
     3f6:	94 bf       	out	0x34, r25	; 52
     3f8:	e0 e1       	ldi	r30, 0x10	; 16
     3fa:	f1 e0       	ldi	r31, 0x01	; 1
     3fc:	80 81       	ld	r24, Z
     3fe:	8f 7b       	andi	r24, 0xBF	; 191
     400:	80 83       	st	Z, r24
     402:	94 bf       	out	0x34, r25	; 52
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
     40a:	8f ef       	ldi	r24, 0xFF	; 255
     40c:	9f ef       	ldi	r25, 0xFF	; 255
     40e:	01 97       	sbiw	r24, 0x01	; 1
     410:	f1 f7       	brne	.-4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     412:	e0 e6       	ldi	r30, 0x60	; 96
     414:	f4 e0       	ldi	r31, 0x04	; 4
     416:	88 e0       	ldi	r24, 0x08	; 8
     418:	81 83       	std	Z+1, r24	; 0x01
     41a:	90 e1       	ldi	r25, 0x10	; 16
     41c:	92 83       	std	Z+2, r25	; 0x02
     41e:	94 89       	ldd	r25, Z+20	; 0x14
     420:	92 60       	ori	r25, 0x02	; 2
     422:	94 8b       	std	Z+20, r25	; 0x14
     424:	94 89       	ldd	r25, Z+20	; 0x14
     426:	97 7f       	andi	r25, 0xF7	; 247
     428:	94 8b       	std	Z+20, r25	; 0x14
     42a:	a0 e0       	ldi	r26, 0x00	; 0
     42c:	b4 e0       	ldi	r27, 0x04	; 4
     42e:	90 e7       	ldi	r25, 0x70	; 112
     430:	11 96       	adiw	r26, 0x01	; 1
     432:	9c 93       	st	X, r25
     434:	11 97       	sbiw	r26, 0x01	; 1
     436:	16 96       	adiw	r26, 0x06	; 6
     438:	9c 93       	st	X, r25
     43a:	16 97       	sbiw	r26, 0x06	; 6
     43c:	11 96       	adiw	r26, 0x01	; 1
     43e:	8c 93       	st	X, r24
     440:	11 97       	sbiw	r26, 0x01	; 1
     442:	16 96       	adiw	r26, 0x06	; 6
     444:	8c 93       	st	X, r24
     446:	16 97       	sbiw	r26, 0x06	; 6
     448:	90 e8       	ldi	r25, 0x80	; 128
     44a:	11 96       	adiw	r26, 0x01	; 1
     44c:	9c 93       	st	X, r25
     44e:	11 97       	sbiw	r26, 0x01	; 1
     450:	15 96       	adiw	r26, 0x05	; 5
     452:	9c 93       	st	X, r25
     454:	15 97       	sbiw	r26, 0x05	; 5
     456:	c0 e4       	ldi	r28, 0x40	; 64
     458:	d4 e0       	ldi	r29, 0x04	; 4
     45a:	84 e0       	ldi	r24, 0x04	; 4
     45c:	89 83       	std	Y+1, r24	; 0x01
     45e:	8d 83       	std	Y+5, r24	; 0x05
     460:	82 83       	std	Z+2, r24	; 0x02
     462:	22 89       	ldd	r18, Z+18	; 0x12
     464:	22 8b       	std	Z+18, r18	; 0x12
     466:	20 e2       	ldi	r18, 0x20	; 32
     468:	22 83       	std	Z+2, r18	; 0x02
     46a:	25 89       	ldd	r18, Z+21	; 0x15
     46c:	28 7f       	andi	r18, 0xF8	; 248
     46e:	25 8b       	std	Z+21, r18	; 0x15
     470:	25 89       	ldd	r18, Z+21	; 0x15
     472:	24 60       	ori	r18, 0x04	; 4
     474:	25 8b       	std	Z+21, r18	; 0x15
     476:	25 89       	ldd	r18, Z+21	; 0x15
     478:	27 7f       	andi	r18, 0xF7	; 247
     47a:	25 8b       	std	Z+21, r18	; 0x15
     47c:	20 e4       	ldi	r18, 0x40	; 64
     47e:	22 83       	std	Z+2, r18	; 0x02
     480:	26 89       	ldd	r18, Z+22	; 0x16
     482:	28 7f       	andi	r18, 0xF8	; 248
     484:	26 8b       	std	Z+22, r18	; 0x16
     486:	26 89       	ldd	r18, Z+22	; 0x16
     488:	24 60       	ori	r18, 0x04	; 4
     48a:	26 8b       	std	Z+22, r18	; 0x16
     48c:	26 89       	ldd	r18, Z+22	; 0x16
     48e:	27 7f       	andi	r18, 0xF7	; 247
     490:	26 8b       	std	Z+22, r18	; 0x16
     492:	92 83       	std	Z+2, r25	; 0x02
     494:	97 89       	ldd	r25, Z+23	; 0x17
     496:	98 7f       	andi	r25, 0xF8	; 248
     498:	97 8b       	std	Z+23, r25	; 0x17
     49a:	97 89       	ldd	r25, Z+23	; 0x17
     49c:	94 60       	ori	r25, 0x04	; 4
     49e:	97 8b       	std	Z+23, r25	; 0x17
     4a0:	97 89       	ldd	r25, Z+23	; 0x17
     4a2:	97 7f       	andi	r25, 0xF7	; 247
     4a4:	97 8b       	std	Z+23, r25	; 0x17
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	92 83       	std	Z+2, r25	; 0x02
     4aa:	90 89       	ldd	r25, Z+16	; 0x10
     4ac:	98 7f       	andi	r25, 0xF8	; 248
     4ae:	90 8b       	std	Z+16, r25	; 0x10
     4b0:	90 89       	ldd	r25, Z+16	; 0x10
     4b2:	94 60       	ori	r25, 0x04	; 4
     4b4:	90 8b       	std	Z+16, r25	; 0x10
     4b6:	90 89       	ldd	r25, Z+16	; 0x10
     4b8:	97 7f       	andi	r25, 0xF7	; 247
     4ba:	90 8b       	std	Z+16, r25	; 0x10
     4bc:	92 e0       	ldi	r25, 0x02	; 2
     4be:	92 83       	std	Z+2, r25	; 0x02
     4c0:	91 89       	ldd	r25, Z+17	; 0x11
     4c2:	98 7f       	andi	r25, 0xF8	; 248
     4c4:	91 8b       	std	Z+17, r25	; 0x11
     4c6:	91 89       	ldd	r25, Z+17	; 0x11
     4c8:	94 60       	ori	r25, 0x04	; 4
     4ca:	91 8b       	std	Z+17, r25	; 0x11
     4cc:	91 89       	ldd	r25, Z+17	; 0x11
     4ce:	97 7f       	andi	r25, 0xF7	; 247
     4d0:	91 8b       	std	Z+17, r25	; 0x11
     4d2:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
     4d6:	11 96       	adiw	r26, 0x01	; 1
     4d8:	8c 93       	st	X, r24
     4da:	11 97       	sbiw	r26, 0x01	; 1
     4dc:	16 96       	adiw	r26, 0x06	; 6
     4de:	8c 93       	st	X, r24
     4e0:	c0 e0       	ldi	r28, 0x00	; 0
     4e2:	da e0       	ldi	r29, 0x0A	; 10
     4e4:	88 81       	ld	r24, Y
     4e6:	87 60       	ori	r24, 0x07	; 7
     4e8:	88 83       	st	Y, r24
     4ea:	89 81       	ldd	r24, Y+1	; 0x01
     4ec:	87 60       	ori	r24, 0x07	; 7
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	89 85       	ldd	r24, Y+9	; 0x09
     4f2:	8e 7f       	andi	r24, 0xFE	; 254
     4f4:	89 87       	std	Y+9, r24	; 0x09
     4f6:	81 e7       	ldi	r24, 0x71	; 113
     4f8:	92 e0       	ldi	r25, 0x02	; 2
     4fa:	8e ab       	std	Y+54, r24	; 0x36
     4fc:	9f ab       	std	Y+55, r25	; 0x37
     4fe:	60 91 13 29 	lds	r22, 0x2913	; 0x802913 <dutyCycle>
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 06 06 	call	0xc0c	; 0xc0c <__floatsisf>
     50c:	2a e0       	ldi	r18, 0x0A	; 10
     50e:	37 ed       	ldi	r19, 0xD7	; 215
     510:	43 e2       	ldi	r20, 0x23	; 35
     512:	5c e3       	ldi	r21, 0x3C	; 60
     514:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__mulsf3>
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	30 e4       	ldi	r19, 0x40	; 64
     51c:	4c e1       	ldi	r20, 0x1C	; 28
     51e:	54 e4       	ldi	r21, 0x44	; 68
     520:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__mulsf3>
     524:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fixunssfsi>
     528:	6c af       	std	Y+60, r22	; 0x3c
     52a:	7d af       	std	Y+61, r23	; 0x3d
     52c:	89 81       	ldd	r24, Y+1	; 0x01
     52e:	8f 7b       	andi	r24, 0xBF	; 191
     530:	89 83       	std	Y+1, r24	; 0x01
     532:	e0 e0       	ldi	r30, 0x00	; 0
     534:	f1 e1       	ldi	r31, 0x11	; 17
     536:	81 a1       	ldd	r24, Z+33	; 0x21
     538:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <sigrow_offset>
     53c:	80 a1       	ldd	r24, Z+32	; 0x20
     53e:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <sigrow_gain>
     542:	e0 ea       	ldi	r30, 0xA0	; 160
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	80 61       	ori	r24, 0x10	; 16
     54a:	80 83       	st	Z, r24
     54c:	81 81       	ldd	r24, Z+1	; 0x01
     54e:	82 60       	ori	r24, 0x02	; 2
     550:	81 83       	std	Z+1, r24	; 0x01
     552:	e0 e0       	ldi	r30, 0x00	; 0
     554:	f6 e0       	ldi	r31, 0x06	; 6
     556:	82 81       	ldd	r24, Z+2	; 0x02
     558:	85 61       	ori	r24, 0x15	; 21
     55a:	82 83       	std	Z+2, r24	; 0x02
     55c:	83 81       	ldd	r24, Z+3	; 0x03
     55e:	83 83       	std	Z+3, r24	; 0x03
     560:	85 e0       	ldi	r24, 0x05	; 5
     562:	85 83       	std	Z+5, r24	; 0x05
     564:	82 81       	ldd	r24, Z+2	; 0x02
     566:	80 64       	ori	r24, 0x40	; 64
     568:	82 83       	std	Z+2, r24	; 0x02
     56a:	80 81       	ld	r24, Z
     56c:	81 60       	ori	r24, 0x01	; 1
     56e:	80 83       	st	Z, r24
     570:	0e 94 78 05 	call	0xaf0	; 0xaf0 <uart_init>
     574:	df 91       	pop	r29
     576:	cf 91       	pop	r28
     578:	08 95       	ret

0000057a <__vector_20>:
    ADC0.INTFLAGS = ADC_RESRDY_bm;
    return 0;
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
     57a:	1f 92       	push	r1
     57c:	0f 92       	push	r0
     57e:	0f b6       	in	r0, 0x3f	; 63
     580:	0f 92       	push	r0
     582:	11 24       	eor	r1, r1
     584:	8f 93       	push	r24
     586:	ef 93       	push	r30
     588:	ff 93       	push	r31
        uart_init();
    #endif
}

int8_t led_toggle() {
    PORTD.OUTTGL = LED;
     58a:	e0 e6       	ldi	r30, 0x60	; 96
     58c:	f4 e0       	ldi	r31, 0x04	; 4
     58e:	88 e0       	ldi	r24, 0x08	; 8
     590:	87 83       	std	Z+7, r24	; 0x07
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
    led_toggle();
    PORTD.INTFLAGS |= PORT_INT4_bm;
     592:	81 85       	ldd	r24, Z+9	; 0x09
     594:	80 61       	ori	r24, 0x10	; 16
     596:	81 87       	std	Z+9, r24	; 0x09
}
     598:	ff 91       	pop	r31
     59a:	ef 91       	pop	r30
     59c:	8f 91       	pop	r24
     59e:	0f 90       	pop	r0
     5a0:	0f be       	out	0x3f, r0	; 63
     5a2:	0f 90       	pop	r0
     5a4:	1f 90       	pop	r1
     5a6:	18 95       	reti

000005a8 <main>:

/*
    Application
    *************************************************/
int main(void) {
    init();
     5a8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <init>
    sei();
     5ac:	78 94       	sei
#ifdef TESTING
//     pwm_on();
//     pwm_set_duty_cycle(10);
    while (1) {
/*        pwm_count = TCA0.SINGLE.CNT;*/
        input = uart0_readLine();
     5ae:	0e 94 a4 05 	call	0xb48	; 0xb48 <uart0_readLine>
        cmd_parse(input);
     5b2:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <cmd_parse>
     5b6:	fb cf       	rjmp	.-10     	; 0x5ae <main+0x6>

000005b8 <cmd_exec>:
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
     5b8:	24 e0       	ldi	r18, 0x04	; 4
     5ba:	82 9f       	mul	r24, r18
     5bc:	c0 01       	movw	r24, r0
     5be:	11 24       	eor	r1, r1
     5c0:	fc 01       	movw	r30, r24
     5c2:	eb 55       	subi	r30, 0x5B	; 91
     5c4:	f7 4d       	sbci	r31, 0xD7	; 215
     5c6:	02 80       	ldd	r0, Z+2	; 0x02
     5c8:	f3 81       	ldd	r31, Z+3	; 0x03
     5ca:	e0 2d       	mov	r30, r0
     5cc:	30 97       	sbiw	r30, 0x00	; 0
     5ce:	11 f0       	breq	.+4      	; 0x5d4 <cmd_exec+0x1c>
        retval = cmd_table[index].cmd_func_ptr();
     5d0:	09 95       	icall
     5d2:	08 95       	ret
                int8_t cmd_func();
                Excepted are system commands, which are used to deal with parameter get/set operations and status reports.
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
     5d4:	8e ef       	ldi	r24, 0xFE	; 254
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}
     5d6:	08 95       	ret

000005d8 <param_get>:
        return retval;
    }
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
     5d8:	af 92       	push	r10
     5da:	bf 92       	push	r11
     5dc:	cf 92       	push	r12
     5de:	df 92       	push	r13
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	5c 01       	movw	r10, r24
     5ee:	8b 01       	movw	r16, r22
     5f0:	0f 2e       	mov	r0, r31
     5f2:	f0 e0       	ldi	r31, 0x00	; 0
     5f4:	cf 2e       	mov	r12, r31
     5f6:	f8 e2       	ldi	r31, 0x28	; 40
     5f8:	df 2e       	mov	r13, r31
     5fa:	f0 2d       	mov	r31, r0
     5fc:	e1 2c       	mov	r14, r1
     5fe:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp((const char *)param_string, (const char *)param_table[i].param) == 0) {
     600:	e7 01       	movw	r28, r14
     602:	f6 01       	movw	r30, r12
     604:	60 81       	ld	r22, Z
     606:	71 81       	ldd	r23, Z+1	; 0x01
     608:	c5 01       	movw	r24, r10
     60a:	0e 94 1c 08 	call	0x1038	; 0x1038 <strcmp>
     60e:	89 2b       	or	r24, r25
     610:	09 f0       	breq	.+2      	; 0x614 <param_get+0x3c>
     612:	4a c0       	rjmp	.+148    	; 0x6a8 <param_get+0xd0>
            cli();
     614:	f8 94       	cli
            switch (param_table[i].size) {                      // cast pointer to the correct data type according to param table size info
     616:	f7 01       	movw	r30, r14
     618:	ee 0f       	add	r30, r30
     61a:	ff 1f       	adc	r31, r31
     61c:	ee 0f       	add	r30, r30
     61e:	ff 1f       	adc	r31, r31
     620:	ee 0d       	add	r30, r14
     622:	ff 1d       	adc	r31, r15
     624:	e0 50       	subi	r30, 0x00	; 0
     626:	f8 4d       	sbci	r31, 0xD8	; 216
     628:	84 81       	ldd	r24, Z+4	; 0x04
     62a:	80 31       	cpi	r24, 0x10	; 16
     62c:	89 f0       	breq	.+34     	; 0x650 <param_get+0x78>
     62e:	80 32       	cpi	r24, 0x20	; 32
     630:	21 f1       	breq	.+72     	; 0x67a <param_get+0xa2>
     632:	88 30       	cpi	r24, 0x08	; 8
     634:	b1 f5       	brne	.+108    	; 0x6a2 <param_get+0xca>
            case 8:
                *param_value = *(uint8_t *)param_table[i].value;
     636:	02 80       	ldd	r0, Z+2	; 0x02
     638:	f3 81       	ldd	r31, Z+3	; 0x03
     63a:	e0 2d       	mov	r30, r0
     63c:	80 81       	ld	r24, Z
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	a0 e0       	ldi	r26, 0x00	; 0
     642:	b0 e0       	ldi	r27, 0x00	; 0
     644:	f8 01       	movw	r30, r16
     646:	80 83       	st	Z, r24
     648:	91 83       	std	Z+1, r25	; 0x01
     64a:	a2 83       	std	Z+2, r26	; 0x02
     64c:	b3 83       	std	Z+3, r27	; 0x03
            	break;
     64e:	29 c0       	rjmp	.+82     	; 0x6a2 <param_get+0xca>
            case 16:
                *param_value = *(uint16_t *)param_table[i].value;
     650:	c7 01       	movw	r24, r14
     652:	88 0f       	add	r24, r24
     654:	99 1f       	adc	r25, r25
     656:	88 0f       	add	r24, r24
     658:	99 1f       	adc	r25, r25
     65a:	c8 0f       	add	r28, r24
     65c:	d9 1f       	adc	r29, r25
     65e:	c0 50       	subi	r28, 0x00	; 0
     660:	d8 4d       	sbci	r29, 0xD8	; 216
     662:	ea 81       	ldd	r30, Y+2	; 0x02
     664:	fb 81       	ldd	r31, Y+3	; 0x03
     666:	80 81       	ld	r24, Z
     668:	91 81       	ldd	r25, Z+1	; 0x01
     66a:	a0 e0       	ldi	r26, 0x00	; 0
     66c:	b0 e0       	ldi	r27, 0x00	; 0
     66e:	f8 01       	movw	r30, r16
     670:	80 83       	st	Z, r24
     672:	91 83       	std	Z+1, r25	; 0x01
     674:	a2 83       	std	Z+2, r26	; 0x02
     676:	b3 83       	std	Z+3, r27	; 0x03
                break;
     678:	14 c0       	rjmp	.+40     	; 0x6a2 <param_get+0xca>
            case 32:
                *param_value = *(uint32_t *)param_table[i].value;
     67a:	c7 01       	movw	r24, r14
     67c:	88 0f       	add	r24, r24
     67e:	99 1f       	adc	r25, r25
     680:	88 0f       	add	r24, r24
     682:	99 1f       	adc	r25, r25
     684:	c8 0f       	add	r28, r24
     686:	d9 1f       	adc	r29, r25
     688:	c0 50       	subi	r28, 0x00	; 0
     68a:	d8 4d       	sbci	r29, 0xD8	; 216
     68c:	ea 81       	ldd	r30, Y+2	; 0x02
     68e:	fb 81       	ldd	r31, Y+3	; 0x03
     690:	80 81       	ld	r24, Z
     692:	91 81       	ldd	r25, Z+1	; 0x01
     694:	a2 81       	ldd	r26, Z+2	; 0x02
     696:	b3 81       	ldd	r27, Z+3	; 0x03
     698:	f8 01       	movw	r30, r16
     69a:	80 83       	st	Z, r24
     69c:	91 83       	std	Z+1, r25	; 0x01
     69e:	a2 83       	std	Z+2, r26	; 0x02
     6a0:	b3 83       	std	Z+3, r27	; 0x03
                break;               
            }
            sei();
     6a2:	78 94       	sei
            i = NO_PARAM;                                   // exit loop
            retval = 0;
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	0c c0       	rjmp	.+24     	; 0x6c0 <param_get+0xe8>
     6a8:	ff ef       	ldi	r31, 0xFF	; 255
     6aa:	ef 1a       	sub	r14, r31
     6ac:	ff 0a       	sbc	r15, r31
     6ae:	85 e0       	ldi	r24, 0x05	; 5
     6b0:	c8 0e       	add	r12, r24
     6b2:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     6b4:	e1 e2       	ldi	r30, 0x21	; 33
     6b6:	ee 16       	cp	r14, r30
     6b8:	f1 04       	cpc	r15, r1
     6ba:	09 f0       	breq	.+2      	; 0x6be <param_get+0xe6>
     6bc:	a1 cf       	rjmp	.-190    	; 0x600 <param_get+0x28>
     6be:	8c ef       	ldi	r24, 0xFC	; 252
            i = NO_PARAM;                                   // exit loop
            retval = 0;
        }
    }
    return retval;
}
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	1f 91       	pop	r17
     6c6:	0f 91       	pop	r16
     6c8:	ff 90       	pop	r15
     6ca:	ef 90       	pop	r14
     6cc:	df 90       	pop	r13
     6ce:	cf 90       	pop	r12
     6d0:	bf 90       	pop	r11
     6d2:	af 90       	pop	r10
     6d4:	08 95       	ret

000006d6 <param_set>:

int8_t param_set(char *param_string, void *param_new_val_ptr) {
     6d6:	af 92       	push	r10
     6d8:	bf 92       	push	r11
     6da:	cf 92       	push	r12
     6dc:	df 92       	push	r13
     6de:	ef 92       	push	r14
     6e0:	ff 92       	push	r15
     6e2:	0f 93       	push	r16
     6e4:	1f 93       	push	r17
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	5c 01       	movw	r10, r24
     6ec:	8b 01       	movw	r16, r22
     6ee:	0f 2e       	mov	r0, r31
     6f0:	f0 e0       	ldi	r31, 0x00	; 0
     6f2:	cf 2e       	mov	r12, r31
     6f4:	f8 e2       	ldi	r31, 0x28	; 40
     6f6:	df 2e       	mov	r13, r31
     6f8:	f0 2d       	mov	r31, r0
     6fa:	e1 2c       	mov	r14, r1
     6fc:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp(param_string, param_table[i].param) == 0) {
     6fe:	e7 01       	movw	r28, r14
     700:	d6 01       	movw	r26, r12
     702:	6d 91       	ld	r22, X+
     704:	7c 91       	ld	r23, X
     706:	c5 01       	movw	r24, r10
     708:	0e 94 1c 08 	call	0x1038	; 0x1038 <strcmp>
     70c:	89 2b       	or	r24, r25
     70e:	09 f0       	breq	.+2      	; 0x712 <param_set+0x3c>
     710:	44 c0       	rjmp	.+136    	; 0x79a <param_set+0xc4>
            cli();
     712:	f8 94       	cli
            switch (param_table[i].size) {                                           // cast pointer to the correct data type according to param table size info
     714:	f7 01       	movw	r30, r14
     716:	ee 0f       	add	r30, r30
     718:	ff 1f       	adc	r31, r31
     71a:	ee 0f       	add	r30, r30
     71c:	ff 1f       	adc	r31, r31
     71e:	ee 0d       	add	r30, r14
     720:	ff 1d       	adc	r31, r15
     722:	e0 50       	subi	r30, 0x00	; 0
     724:	f8 4d       	sbci	r31, 0xD8	; 216
     726:	84 81       	ldd	r24, Z+4	; 0x04
     728:	80 31       	cpi	r24, 0x10	; 16
     72a:	61 f0       	breq	.+24     	; 0x744 <param_set+0x6e>
     72c:	80 32       	cpi	r24, 0x20	; 32
     72e:	e1 f0       	breq	.+56     	; 0x768 <param_set+0x92>
     730:	88 30       	cpi	r24, 0x08	; 8
     732:	81 f5       	brne	.+96     	; 0x794 <param_set+0xbe>
            case 8:
                *(uint8_t *)param_table[i].value = *(uint8_t *)param_new_val_ptr;
     734:	02 80       	ldd	r0, Z+2	; 0x02
     736:	f3 81       	ldd	r31, Z+3	; 0x03
     738:	e0 2d       	mov	r30, r0
     73a:	e8 01       	movw	r28, r16
     73c:	88 81       	ld	r24, Y
     73e:	80 83       	st	Z, r24
                retval = 0;
     740:	80 e0       	ldi	r24, 0x00	; 0
            	break;
     742:	29 c0       	rjmp	.+82     	; 0x796 <param_set+0xc0>
            case 16:
                *(uint16_t *)param_table[i].value = *(uint16_t *)param_new_val_ptr;
     744:	c7 01       	movw	r24, r14
     746:	88 0f       	add	r24, r24
     748:	99 1f       	adc	r25, r25
     74a:	88 0f       	add	r24, r24
     74c:	99 1f       	adc	r25, r25
     74e:	c8 0f       	add	r28, r24
     750:	d9 1f       	adc	r29, r25
     752:	c0 50       	subi	r28, 0x00	; 0
     754:	d8 4d       	sbci	r29, 0xD8	; 216
     756:	ea 81       	ldd	r30, Y+2	; 0x02
     758:	fb 81       	ldd	r31, Y+3	; 0x03
     75a:	d8 01       	movw	r26, r16
     75c:	8d 91       	ld	r24, X+
     75e:	9c 91       	ld	r25, X
     760:	80 83       	st	Z, r24
     762:	91 83       	std	Z+1, r25	; 0x01
                retval = 0;
     764:	80 e0       	ldi	r24, 0x00	; 0
                break;
     766:	17 c0       	rjmp	.+46     	; 0x796 <param_set+0xc0>
            case 32:
                *(uint32_t *)param_table[i].value = *(uint32_t *)param_new_val_ptr;
     768:	c7 01       	movw	r24, r14
     76a:	88 0f       	add	r24, r24
     76c:	99 1f       	adc	r25, r25
     76e:	88 0f       	add	r24, r24
     770:	99 1f       	adc	r25, r25
     772:	c8 0f       	add	r28, r24
     774:	d9 1f       	adc	r29, r25
     776:	c0 50       	subi	r28, 0x00	; 0
     778:	d8 4d       	sbci	r29, 0xD8	; 216
     77a:	ea 81       	ldd	r30, Y+2	; 0x02
     77c:	fb 81       	ldd	r31, Y+3	; 0x03
     77e:	e8 01       	movw	r28, r16
     780:	88 81       	ld	r24, Y
     782:	99 81       	ldd	r25, Y+1	; 0x01
     784:	aa 81       	ldd	r26, Y+2	; 0x02
     786:	bb 81       	ldd	r27, Y+3	; 0x03
     788:	80 83       	st	Z, r24
     78a:	91 83       	std	Z+1, r25	; 0x01
     78c:	a2 83       	std	Z+2, r26	; 0x02
     78e:	b3 83       	std	Z+3, r27	; 0x03
                retval = 0;
     790:	80 e0       	ldi	r24, 0x00	; 0
                break; 
     792:	01 c0       	rjmp	.+2      	; 0x796 <param_set+0xc0>
            default:
                retval = -3;                                                // default return value -3 -> invalid value size               
     794:	8d ef       	ldi	r24, 0xFD	; 253
            }
            sei();
     796:	78 94       	sei
     798:	0c c0       	rjmp	.+24     	; 0x7b2 <param_set+0xdc>
     79a:	df ef       	ldi	r29, 0xFF	; 255
     79c:	ed 1a       	sub	r14, r29
     79e:	fd 0a       	sbc	r15, r29
     7a0:	e5 e0       	ldi	r30, 0x05	; 5
     7a2:	ce 0e       	add	r12, r30
     7a4:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_set(char *param_string, void *param_new_val_ptr) {
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     7a6:	f1 e2       	ldi	r31, 0x21	; 33
     7a8:	ef 16       	cp	r14, r31
     7aa:	f1 04       	cpc	r15, r1
     7ac:	09 f0       	breq	.+2      	; 0x7b0 <param_set+0xda>
     7ae:	a7 cf       	rjmp	.-178    	; 0x6fe <param_set+0x28>
     7b0:	8c ef       	ldi	r24, 0xFC	; 252
            sei();
            i = NO_PARAM;                                               // exit loop
        }
    }
    return retval;
}
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	1f 91       	pop	r17
     7b8:	0f 91       	pop	r16
     7ba:	ff 90       	pop	r15
     7bc:	ef 90       	pop	r14
     7be:	df 90       	pop	r13
     7c0:	cf 90       	pop	r12
     7c2:	bf 90       	pop	r11
     7c4:	af 90       	pop	r10
     7c6:	08 95       	ret

000007c8 <cmd_parse>:
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     7c8:	cf 92       	push	r12
     7ca:	df 92       	push	r13
     7cc:	ff 92       	push	r15
     7ce:	0f 93       	push	r16
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	cd b7       	in	r28, 0x3d	; 61
     7d8:	de b7       	in	r29, 0x3e	; 62
     7da:	28 97       	sbiw	r28, 0x08	; 8
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	de bf       	out	0x3e, r29	; 62
     7e0:	6c 01       	movw	r12, r24
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
     7e2:	65 e7       	ldi	r22, 0x75	; 117
     7e4:	79 e5       	ldi	r23, 0x59	; 89
     7e6:	0e 94 1c 08 	call	0x1038	; 0x1038 <strcmp>
     7ea:	89 2b       	or	r24, r25
     7ec:	09 f4       	brne	.+2      	; 0x7f0 <cmd_parse+0x28>
     7ee:	dd c0       	rjmp	.+442    	; 0x9aa <cmd_parse+0x1e2>
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
     7f0:	6f e3       	ldi	r22, 0x3F	; 63
     7f2:	70 e0       	ldi	r23, 0x00	; 0
     7f4:	c6 01       	movw	r24, r12
     7f6:	0e 94 11 08 	call	0x1022	; 0x1022 <strchr>
     7fa:	89 2b       	or	r24, r25
     7fc:	61 f1       	breq	.+88     	; 0x856 <cmd_parse+0x8e>
        command = "param_get";                      
        param = strtok(string, "?");
     7fe:	66 e7       	ldi	r22, 0x76	; 118
     800:	79 e5       	ldi	r23, 0x59	; 89
     802:	c6 01       	movw	r24, r12
     804:	0e 94 0c 08 	call	0x1018	; 0x1018 <strtok>
     808:	08 2f       	mov	r16, r24
     80a:	f9 2e       	mov	r15, r25
        is_param_op = 1;
        uint32_t param_val = 0;
     80c:	19 82       	std	Y+1, r1	; 0x01
     80e:	1a 82       	std	Y+2, r1	; 0x02
     810:	1b 82       	std	Y+3, r1	; 0x03
     812:	1c 82       	std	Y+4, r1	; 0x04
        retval = param_get(param, &param_val);
     814:	be 01       	movw	r22, r28
     816:	6f 5f       	subi	r22, 0xFF	; 255
     818:	7f 4f       	sbci	r23, 0xFF	; 255
     81a:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <param_get>
     81e:	18 2f       	mov	r17, r24
        if (retval == 0) {
     820:	81 11       	cpse	r24, r1
     822:	12 c0       	rjmp	.+36     	; 0x848 <cmd_parse+0x80>
            printf("%s = %"PRIu32"\r\n", param, param_val);               
     824:	8c 81       	ldd	r24, Y+4	; 0x04
     826:	8f 93       	push	r24
     828:	8b 81       	ldd	r24, Y+3	; 0x03
     82a:	8f 93       	push	r24
     82c:	8a 81       	ldd	r24, Y+2	; 0x02
     82e:	8f 93       	push	r24
     830:	89 81       	ldd	r24, Y+1	; 0x01
     832:	8f 93       	push	r24
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	85 e7       	ldi	r24, 0x75	; 117
     83a:	9a e5       	ldi	r25, 0x5A	; 90
     83c:	9f 93       	push	r25
     83e:	8f 93       	push	r24
     840:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
     844:	cd bf       	out	0x3d, r28	; 61
     846:	de bf       	out	0x3e, r29	; 62
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
        command = "param_get";                      
     848:	0f 2e       	mov	r0, r31
     84a:	f3 ea       	ldi	r31, 0xA3	; 163
     84c:	cf 2e       	mov	r12, r31
     84e:	f8 e5       	ldi	r31, 0x58	; 88
     850:	df 2e       	mov	r13, r31
     852:	f0 2d       	mov	r31, r0
     854:	64 c0       	rjmp	.+200    	; 0x91e <cmd_parse+0x156>
        if (retval == 0) {
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
     856:	6d e3       	ldi	r22, 0x3D	; 61
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	c6 01       	movw	r24, r12
     85c:	0e 94 11 08 	call	0x1022	; 0x1022 <strchr>
     860:	89 2b       	or	r24, r25
     862:	09 f4       	brne	.+2      	; 0x866 <cmd_parse+0x9e>
     864:	a8 c0       	rjmp	.+336    	; 0x9b6 <cmd_parse+0x1ee>
        command = "param_set";
        is_param_op = 1;
        param = strtok(string, "=");
     866:	68 e7       	ldi	r22, 0x78	; 120
     868:	79 e5       	ldi	r23, 0x59	; 89
     86a:	c6 01       	movw	r24, r12
     86c:	0e 94 0c 08 	call	0x1018	; 0x1018 <strtok>
     870:	08 2f       	mov	r16, r24
     872:	f9 2e       	mov	r15, r25
        char *str_value = strtok(NULL, "=");
     874:	68 e7       	ldi	r22, 0x78	; 120
     876:	79 e5       	ldi	r23, 0x59	; 89
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	0e 94 0c 08 	call	0x1018	; 0x1018 <strtok>
        uint32_t value = (uint32_t)strtoul(str_value, NULL, 0);
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	0e 94 0e 07 	call	0xe1c	; 0xe1c <strtoul>
     88c:	6d 83       	std	Y+5, r22	; 0x05
     88e:	7e 83       	std	Y+6, r23	; 0x06
     890:	8f 83       	std	Y+7, r24	; 0x07
     892:	98 87       	std	Y+8, r25	; 0x08
        retval = param_set(param, &value);
     894:	be 01       	movw	r22, r28
     896:	6b 5f       	subi	r22, 0xFB	; 251
     898:	7f 4f       	sbci	r23, 0xFF	; 255
     89a:	80 2f       	mov	r24, r16
     89c:	9f 2d       	mov	r25, r15
     89e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <param_set>
     8a2:	18 2f       	mov	r17, r24
        if (retval == 0) {
     8a4:	81 11       	cpse	r24, r1
     8a6:	1d c0       	rjmp	.+58     	; 0x8e2 <cmd_parse+0x11a>
            uint32_t param_val = 0;
     8a8:	19 82       	std	Y+1, r1	; 0x01
     8aa:	1a 82       	std	Y+2, r1	; 0x02
     8ac:	1b 82       	std	Y+3, r1	; 0x03
     8ae:	1c 82       	std	Y+4, r1	; 0x04
            param_get(param, &param_val);        
     8b0:	be 01       	movw	r22, r28
     8b2:	6f 5f       	subi	r22, 0xFF	; 255
     8b4:	7f 4f       	sbci	r23, 0xFF	; 255
     8b6:	80 2f       	mov	r24, r16
     8b8:	9f 2d       	mov	r25, r15
     8ba:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <param_get>
            printf("%s = %"PRIu32"\r\n", param, param_val);
     8be:	8c 81       	ldd	r24, Y+4	; 0x04
     8c0:	8f 93       	push	r24
     8c2:	8b 81       	ldd	r24, Y+3	; 0x03
     8c4:	8f 93       	push	r24
     8c6:	8a 81       	ldd	r24, Y+2	; 0x02
     8c8:	8f 93       	push	r24
     8ca:	89 81       	ldd	r24, Y+1	; 0x01
     8cc:	8f 93       	push	r24
     8ce:	ff 92       	push	r15
     8d0:	0f 93       	push	r16
     8d2:	85 e7       	ldi	r24, 0x75	; 117
     8d4:	9a e5       	ldi	r25, 0x5A	; 90
     8d6:	9f 93       	push	r25
     8d8:	8f 93       	push	r24
     8da:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
     8de:	cd bf       	out	0x3d, r28	; 61
     8e0:	de bf       	out	0x3e, r29	; 62
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
        command = "param_set";
     8e2:	0f 2e       	mov	r0, r31
     8e4:	fd ea       	ldi	r31, 0xAD	; 173
     8e6:	cf 2e       	mov	r12, r31
     8e8:	f8 e5       	ldi	r31, 0x58	; 88
     8ea:	df 2e       	mov	r13, r31
     8ec:	f0 2d       	mov	r31, r0
     8ee:	17 c0       	rjmp	.+46     	; 0x91e <cmd_parse+0x156>
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
            if (strcmp(command, cmd_table[i].cmd) == 0) {
     8f0:	f8 01       	movw	r30, r16
     8f2:	60 81       	ld	r22, Z
     8f4:	71 81       	ldd	r23, Z+1	; 0x01
     8f6:	c6 01       	movw	r24, r12
     8f8:	0e 94 1c 08 	call	0x1038	; 0x1038 <strcmp>
     8fc:	89 2b       	or	r24, r25
     8fe:	39 f4       	brne	.+14     	; 0x90e <cmd_parse+0x146>
                retval = cmd_exec(i);
     900:	8f 2d       	mov	r24, r15
     902:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <cmd_exec>
     906:	18 2f       	mov	r17, r24
     908:	00 e0       	ldi	r16, 0x00	; 0
     90a:	f1 2c       	mov	r15, r1
     90c:	08 c0       	rjmp	.+16     	; 0x91e <cmd_parse+0x156>
            param_get(param, &param_val);        
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
     90e:	f3 94       	inc	r15
     910:	0c 5f       	subi	r16, 0xFC	; 252
     912:	1f 4f       	sbci	r17, 0xFF	; 255
     914:	f9 e1       	ldi	r31, 0x19	; 25
     916:	ff 12       	cpse	r15, r31
     918:	eb cf       	rjmp	.-42     	; 0x8f0 <cmd_parse+0x128>
     91a:	1f ef       	ldi	r17, 0xFF	; 255
     91c:	0d c0       	rjmp	.+26     	; 0x938 <cmd_parse+0x170>
                i = NO_CMD;                             // exit loop
            }
	    } 
    }
    
    switch (retval) {                                   // select appropriate feedback to return
     91e:	1e 3f       	cpi	r17, 0xFE	; 254
     920:	c1 f0       	breq	.+48     	; 0x952 <cmd_parse+0x18a>
     922:	2c f4       	brge	.+10     	; 0x92e <cmd_parse+0x166>
     924:	1c 3f       	cpi	r17, 0xFC	; 252
     926:	79 f1       	breq	.+94     	; 0x986 <cmd_parse+0x1be>
     928:	1d 3f       	cpi	r17, 0xFD	; 253
     92a:	01 f1       	breq	.+64     	; 0x96c <cmd_parse+0x1a4>
     92c:	48 c0       	rjmp	.+144    	; 0x9be <cmd_parse+0x1f6>
     92e:	1f 3f       	cpi	r17, 0xFF	; 255
     930:	19 f0       	breq	.+6      	; 0x938 <cmd_parse+0x170>
     932:	11 23       	and	r17, r17
     934:	a9 f1       	breq	.+106    	; 0x9a0 <cmd_parse+0x1d8>
     936:	43 c0       	rjmp	.+134    	; 0x9be <cmd_parse+0x1f6>
    case -1:
        printf("FAIL. Command %s not found in command table!\r\n", command);
     938:	df 92       	push	r13
     93a:	cf 92       	push	r12
     93c:	8a e7       	ldi	r24, 0x7A	; 122
     93e:	99 e5       	ldi	r25, 0x59	; 89
     940:	9f 93       	push	r25
     942:	8f 93       	push	r24
     944:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
    	return retval;
     948:	0f 90       	pop	r0
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	36 c0       	rjmp	.+108    	; 0x9be <cmd_parse+0x1f6>
    case -2:
        printf("FAIL. Failed to execute command %s!\r\n", command);
     952:	df 92       	push	r13
     954:	cf 92       	push	r12
     956:	89 ea       	ldi	r24, 0xA9	; 169
     958:	99 e5       	ldi	r25, 0x59	; 89
     95a:	9f 93       	push	r25
     95c:	8f 93       	push	r24
     95e:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
        return retval;
     962:	0f 90       	pop	r0
     964:	0f 90       	pop	r0
     966:	0f 90       	pop	r0
     968:	0f 90       	pop	r0
     96a:	29 c0       	rjmp	.+82     	; 0x9be <cmd_parse+0x1f6>
    case -3:
        printf("FAIL. Invalid options/parameters for command %s!\r\n", command);
     96c:	df 92       	push	r13
     96e:	cf 92       	push	r12
     970:	8f ec       	ldi	r24, 0xCF	; 207
     972:	99 e5       	ldi	r25, 0x59	; 89
     974:	9f 93       	push	r25
     976:	8f 93       	push	r24
     978:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
        return retval;
     97c:	0f 90       	pop	r0
     97e:	0f 90       	pop	r0
     980:	0f 90       	pop	r0
     982:	0f 90       	pop	r0
     984:	1c c0       	rjmp	.+56     	; 0x9be <cmd_parse+0x1f6>
    case -4:
        printf("FAIL. Parameter %s not found in parameter table!\r\n", param);
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	82 e0       	ldi	r24, 0x02	; 2
     98c:	9a e5       	ldi	r25, 0x5A	; 90
     98e:	9f 93       	push	r25
     990:	8f 93       	push	r24
     992:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
        return retval;
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	0f 90       	pop	r0
     99c:	0f 90       	pop	r0
     99e:	0f c0       	rjmp	.+30     	; 0x9be <cmd_parse+0x1f6>
    case 0:
        printf("OK.\r\n");
     9a0:	85 e3       	ldi	r24, 0x35	; 53
     9a2:	9a e5       	ldi	r25, 0x5A	; 90
     9a4:	0e 94 62 08 	call	0x10c4	; 0x10c4 <puts>
        return retval;
     9a8:	0a c0       	rjmp	.+20     	; 0x9be <cmd_parse+0x1f6>
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
     9aa:	0f 2e       	mov	r0, r31
     9ac:	fc e9       	ldi	r31, 0x9C	; 156
     9ae:	cf 2e       	mov	r12, r31
     9b0:	f8 e5       	ldi	r31, 0x58	; 88
     9b2:	df 2e       	mov	r13, r31
     9b4:	f0 2d       	mov	r31, r0
     9b6:	05 ea       	ldi	r16, 0xA5	; 165
     9b8:	18 e2       	ldi	r17, 0x28	; 40
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     9ba:	f1 2c       	mov	r15, r1
     9bc:	99 cf       	rjmp	.-206    	; 0x8f0 <cmd_parse+0x128>
    case 0:
        printf("OK.\r\n");
        return retval;
    }
    return retval;
}
     9be:	81 2f       	mov	r24, r17
     9c0:	28 96       	adiw	r28, 0x08	; 8
     9c2:	cd bf       	out	0x3d, r28	; 61
     9c4:	de bf       	out	0x3e, r29	; 62
     9c6:	df 91       	pop	r29
     9c8:	cf 91       	pop	r28
     9ca:	1f 91       	pop	r17
     9cc:	0f 91       	pop	r16
     9ce:	ff 90       	pop	r15
     9d0:	df 90       	pop	r13
     9d2:	cf 90       	pop	r12
     9d4:	08 95       	ret

000009d6 <sys_status>:
        }
    }
    return retval;
}

int8_t sys_status() {
     9d6:	cf 92       	push	r12
     9d8:	df 92       	push	r13
     9da:	ef 92       	push	r14
     9dc:	ff 92       	push	r15
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	00 d0       	rcall	.+0      	; 0x9e8 <sys_status+0x12>
     9e8:	00 d0       	rcall	.+0      	; 0x9ea <sys_status+0x14>
     9ea:	cd b7       	in	r28, 0x3d	; 61
     9ec:	de b7       	in	r29, 0x3e	; 62
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
     9ee:	8a e3       	ldi	r24, 0x3A	; 58
     9f0:	9a e5       	ldi	r25, 0x5A	; 90
     9f2:	0e 94 62 08 	call	0x10c4	; 0x10c4 <puts>
     9f6:	05 ea       	ldi	r16, 0xA5	; 165
     9f8:	18 e2       	ldi	r17, 0x28	; 40
     9fa:	0f 2e       	mov	r0, r31
     9fc:	f9 e0       	ldi	r31, 0x09	; 9
     9fe:	ef 2e       	mov	r14, r31
     a00:	f9 e2       	ldi	r31, 0x29	; 41
     a02:	ff 2e       	mov	r15, r31
     a04:	f0 2d       	mov	r31, r0
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
     a06:	0f 2e       	mov	r0, r31
     a08:	f1 e5       	ldi	r31, 0x51	; 81
     a0a:	cf 2e       	mov	r12, r31
     a0c:	fa e5       	ldi	r31, 0x5A	; 90
     a0e:	df 2e       	mov	r13, r31
     a10:	f0 2d       	mov	r31, r0
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
     a12:	d8 01       	movw	r26, r16
     a14:	ed 91       	ld	r30, X+
     a16:	fc 91       	ld	r31, X
        if (strcmp(cmd, "\0") != 0) {
     a18:	80 81       	ld	r24, Z
     a1a:	88 23       	and	r24, r24
     a1c:	51 f0       	breq	.+20     	; 0xa32 <sys_status+0x5c>
            printf("$ %s\r\n", cmd);
     a1e:	ff 93       	push	r31
     a20:	ef 93       	push	r30
     a22:	df 92       	push	r13
     a24:	cf 92       	push	r12
     a26:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	0f 90       	pop	r0
     a32:	0c 5f       	subi	r16, 0xFC	; 252
     a34:	1f 4f       	sbci	r17, 0xFF	; 255
    return retval;
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
     a36:	0e 15       	cp	r16, r14
     a38:	1f 05       	cpc	r17, r15
     a3a:	59 f7       	brne	.-42     	; 0xa12 <sys_status+0x3c>
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
     a3c:	88 e5       	ldi	r24, 0x58	; 88
     a3e:	9a e5       	ldi	r25, 0x5A	; 90
     a40:	0e 94 62 08 	call	0x10c4	; 0x10c4 <puts>
     a44:	0f 2e       	mov	r0, r31
     a46:	f0 e0       	ldi	r31, 0x00	; 0
     a48:	ef 2e       	mov	r14, r31
     a4a:	f8 e2       	ldi	r31, 0x28	; 40
     a4c:	ff 2e       	mov	r15, r31
     a4e:	f0 2d       	mov	r31, r0
     a50:	00 e0       	ldi	r16, 0x00	; 0
     a52:	10 e0       	ldi	r17, 0x00	; 0
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     a54:	0f 2e       	mov	r0, r31
     a56:	ff e6       	ldi	r31, 0x6F	; 111
     a58:	cf 2e       	mov	r12, r31
     a5a:	fa e5       	ldi	r31, 0x5A	; 90
     a5c:	df 2e       	mov	r13, r31
     a5e:	f0 2d       	mov	r31, r0
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
     a60:	19 82       	std	Y+1, r1	; 0x01
     a62:	1a 82       	std	Y+2, r1	; 0x02
     a64:	1b 82       	std	Y+3, r1	; 0x03
     a66:	1c 82       	std	Y+4, r1	; 0x04
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
     a68:	d7 01       	movw	r26, r14
     a6a:	ed 91       	ld	r30, X+
     a6c:	fc 91       	ld	r31, X
     a6e:	80 81       	ld	r24, Z
     a70:	88 23       	and	r24, r24
     a72:	d9 f0       	breq	.+54     	; 0xaaa <sys_status+0xd4>
            param_get(param_table[i].param, &param_value);
     a74:	be 01       	movw	r22, r28
     a76:	6f 5f       	subi	r22, 0xFF	; 255
     a78:	7f 4f       	sbci	r23, 0xFF	; 255
     a7a:	cf 01       	movw	r24, r30
     a7c:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <param_get>
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     a80:	8c 81       	ldd	r24, Y+4	; 0x04
     a82:	8f 93       	push	r24
     a84:	8b 81       	ldd	r24, Y+3	; 0x03
     a86:	8f 93       	push	r24
     a88:	8a 81       	ldd	r24, Y+2	; 0x02
     a8a:	8f 93       	push	r24
     a8c:	89 81       	ldd	r24, Y+1	; 0x01
     a8e:	8f 93       	push	r24
     a90:	f7 01       	movw	r30, r14
     a92:	81 81       	ldd	r24, Z+1	; 0x01
     a94:	8f 93       	push	r24
     a96:	80 81       	ld	r24, Z
     a98:	8f 93       	push	r24
     a9a:	1f 93       	push	r17
     a9c:	0f 93       	push	r16
     a9e:	df 92       	push	r13
     aa0:	cf 92       	push	r12
     aa2:	0e 94 4c 08 	call	0x1098	; 0x1098 <printf>
     aa6:	cd bf       	out	0x3d, r28	; 61
     aa8:	de bf       	out	0x3e, r29	; 62
     aaa:	0f 5f       	subi	r16, 0xFF	; 255
     aac:	1f 4f       	sbci	r17, 0xFF	; 255
     aae:	95 e0       	ldi	r25, 0x05	; 5
     ab0:	e9 0e       	add	r14, r25
     ab2:	f1 1c       	adc	r15, r1
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     ab4:	01 32       	cpi	r16, 0x21	; 33
     ab6:	11 05       	cpc	r17, r1
     ab8:	99 f6       	brne	.-90     	; 0xa60 <sys_status+0x8a>
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
        }

    }
    printf("$ Status message end #\r\n");
     aba:	80 e8       	ldi	r24, 0x80	; 128
     abc:	9a e5       	ldi	r25, 0x5A	; 90
     abe:	0e 94 62 08 	call	0x10c4	; 0x10c4 <puts>
    return 0;
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	24 96       	adiw	r28, 0x04	; 4
     ac6:	cd bf       	out	0x3d, r28	; 61
     ac8:	de bf       	out	0x3e, r29	; 62
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	1f 91       	pop	r17
     ad0:	0f 91       	pop	r16
     ad2:	ff 90       	pop	r15
     ad4:	ef 90       	pop	r14
     ad6:	df 90       	pop	r13
     ad8:	cf 90       	pop	r12
     ada:	08 95       	ret

00000adc <uart0_printChar>:
    USART1.TXDATAL = c;
    while (!(USART1.STATUS & USART_DREIF_bm)) {     // Check for completed transmission
        ;
    }
    /* Return to receiver mode */
    PORTC.OUTCLR = PIN3_bm;
     adc:	e0 e0       	ldi	r30, 0x00	; 0
     ade:	f8 e0       	ldi	r31, 0x08	; 8
     ae0:	94 81       	ldd	r25, Z+4	; 0x04
     ae2:	95 ff       	sbrs	r25, 5
     ae4:	fd cf       	rjmp	.-6      	; 0xae0 <uart0_printChar+0x4>
     ae6:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f4802>
     aea:	80 e0       	ldi	r24, 0x00	; 0
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	08 95       	ret

00000af0 <uart_init>:
    Function definitions
    *************************************************/
void uart_init() {
    /* Setup stream for printf() */  
    #if USART_SEL == 0
        stdout = &uart0_stream;
     af0:	84 e1       	ldi	r24, 0x14	; 20
     af2:	99 e2       	ldi	r25, 0x29	; 41
     af4:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <__iob+0x2>
     af8:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <__iob+0x3>
        stdout = &uart1_stream;
    #endif
    
    /* USART0 Config (Main comms and debug interface) */
    /* Baud rate */
    USART0.BAUD = (uint16_t)USART_BAUD_RATE(BAUD0);
     afc:	e0 e0       	ldi	r30, 0x00	; 0
     afe:	f8 e0       	ldi	r31, 0x08	; 8
     b00:	8b e5       	ldi	r24, 0x5B	; 91
     b02:	91 e0       	ldi	r25, 0x01	; 1
     b04:	80 87       	std	Z+8, r24	; 0x08
     b06:	91 87       	std	Z+9, r25	; 0x09
    /* Enable interrupts */
    USART0.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm);
     b08:	85 81       	ldd	r24, Z+5	; 0x05
     b0a:	80 6e       	ori	r24, 0xE0	; 224
     b0c:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */
    USART0.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);
     b0e:	86 81       	ldd	r24, Z+6	; 0x06
     b10:	80 6c       	ori	r24, 0xC0	; 192
     b12:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PA0) to output, RX(PA1) to input */
    PORTA.DIRSET = PIN0_bm;
     b14:	e0 e0       	ldi	r30, 0x00	; 0
     b16:	f4 e0       	ldi	r31, 0x04	; 4
     b18:	21 e0       	ldi	r18, 0x01	; 1
     b1a:	21 83       	std	Z+1, r18	; 0x01
    PORTA.DIRCLR = PIN1_bm;
     b1c:	92 e0       	ldi	r25, 0x02	; 2
     b1e:	92 83       	std	Z+2, r25	; 0x02
                                               

    
    /* USART1 Config (RS485 interface) */
    /* Baud rate */
    USART1.BAUD = (uint16_t)USART_BAUD_RATE(BAUD1);
     b20:	e0 e2       	ldi	r30, 0x20	; 32
     b22:	f8 e0       	ldi	r31, 0x08	; 8
     b24:	47 e4       	ldi	r20, 0x47	; 71
     b26:	50 e1       	ldi	r21, 0x10	; 16
     b28:	40 87       	std	Z+8, r20	; 0x08
     b2a:	51 87       	std	Z+9, r21	; 0x09
    /* Enable interrupts */
    USART1.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm | USART_RS485_EXT_gc); 
     b2c:	85 81       	ldd	r24, Z+5	; 0x05
     b2e:	81 6e       	ori	r24, 0xE1	; 225
     b30:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */    
    USART1.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);   
     b32:	86 81       	ldd	r24, Z+6	; 0x06
     b34:	80 6c       	ori	r24, 0xC0	; 192
     b36:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PC0) and XDIR(PC3) to output, RX(PC1) to input. XDIR low ->  Receiver mode */                     
    PORTC.DIRSET = PIN0_bm;                                              
     b38:	e0 e4       	ldi	r30, 0x40	; 64
     b3a:	f4 e0       	ldi	r31, 0x04	; 4
     b3c:	21 83       	std	Z+1, r18	; 0x01
    PORTC.DIRCLR = PIN1_bm;                                                
     b3e:	92 83       	std	Z+2, r25	; 0x02
    PORTC.DIRSET = PIN3_bm;                                                
     b40:	88 e0       	ldi	r24, 0x08	; 8
     b42:	81 83       	std	Z+1, r24	; 0x01
    PORTC.OUTCLR = PIN3_bm;
     b44:	86 83       	std	Z+6, r24	; 0x06
     b46:	08 95       	ret

00000b48 <uart0_readLine>:
    }
    return USART0.RXDATAL;
}

char * uart0_readLine() {                             // Read a single line from uart0 RX
    uint8_t index = 0;
     b48:	a0 e0       	ldi	r26, 0x00	; 0
    uart0_sendChar(c);
    return 0;
}

static uint8_t uart0_readChar() {
    while (!(USART0.STATUS & USART_RXCIF_bm)) {
     b4a:	e0 e0       	ldi	r30, 0x00	; 0
     b4c:	f8 e0       	ldi	r31, 0x08	; 8
     b4e:	84 81       	ldd	r24, Z+4	; 0x04
     b50:	88 23       	and	r24, r24
     b52:	ec f7       	brge	.-6      	; 0xb4e <uart0_readLine+0x6>
        ;
    }
    return USART0.RXDATAL;
     b54:	80 81       	ld	r24, Z
    uint8_t index = 0;
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
     b56:	8a 30       	cpi	r24, 0x0A	; 10
     b58:	09 f1       	breq	.+66     	; 0xb9c <uart0_readLine+0x54>
     b5a:	8d 30       	cpi	r24, 0x0D	; 13
     b5c:	c1 f3       	breq	.-16     	; 0xb4e <uart0_readLine+0x6>
            buffer[index++] = c;
     b5e:	91 e0       	ldi	r25, 0x01	; 1
     b60:	9a 0f       	add	r25, r26
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	a4 5b       	subi	r26, 0xB4	; 180
     b66:	b6 4d       	sbci	r27, 0xD6	; 214
     b68:	8c 93       	st	X, r24
            if (index > MAX_LINE_LEN) {
     b6a:	9d 33       	cpi	r25, 0x3D	; 61
     b6c:	a8 f0       	brcs	.+42     	; 0xb98 <uart0_readLine+0x50>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
     b6e:	1f 92       	push	r1
     b70:	8c e3       	ldi	r24, 0x3C	; 60
     b72:	8f 93       	push	r24
     b74:	28 e9       	ldi	r18, 0x98	; 152
     b76:	3a e5       	ldi	r19, 0x5A	; 90
     b78:	3f 93       	push	r19
     b7a:	2f 93       	push	r18
     b7c:	1f 92       	push	r1
     b7e:	8f 93       	push	r24
     b80:	8c e4       	ldi	r24, 0x4C	; 76
     b82:	99 e2       	ldi	r25, 0x29	; 41
     b84:	9f 93       	push	r25
     b86:	8f 93       	push	r24
     b88:	0e 94 92 08 	call	0x1124	; 0x1124 <snprintf>
                return buffer;
     b8c:	8d b7       	in	r24, 0x3d	; 61
     b8e:	9e b7       	in	r25, 0x3e	; 62
     b90:	08 96       	adiw	r24, 0x08	; 8
     b92:	8d bf       	out	0x3d, r24	; 61
     b94:	9e bf       	out	0x3e, r25	; 62
     b96:	06 c0       	rjmp	.+12     	; 0xba4 <uart0_readLine+0x5c>
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
            buffer[index++] = c;
     b98:	a9 2f       	mov	r26, r25
     b9a:	d9 cf       	rjmp	.-78     	; 0xb4e <uart0_readLine+0x6>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
                return buffer;
            }
        }        
        if (c == '\n') {
            buffer[index] = '\0';
     b9c:	b0 e0       	ldi	r27, 0x00	; 0
     b9e:	a4 5b       	subi	r26, 0xB4	; 180
     ba0:	b6 4d       	sbci	r27, 0xD6	; 214
     ba2:	1c 92       	st	X, r1
            index = 0;
            return buffer;
        }
    }
}     
     ba4:	8c e4       	ldi	r24, 0x4C	; 76
     ba6:	99 e2       	ldi	r25, 0x29	; 41
     ba8:	08 95       	ret

00000baa <__fixunssfsi>:
     baa:	0e 94 49 06 	call	0xc92	; 0xc92 <__fp_splitA>
     bae:	88 f0       	brcs	.+34     	; 0xbd2 <__fixunssfsi+0x28>
     bb0:	9f 57       	subi	r25, 0x7F	; 127
     bb2:	98 f0       	brcs	.+38     	; 0xbda <__fixunssfsi+0x30>
     bb4:	b9 2f       	mov	r27, r25
     bb6:	99 27       	eor	r25, r25
     bb8:	b7 51       	subi	r27, 0x17	; 23
     bba:	b0 f0       	brcs	.+44     	; 0xbe8 <__fixunssfsi+0x3e>
     bbc:	e1 f0       	breq	.+56     	; 0xbf6 <__fixunssfsi+0x4c>
     bbe:	66 0f       	add	r22, r22
     bc0:	77 1f       	adc	r23, r23
     bc2:	88 1f       	adc	r24, r24
     bc4:	99 1f       	adc	r25, r25
     bc6:	1a f0       	brmi	.+6      	; 0xbce <__fixunssfsi+0x24>
     bc8:	ba 95       	dec	r27
     bca:	c9 f7       	brne	.-14     	; 0xbbe <__fixunssfsi+0x14>
     bcc:	14 c0       	rjmp	.+40     	; 0xbf6 <__fixunssfsi+0x4c>
     bce:	b1 30       	cpi	r27, 0x01	; 1
     bd0:	91 f0       	breq	.+36     	; 0xbf6 <__fixunssfsi+0x4c>
     bd2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_zero>
     bd6:	b1 e0       	ldi	r27, 0x01	; 1
     bd8:	08 95       	ret
     bda:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_zero>
     bde:	67 2f       	mov	r22, r23
     be0:	78 2f       	mov	r23, r24
     be2:	88 27       	eor	r24, r24
     be4:	b8 5f       	subi	r27, 0xF8	; 248
     be6:	39 f0       	breq	.+14     	; 0xbf6 <__fixunssfsi+0x4c>
     be8:	b9 3f       	cpi	r27, 0xF9	; 249
     bea:	cc f3       	brlt	.-14     	; 0xbde <__fixunssfsi+0x34>
     bec:	86 95       	lsr	r24
     bee:	77 95       	ror	r23
     bf0:	67 95       	ror	r22
     bf2:	b3 95       	inc	r27
     bf4:	d9 f7       	brne	.-10     	; 0xbec <__fixunssfsi+0x42>
     bf6:	3e f4       	brtc	.+14     	; 0xc06 <__fixunssfsi+0x5c>
     bf8:	90 95       	com	r25
     bfa:	80 95       	com	r24
     bfc:	70 95       	com	r23
     bfe:	61 95       	neg	r22
     c00:	7f 4f       	sbci	r23, 0xFF	; 255
     c02:	8f 4f       	sbci	r24, 0xFF	; 255
     c04:	9f 4f       	sbci	r25, 0xFF	; 255
     c06:	08 95       	ret

00000c08 <__floatunsisf>:
     c08:	e8 94       	clt
     c0a:	09 c0       	rjmp	.+18     	; 0xc1e <__floatsisf+0x12>

00000c0c <__floatsisf>:
     c0c:	97 fb       	bst	r25, 7
     c0e:	3e f4       	brtc	.+14     	; 0xc1e <__floatsisf+0x12>
     c10:	90 95       	com	r25
     c12:	80 95       	com	r24
     c14:	70 95       	com	r23
     c16:	61 95       	neg	r22
     c18:	7f 4f       	sbci	r23, 0xFF	; 255
     c1a:	8f 4f       	sbci	r24, 0xFF	; 255
     c1c:	9f 4f       	sbci	r25, 0xFF	; 255
     c1e:	99 23       	and	r25, r25
     c20:	a9 f0       	breq	.+42     	; 0xc4c <__floatsisf+0x40>
     c22:	f9 2f       	mov	r31, r25
     c24:	96 e9       	ldi	r25, 0x96	; 150
     c26:	bb 27       	eor	r27, r27
     c28:	93 95       	inc	r25
     c2a:	f6 95       	lsr	r31
     c2c:	87 95       	ror	r24
     c2e:	77 95       	ror	r23
     c30:	67 95       	ror	r22
     c32:	b7 95       	ror	r27
     c34:	f1 11       	cpse	r31, r1
     c36:	f8 cf       	rjmp	.-16     	; 0xc28 <__floatsisf+0x1c>
     c38:	fa f4       	brpl	.+62     	; 0xc78 <__floatsisf+0x6c>
     c3a:	bb 0f       	add	r27, r27
     c3c:	11 f4       	brne	.+4      	; 0xc42 <__floatsisf+0x36>
     c3e:	60 ff       	sbrs	r22, 0
     c40:	1b c0       	rjmp	.+54     	; 0xc78 <__floatsisf+0x6c>
     c42:	6f 5f       	subi	r22, 0xFF	; 255
     c44:	7f 4f       	sbci	r23, 0xFF	; 255
     c46:	8f 4f       	sbci	r24, 0xFF	; 255
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	16 c0       	rjmp	.+44     	; 0xc78 <__floatsisf+0x6c>
     c4c:	88 23       	and	r24, r24
     c4e:	11 f0       	breq	.+4      	; 0xc54 <__floatsisf+0x48>
     c50:	96 e9       	ldi	r25, 0x96	; 150
     c52:	11 c0       	rjmp	.+34     	; 0xc76 <__floatsisf+0x6a>
     c54:	77 23       	and	r23, r23
     c56:	21 f0       	breq	.+8      	; 0xc60 <__floatsisf+0x54>
     c58:	9e e8       	ldi	r25, 0x8E	; 142
     c5a:	87 2f       	mov	r24, r23
     c5c:	76 2f       	mov	r23, r22
     c5e:	05 c0       	rjmp	.+10     	; 0xc6a <__floatsisf+0x5e>
     c60:	66 23       	and	r22, r22
     c62:	71 f0       	breq	.+28     	; 0xc80 <__floatsisf+0x74>
     c64:	96 e8       	ldi	r25, 0x86	; 134
     c66:	86 2f       	mov	r24, r22
     c68:	70 e0       	ldi	r23, 0x00	; 0
     c6a:	60 e0       	ldi	r22, 0x00	; 0
     c6c:	2a f0       	brmi	.+10     	; 0xc78 <__floatsisf+0x6c>
     c6e:	9a 95       	dec	r25
     c70:	66 0f       	add	r22, r22
     c72:	77 1f       	adc	r23, r23
     c74:	88 1f       	adc	r24, r24
     c76:	da f7       	brpl	.-10     	; 0xc6e <__floatsisf+0x62>
     c78:	88 0f       	add	r24, r24
     c7a:	96 95       	lsr	r25
     c7c:	87 95       	ror	r24
     c7e:	97 f9       	bld	r25, 7
     c80:	08 95       	ret

00000c82 <__fp_split3>:
     c82:	57 fd       	sbrc	r21, 7
     c84:	90 58       	subi	r25, 0x80	; 128
     c86:	44 0f       	add	r20, r20
     c88:	55 1f       	adc	r21, r21
     c8a:	59 f0       	breq	.+22     	; 0xca2 <__fp_splitA+0x10>
     c8c:	5f 3f       	cpi	r21, 0xFF	; 255
     c8e:	71 f0       	breq	.+28     	; 0xcac <__fp_splitA+0x1a>
     c90:	47 95       	ror	r20

00000c92 <__fp_splitA>:
     c92:	88 0f       	add	r24, r24
     c94:	97 fb       	bst	r25, 7
     c96:	99 1f       	adc	r25, r25
     c98:	61 f0       	breq	.+24     	; 0xcb2 <__fp_splitA+0x20>
     c9a:	9f 3f       	cpi	r25, 0xFF	; 255
     c9c:	79 f0       	breq	.+30     	; 0xcbc <__fp_splitA+0x2a>
     c9e:	87 95       	ror	r24
     ca0:	08 95       	ret
     ca2:	12 16       	cp	r1, r18
     ca4:	13 06       	cpc	r1, r19
     ca6:	14 06       	cpc	r1, r20
     ca8:	55 1f       	adc	r21, r21
     caa:	f2 cf       	rjmp	.-28     	; 0xc90 <__fp_split3+0xe>
     cac:	46 95       	lsr	r20
     cae:	f1 df       	rcall	.-30     	; 0xc92 <__fp_splitA>
     cb0:	08 c0       	rjmp	.+16     	; 0xcc2 <__fp_splitA+0x30>
     cb2:	16 16       	cp	r1, r22
     cb4:	17 06       	cpc	r1, r23
     cb6:	18 06       	cpc	r1, r24
     cb8:	99 1f       	adc	r25, r25
     cba:	f1 cf       	rjmp	.-30     	; 0xc9e <__fp_splitA+0xc>
     cbc:	86 95       	lsr	r24
     cbe:	71 05       	cpc	r23, r1
     cc0:	61 05       	cpc	r22, r1
     cc2:	08 94       	sec
     cc4:	08 95       	ret

00000cc6 <__fp_zero>:
     cc6:	e8 94       	clt

00000cc8 <__fp_szero>:
     cc8:	bb 27       	eor	r27, r27
     cca:	66 27       	eor	r22, r22
     ccc:	77 27       	eor	r23, r23
     cce:	cb 01       	movw	r24, r22
     cd0:	97 f9       	bld	r25, 7
     cd2:	08 95       	ret

00000cd4 <__mulsf3>:
     cd4:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__mulsf3x>
     cd8:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_round>
     cdc:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fp_pscA>
     ce0:	38 f0       	brcs	.+14     	; 0xcf0 <__mulsf3+0x1c>
     ce2:	0e 94 e7 06 	call	0xdce	; 0xdce <__fp_pscB>
     ce6:	20 f0       	brcs	.+8      	; 0xcf0 <__mulsf3+0x1c>
     ce8:	95 23       	and	r25, r21
     cea:	11 f0       	breq	.+4      	; 0xcf0 <__mulsf3+0x1c>
     cec:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_inf>
     cf0:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_nan>
     cf4:	11 24       	eor	r1, r1
     cf6:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_szero>

00000cfa <__mulsf3x>:
     cfa:	0e 94 41 06 	call	0xc82	; 0xc82 <__fp_split3>
     cfe:	70 f3       	brcs	.-36     	; 0xcdc <__mulsf3+0x8>

00000d00 <__mulsf3_pse>:
     d00:	95 9f       	mul	r25, r21
     d02:	c1 f3       	breq	.-16     	; 0xcf4 <__mulsf3+0x20>
     d04:	95 0f       	add	r25, r21
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	55 1f       	adc	r21, r21
     d0a:	62 9f       	mul	r22, r18
     d0c:	f0 01       	movw	r30, r0
     d0e:	72 9f       	mul	r23, r18
     d10:	bb 27       	eor	r27, r27
     d12:	f0 0d       	add	r31, r0
     d14:	b1 1d       	adc	r27, r1
     d16:	63 9f       	mul	r22, r19
     d18:	aa 27       	eor	r26, r26
     d1a:	f0 0d       	add	r31, r0
     d1c:	b1 1d       	adc	r27, r1
     d1e:	aa 1f       	adc	r26, r26
     d20:	64 9f       	mul	r22, r20
     d22:	66 27       	eor	r22, r22
     d24:	b0 0d       	add	r27, r0
     d26:	a1 1d       	adc	r26, r1
     d28:	66 1f       	adc	r22, r22
     d2a:	82 9f       	mul	r24, r18
     d2c:	22 27       	eor	r18, r18
     d2e:	b0 0d       	add	r27, r0
     d30:	a1 1d       	adc	r26, r1
     d32:	62 1f       	adc	r22, r18
     d34:	73 9f       	mul	r23, r19
     d36:	b0 0d       	add	r27, r0
     d38:	a1 1d       	adc	r26, r1
     d3a:	62 1f       	adc	r22, r18
     d3c:	83 9f       	mul	r24, r19
     d3e:	a0 0d       	add	r26, r0
     d40:	61 1d       	adc	r22, r1
     d42:	22 1f       	adc	r18, r18
     d44:	74 9f       	mul	r23, r20
     d46:	33 27       	eor	r19, r19
     d48:	a0 0d       	add	r26, r0
     d4a:	61 1d       	adc	r22, r1
     d4c:	23 1f       	adc	r18, r19
     d4e:	84 9f       	mul	r24, r20
     d50:	60 0d       	add	r22, r0
     d52:	21 1d       	adc	r18, r1
     d54:	82 2f       	mov	r24, r18
     d56:	76 2f       	mov	r23, r22
     d58:	6a 2f       	mov	r22, r26
     d5a:	11 24       	eor	r1, r1
     d5c:	9f 57       	subi	r25, 0x7F	; 127
     d5e:	50 40       	sbci	r21, 0x00	; 0
     d60:	9a f0       	brmi	.+38     	; 0xd88 <__mulsf3_pse+0x88>
     d62:	f1 f0       	breq	.+60     	; 0xda0 <__mulsf3_pse+0xa0>
     d64:	88 23       	and	r24, r24
     d66:	4a f0       	brmi	.+18     	; 0xd7a <__mulsf3_pse+0x7a>
     d68:	ee 0f       	add	r30, r30
     d6a:	ff 1f       	adc	r31, r31
     d6c:	bb 1f       	adc	r27, r27
     d6e:	66 1f       	adc	r22, r22
     d70:	77 1f       	adc	r23, r23
     d72:	88 1f       	adc	r24, r24
     d74:	91 50       	subi	r25, 0x01	; 1
     d76:	50 40       	sbci	r21, 0x00	; 0
     d78:	a9 f7       	brne	.-22     	; 0xd64 <__mulsf3_pse+0x64>
     d7a:	9e 3f       	cpi	r25, 0xFE	; 254
     d7c:	51 05       	cpc	r21, r1
     d7e:	80 f0       	brcs	.+32     	; 0xda0 <__mulsf3_pse+0xa0>
     d80:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_inf>
     d84:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_szero>
     d88:	5f 3f       	cpi	r21, 0xFF	; 255
     d8a:	e4 f3       	brlt	.-8      	; 0xd84 <__mulsf3_pse+0x84>
     d8c:	98 3e       	cpi	r25, 0xE8	; 232
     d8e:	d4 f3       	brlt	.-12     	; 0xd84 <__mulsf3_pse+0x84>
     d90:	86 95       	lsr	r24
     d92:	77 95       	ror	r23
     d94:	67 95       	ror	r22
     d96:	b7 95       	ror	r27
     d98:	f7 95       	ror	r31
     d9a:	e7 95       	ror	r30
     d9c:	9f 5f       	subi	r25, 0xFF	; 255
     d9e:	c1 f7       	brne	.-16     	; 0xd90 <__mulsf3_pse+0x90>
     da0:	fe 2b       	or	r31, r30
     da2:	88 0f       	add	r24, r24
     da4:	91 1d       	adc	r25, r1
     da6:	96 95       	lsr	r25
     da8:	87 95       	ror	r24
     daa:	97 f9       	bld	r25, 7
     dac:	08 95       	ret

00000dae <__fp_inf>:
     dae:	97 f9       	bld	r25, 7
     db0:	9f 67       	ori	r25, 0x7F	; 127
     db2:	80 e8       	ldi	r24, 0x80	; 128
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	08 95       	ret

00000dba <__fp_nan>:
     dba:	9f ef       	ldi	r25, 0xFF	; 255
     dbc:	80 ec       	ldi	r24, 0xC0	; 192
     dbe:	08 95       	ret

00000dc0 <__fp_pscA>:
     dc0:	00 24       	eor	r0, r0
     dc2:	0a 94       	dec	r0
     dc4:	16 16       	cp	r1, r22
     dc6:	17 06       	cpc	r1, r23
     dc8:	18 06       	cpc	r1, r24
     dca:	09 06       	cpc	r0, r25
     dcc:	08 95       	ret

00000dce <__fp_pscB>:
     dce:	00 24       	eor	r0, r0
     dd0:	0a 94       	dec	r0
     dd2:	12 16       	cp	r1, r18
     dd4:	13 06       	cpc	r1, r19
     dd6:	14 06       	cpc	r1, r20
     dd8:	05 06       	cpc	r0, r21
     dda:	08 95       	ret

00000ddc <__fp_round>:
     ddc:	09 2e       	mov	r0, r25
     dde:	03 94       	inc	r0
     de0:	00 0c       	add	r0, r0
     de2:	11 f4       	brne	.+4      	; 0xde8 <__fp_round+0xc>
     de4:	88 23       	and	r24, r24
     de6:	52 f0       	brmi	.+20     	; 0xdfc <__fp_round+0x20>
     de8:	bb 0f       	add	r27, r27
     dea:	40 f4       	brcc	.+16     	; 0xdfc <__fp_round+0x20>
     dec:	bf 2b       	or	r27, r31
     dee:	11 f4       	brne	.+4      	; 0xdf4 <__fp_round+0x18>
     df0:	60 ff       	sbrs	r22, 0
     df2:	04 c0       	rjmp	.+8      	; 0xdfc <__fp_round+0x20>
     df4:	6f 5f       	subi	r22, 0xFF	; 255
     df6:	7f 4f       	sbci	r23, 0xFF	; 255
     df8:	8f 4f       	sbci	r24, 0xFF	; 255
     dfa:	9f 4f       	sbci	r25, 0xFF	; 255
     dfc:	08 95       	ret

00000dfe <__umulhisi3>:
     dfe:	a2 9f       	mul	r26, r18
     e00:	b0 01       	movw	r22, r0
     e02:	b3 9f       	mul	r27, r19
     e04:	c0 01       	movw	r24, r0
     e06:	a3 9f       	mul	r26, r19
     e08:	70 0d       	add	r23, r0
     e0a:	81 1d       	adc	r24, r1
     e0c:	11 24       	eor	r1, r1
     e0e:	91 1d       	adc	r25, r1
     e10:	b2 9f       	mul	r27, r18
     e12:	70 0d       	add	r23, r0
     e14:	81 1d       	adc	r24, r1
     e16:	11 24       	eor	r1, r1
     e18:	91 1d       	adc	r25, r1
     e1a:	08 95       	ret

00000e1c <strtoul>:
     e1c:	a0 e0       	ldi	r26, 0x00	; 0
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	e4 e1       	ldi	r30, 0x14	; 20
     e22:	f7 e0       	ldi	r31, 0x07	; 7
     e24:	0c 94 94 0b 	jmp	0x1728	; 0x1728 <__prologue_saves__+0x2>
     e28:	5c 01       	movw	r10, r24
     e2a:	6b 01       	movw	r12, r22
     e2c:	7a 01       	movw	r14, r20
     e2e:	61 15       	cp	r22, r1
     e30:	71 05       	cpc	r23, r1
     e32:	19 f0       	breq	.+6      	; 0xe3a <strtoul+0x1e>
     e34:	fb 01       	movw	r30, r22
     e36:	80 83       	st	Z, r24
     e38:	91 83       	std	Z+1, r25	; 0x01
     e3a:	e1 14       	cp	r14, r1
     e3c:	f1 04       	cpc	r15, r1
     e3e:	29 f0       	breq	.+10     	; 0xe4a <strtoul+0x2e>
     e40:	c7 01       	movw	r24, r14
     e42:	02 97       	sbiw	r24, 0x02	; 2
     e44:	83 97       	sbiw	r24, 0x23	; 35
     e46:	08 f0       	brcs	.+2      	; 0xe4a <strtoul+0x2e>
     e48:	c9 c0       	rjmp	.+402    	; 0xfdc <strtoul+0x1c0>
     e4a:	e5 01       	movw	r28, r10
     e4c:	21 96       	adiw	r28, 0x01	; 1
     e4e:	f5 01       	movw	r30, r10
     e50:	10 81       	ld	r17, Z
     e52:	81 2f       	mov	r24, r17
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 03 08 	call	0x1006	; 0x1006 <isspace>
     e5a:	89 2b       	or	r24, r25
     e5c:	11 f0       	breq	.+4      	; 0xe62 <strtoul+0x46>
     e5e:	5e 01       	movw	r10, r28
     e60:	f4 cf       	rjmp	.-24     	; 0xe4a <strtoul+0x2e>
     e62:	1d 32       	cpi	r17, 0x2D	; 45
     e64:	29 f4       	brne	.+10     	; 0xe70 <strtoul+0x54>
     e66:	21 96       	adiw	r28, 0x01	; 1
     e68:	f5 01       	movw	r30, r10
     e6a:	11 81       	ldd	r17, Z+1	; 0x01
     e6c:	01 e0       	ldi	r16, 0x01	; 1
     e6e:	07 c0       	rjmp	.+14     	; 0xe7e <strtoul+0x62>
     e70:	1b 32       	cpi	r17, 0x2B	; 43
     e72:	21 f4       	brne	.+8      	; 0xe7c <strtoul+0x60>
     e74:	e5 01       	movw	r28, r10
     e76:	22 96       	adiw	r28, 0x02	; 2
     e78:	f5 01       	movw	r30, r10
     e7a:	11 81       	ldd	r17, Z+1	; 0x01
     e7c:	00 e0       	ldi	r16, 0x00	; 0
     e7e:	e1 14       	cp	r14, r1
     e80:	f1 04       	cpc	r15, r1
     e82:	b1 f0       	breq	.+44     	; 0xeb0 <strtoul+0x94>
     e84:	f0 e1       	ldi	r31, 0x10	; 16
     e86:	ef 16       	cp	r14, r31
     e88:	f1 04       	cpc	r15, r1
     e8a:	29 f4       	brne	.+10     	; 0xe96 <strtoul+0x7a>
     e8c:	b0 c0       	rjmp	.+352    	; 0xfee <strtoul+0x1d2>
     e8e:	10 e3       	ldi	r17, 0x30	; 48
     e90:	e1 14       	cp	r14, r1
     e92:	f1 04       	cpc	r15, r1
     e94:	01 f1       	breq	.+64     	; 0xed6 <strtoul+0xba>
     e96:	2a e0       	ldi	r18, 0x0A	; 10
     e98:	e2 16       	cp	r14, r18
     e9a:	f1 04       	cpc	r15, r1
     e9c:	b1 f1       	breq	.+108    	; 0xf0a <strtoul+0xee>
     e9e:	80 e1       	ldi	r24, 0x10	; 16
     ea0:	e8 16       	cp	r14, r24
     ea2:	f1 04       	cpc	r15, r1
     ea4:	71 f0       	breq	.+28     	; 0xec2 <strtoul+0xa6>
     ea6:	e8 e0       	ldi	r30, 0x08	; 8
     ea8:	ee 16       	cp	r14, r30
     eaa:	f1 04       	cpc	r15, r1
     eac:	f1 f4       	brne	.+60     	; 0xeea <strtoul+0xce>
     eae:	13 c0       	rjmp	.+38     	; 0xed6 <strtoul+0xba>
     eb0:	10 33       	cpi	r17, 0x30	; 48
     eb2:	41 f5       	brne	.+80     	; 0xf04 <strtoul+0xe8>
     eb4:	88 81       	ld	r24, Y
     eb6:	8f 7d       	andi	r24, 0xDF	; 223
     eb8:	88 35       	cpi	r24, 0x58	; 88
     eba:	49 f7       	brne	.-46     	; 0xe8e <strtoul+0x72>
     ebc:	19 81       	ldd	r17, Y+1	; 0x01
     ebe:	22 96       	adiw	r28, 0x02	; 2
     ec0:	02 60       	ori	r16, 0x02	; 2
     ec2:	f0 e1       	ldi	r31, 0x10	; 16
     ec4:	ef 2e       	mov	r14, r31
     ec6:	f1 2c       	mov	r15, r1
     ec8:	88 24       	eor	r8, r8
     eca:	8a 94       	dec	r8
     ecc:	98 2c       	mov	r9, r8
     ece:	a8 2c       	mov	r10, r8
     ed0:	af e0       	ldi	r26, 0x0F	; 15
     ed2:	ba 2e       	mov	r11, r26
     ed4:	20 c0       	rjmp	.+64     	; 0xf16 <strtoul+0xfa>
     ed6:	78 e0       	ldi	r23, 0x08	; 8
     ed8:	e7 2e       	mov	r14, r23
     eda:	f1 2c       	mov	r15, r1
     edc:	88 24       	eor	r8, r8
     ede:	8a 94       	dec	r8
     ee0:	98 2c       	mov	r9, r8
     ee2:	a8 2c       	mov	r10, r8
     ee4:	ef e1       	ldi	r30, 0x1F	; 31
     ee6:	be 2e       	mov	r11, r30
     ee8:	16 c0       	rjmp	.+44     	; 0xf16 <strtoul+0xfa>
     eea:	6f ef       	ldi	r22, 0xFF	; 255
     eec:	7f ef       	ldi	r23, 0xFF	; 255
     eee:	cb 01       	movw	r24, r22
     ef0:	97 01       	movw	r18, r14
     ef2:	0f 2c       	mov	r0, r15
     ef4:	00 0c       	add	r0, r0
     ef6:	44 0b       	sbc	r20, r20
     ef8:	55 0b       	sbc	r21, r21
     efa:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__udivmodsi4>
     efe:	49 01       	movw	r8, r18
     f00:	5a 01       	movw	r10, r20
     f02:	09 c0       	rjmp	.+18     	; 0xf16 <strtoul+0xfa>
     f04:	8a e0       	ldi	r24, 0x0A	; 10
     f06:	e8 2e       	mov	r14, r24
     f08:	f1 2c       	mov	r15, r1
     f0a:	69 e9       	ldi	r22, 0x99	; 153
     f0c:	86 2e       	mov	r8, r22
     f0e:	98 2c       	mov	r9, r8
     f10:	a8 2c       	mov	r10, r8
     f12:	69 e1       	ldi	r22, 0x19	; 25
     f14:	b6 2e       	mov	r11, r22
     f16:	40 e0       	ldi	r20, 0x00	; 0
     f18:	60 e0       	ldi	r22, 0x00	; 0
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	cb 01       	movw	r24, r22
     f1e:	27 01       	movw	r4, r14
     f20:	0f 2c       	mov	r0, r15
     f22:	00 0c       	add	r0, r0
     f24:	66 08       	sbc	r6, r6
     f26:	77 08       	sbc	r7, r7
     f28:	fe 01       	movw	r30, r28
     f2a:	50 ed       	ldi	r21, 0xD0	; 208
     f2c:	35 2e       	mov	r3, r21
     f2e:	31 0e       	add	r3, r17
     f30:	29 e0       	ldi	r18, 0x09	; 9
     f32:	23 15       	cp	r18, r3
     f34:	70 f4       	brcc	.+28     	; 0xf52 <strtoul+0x136>
     f36:	2f eb       	ldi	r18, 0xBF	; 191
     f38:	21 0f       	add	r18, r17
     f3a:	2a 31       	cpi	r18, 0x1A	; 26
     f3c:	18 f4       	brcc	.+6      	; 0xf44 <strtoul+0x128>
     f3e:	39 ec       	ldi	r19, 0xC9	; 201
     f40:	33 2e       	mov	r3, r19
     f42:	06 c0       	rjmp	.+12     	; 0xf50 <strtoul+0x134>
     f44:	2f e9       	ldi	r18, 0x9F	; 159
     f46:	21 0f       	add	r18, r17
     f48:	2a 31       	cpi	r18, 0x1A	; 26
     f4a:	30 f5       	brcc	.+76     	; 0xf98 <strtoul+0x17c>
     f4c:	29 ea       	ldi	r18, 0xA9	; 169
     f4e:	32 2e       	mov	r3, r18
     f50:	31 0e       	add	r3, r17
     f52:	23 2d       	mov	r18, r3
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	2e 15       	cp	r18, r14
     f58:	3f 05       	cpc	r19, r15
     f5a:	f4 f4       	brge	.+60     	; 0xf98 <strtoul+0x17c>
     f5c:	4f 3f       	cpi	r20, 0xFF	; 255
     f5e:	c9 f0       	breq	.+50     	; 0xf92 <strtoul+0x176>
     f60:	86 16       	cp	r8, r22
     f62:	97 06       	cpc	r9, r23
     f64:	a8 06       	cpc	r10, r24
     f66:	b9 06       	cpc	r11, r25
     f68:	88 f0       	brcs	.+34     	; 0xf8c <strtoul+0x170>
     f6a:	a3 01       	movw	r20, r6
     f6c:	92 01       	movw	r18, r4
     f6e:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsi3>
     f72:	23 2d       	mov	r18, r3
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	40 e0       	ldi	r20, 0x00	; 0
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	62 0f       	add	r22, r18
     f7c:	73 1f       	adc	r23, r19
     f7e:	84 1f       	adc	r24, r20
     f80:	95 1f       	adc	r25, r21
     f82:	62 17       	cp	r22, r18
     f84:	73 07       	cpc	r23, r19
     f86:	84 07       	cpc	r24, r20
     f88:	95 07       	cpc	r25, r21
     f8a:	10 f4       	brcc	.+4      	; 0xf90 <strtoul+0x174>
     f8c:	4f ef       	ldi	r20, 0xFF	; 255
     f8e:	01 c0       	rjmp	.+2      	; 0xf92 <strtoul+0x176>
     f90:	41 e0       	ldi	r20, 0x01	; 1
     f92:	21 96       	adiw	r28, 0x01	; 1
     f94:	10 81       	ld	r17, Z
     f96:	c8 cf       	rjmp	.-112    	; 0xf28 <strtoul+0x10c>
     f98:	c1 14       	cp	r12, r1
     f9a:	d1 04       	cpc	r13, r1
     f9c:	51 f0       	breq	.+20     	; 0xfb2 <strtoul+0x196>
     f9e:	44 23       	and	r20, r20
     fa0:	11 f0       	breq	.+4      	; 0xfa6 <strtoul+0x18a>
     fa2:	21 97       	sbiw	r28, 0x01	; 1
     fa4:	03 c0       	rjmp	.+6      	; 0xfac <strtoul+0x190>
     fa6:	01 ff       	sbrs	r16, 1
     fa8:	04 c0       	rjmp	.+8      	; 0xfb2 <strtoul+0x196>
     faa:	22 97       	sbiw	r28, 0x02	; 2
     fac:	f6 01       	movw	r30, r12
     fae:	c0 83       	st	Z, r28
     fb0:	d1 83       	std	Z+1, r29	; 0x01
     fb2:	00 ff       	sbrs	r16, 0
     fb4:	07 c0       	rjmp	.+14     	; 0xfc4 <strtoul+0x1a8>
     fb6:	90 95       	com	r25
     fb8:	80 95       	com	r24
     fba:	70 95       	com	r23
     fbc:	61 95       	neg	r22
     fbe:	7f 4f       	sbci	r23, 0xFF	; 255
     fc0:	8f 4f       	sbci	r24, 0xFF	; 255
     fc2:	9f 4f       	sbci	r25, 0xFF	; 255
     fc4:	4f 3f       	cpi	r20, 0xFF	; 255
     fc6:	79 f4       	brne	.+30     	; 0xfe6 <strtoul+0x1ca>
     fc8:	82 e2       	ldi	r24, 0x22	; 34
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <errno>
     fd0:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <errno+0x1>
     fd4:	3f ef       	ldi	r19, 0xFF	; 255
     fd6:	2f ef       	ldi	r18, 0xFF	; 255
     fd8:	9f ef       	ldi	r25, 0xFF	; 255
     fda:	0d c0       	rjmp	.+26     	; 0xff6 <strtoul+0x1da>
     fdc:	40 e0       	ldi	r20, 0x00	; 0
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	08 c0       	rjmp	.+16     	; 0xff6 <strtoul+0x1da>
     fe6:	46 2f       	mov	r20, r22
     fe8:	37 2f       	mov	r19, r23
     fea:	28 2f       	mov	r18, r24
     fec:	04 c0       	rjmp	.+8      	; 0xff6 <strtoul+0x1da>
     fee:	10 33       	cpi	r17, 0x30	; 48
     ff0:	09 f0       	breq	.+2      	; 0xff4 <strtoul+0x1d8>
     ff2:	67 cf       	rjmp	.-306    	; 0xec2 <strtoul+0xa6>
     ff4:	5f cf       	rjmp	.-322    	; 0xeb4 <strtoul+0x98>
     ff6:	64 2f       	mov	r22, r20
     ff8:	73 2f       	mov	r23, r19
     ffa:	82 2f       	mov	r24, r18
     ffc:	cd b7       	in	r28, 0x3d	; 61
     ffe:	de b7       	in	r29, 0x3e	; 62
    1000:	e1 e1       	ldi	r30, 0x11	; 17
    1002:	0c 94 ad 0b 	jmp	0x175a	; 0x175a <__epilogue_restores__+0x2>

00001006 <isspace>:
    1006:	91 11       	cpse	r25, r1
    1008:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <__ctype_isfalse>
    100c:	80 32       	cpi	r24, 0x20	; 32
    100e:	19 f0       	breq	.+6      	; 0x1016 <isspace+0x10>
    1010:	89 50       	subi	r24, 0x09	; 9
    1012:	85 50       	subi	r24, 0x05	; 5
    1014:	c8 f7       	brcc	.-14     	; 0x1008 <isspace+0x2>
    1016:	08 95       	ret

00001018 <strtok>:
    1018:	42 e2       	ldi	r20, 0x22	; 34
    101a:	59 e2       	ldi	r21, 0x29	; 41
    101c:	0e 94 25 08 	call	0x104a	; 0x104a <strtok_r>
    1020:	08 95       	ret

00001022 <strchr>:
    1022:	fc 01       	movw	r30, r24
    1024:	81 91       	ld	r24, Z+
    1026:	86 17       	cp	r24, r22
    1028:	21 f0       	breq	.+8      	; 0x1032 <strchr+0x10>
    102a:	88 23       	and	r24, r24
    102c:	d9 f7       	brne	.-10     	; 0x1024 <strchr+0x2>
    102e:	99 27       	eor	r25, r25
    1030:	08 95       	ret
    1032:	31 97       	sbiw	r30, 0x01	; 1
    1034:	cf 01       	movw	r24, r30
    1036:	08 95       	ret

00001038 <strcmp>:
    1038:	fb 01       	movw	r30, r22
    103a:	dc 01       	movw	r26, r24
    103c:	8d 91       	ld	r24, X+
    103e:	01 90       	ld	r0, Z+
    1040:	80 19       	sub	r24, r0
    1042:	01 10       	cpse	r0, r1
    1044:	d9 f3       	breq	.-10     	; 0x103c <strcmp+0x4>
    1046:	99 0b       	sbc	r25, r25
    1048:	08 95       	ret

0000104a <strtok_r>:
    104a:	fa 01       	movw	r30, r20
    104c:	a1 91       	ld	r26, Z+
    104e:	b0 81       	ld	r27, Z
    1050:	00 97       	sbiw	r24, 0x00	; 0
    1052:	19 f4       	brne	.+6      	; 0x105a <strtok_r+0x10>
    1054:	10 97       	sbiw	r26, 0x00	; 0
    1056:	e1 f0       	breq	.+56     	; 0x1090 <strtok_r+0x46>
    1058:	cd 01       	movw	r24, r26
    105a:	dc 01       	movw	r26, r24
    105c:	cd 01       	movw	r24, r26
    105e:	0d 90       	ld	r0, X+
    1060:	00 20       	and	r0, r0
    1062:	11 f4       	brne	.+4      	; 0x1068 <strtok_r+0x1e>
    1064:	c0 01       	movw	r24, r0
    1066:	13 c0       	rjmp	.+38     	; 0x108e <strtok_r+0x44>
    1068:	fb 01       	movw	r30, r22
    106a:	21 91       	ld	r18, Z+
    106c:	22 23       	and	r18, r18
    106e:	19 f0       	breq	.+6      	; 0x1076 <strtok_r+0x2c>
    1070:	20 15       	cp	r18, r0
    1072:	d9 f7       	brne	.-10     	; 0x106a <strtok_r+0x20>
    1074:	f3 cf       	rjmp	.-26     	; 0x105c <strtok_r+0x12>
    1076:	fb 01       	movw	r30, r22
    1078:	21 91       	ld	r18, Z+
    107a:	20 15       	cp	r18, r0
    107c:	19 f4       	brne	.+6      	; 0x1084 <strtok_r+0x3a>
    107e:	1e 92       	st	-X, r1
    1080:	11 96       	adiw	r26, 0x01	; 1
    1082:	06 c0       	rjmp	.+12     	; 0x1090 <strtok_r+0x46>
    1084:	22 23       	and	r18, r18
    1086:	c1 f7       	brne	.-16     	; 0x1078 <strtok_r+0x2e>
    1088:	0d 90       	ld	r0, X+
    108a:	00 20       	and	r0, r0
    108c:	a1 f7       	brne	.-24     	; 0x1076 <strtok_r+0x2c>
    108e:	d0 01       	movw	r26, r0
    1090:	fa 01       	movw	r30, r20
    1092:	a1 93       	st	Z+, r26
    1094:	b0 83       	st	Z, r27
    1096:	08 95       	ret

00001098 <printf>:
    1098:	a0 e0       	ldi	r26, 0x00	; 0
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	e2 e5       	ldi	r30, 0x52	; 82
    109e:	f8 e0       	ldi	r31, 0x08	; 8
    10a0:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__prologue_saves__+0x20>
    10a4:	ae 01       	movw	r20, r28
    10a6:	4b 5f       	subi	r20, 0xFB	; 251
    10a8:	5f 4f       	sbci	r21, 0xFF	; 255
    10aa:	fa 01       	movw	r30, r20
    10ac:	61 91       	ld	r22, Z+
    10ae:	71 91       	ld	r23, Z+
    10b0:	af 01       	movw	r20, r30
    10b2:	80 91 10 2a 	lds	r24, 0x2A10	; 0x802a10 <__iob+0x2>
    10b6:	90 91 11 2a 	lds	r25, 0x2A11	; 0x802a11 <__iob+0x3>
    10ba:	0e 94 c2 08 	call	0x1184	; 0x1184 <vfprintf>
    10be:	e2 e0       	ldi	r30, 0x02	; 2
    10c0:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__epilogue_restores__+0x20>

000010c4 <puts>:
    10c4:	0f 93       	push	r16
    10c6:	1f 93       	push	r17
    10c8:	cf 93       	push	r28
    10ca:	df 93       	push	r29
    10cc:	e0 91 10 2a 	lds	r30, 0x2A10	; 0x802a10 <__iob+0x2>
    10d0:	f0 91 11 2a 	lds	r31, 0x2A11	; 0x802a11 <__iob+0x3>
    10d4:	23 81       	ldd	r18, Z+3	; 0x03
    10d6:	21 ff       	sbrs	r18, 1
    10d8:	1b c0       	rjmp	.+54     	; 0x1110 <puts+0x4c>
    10da:	8c 01       	movw	r16, r24
    10dc:	d0 e0       	ldi	r29, 0x00	; 0
    10de:	c0 e0       	ldi	r28, 0x00	; 0
    10e0:	f8 01       	movw	r30, r16
    10e2:	81 91       	ld	r24, Z+
    10e4:	8f 01       	movw	r16, r30
    10e6:	60 91 10 2a 	lds	r22, 0x2A10	; 0x802a10 <__iob+0x2>
    10ea:	70 91 11 2a 	lds	r23, 0x2A11	; 0x802a11 <__iob+0x3>
    10ee:	db 01       	movw	r26, r22
    10f0:	18 96       	adiw	r26, 0x08	; 8
    10f2:	ed 91       	ld	r30, X+
    10f4:	fc 91       	ld	r31, X
    10f6:	19 97       	sbiw	r26, 0x09	; 9
    10f8:	88 23       	and	r24, r24
    10fa:	31 f0       	breq	.+12     	; 0x1108 <puts+0x44>
    10fc:	09 95       	icall
    10fe:	89 2b       	or	r24, r25
    1100:	79 f3       	breq	.-34     	; 0x10e0 <puts+0x1c>
    1102:	df ef       	ldi	r29, 0xFF	; 255
    1104:	cf ef       	ldi	r28, 0xFF	; 255
    1106:	ec cf       	rjmp	.-40     	; 0x10e0 <puts+0x1c>
    1108:	8a e0       	ldi	r24, 0x0A	; 10
    110a:	09 95       	icall
    110c:	89 2b       	or	r24, r25
    110e:	19 f0       	breq	.+6      	; 0x1116 <puts+0x52>
    1110:	8f ef       	ldi	r24, 0xFF	; 255
    1112:	9f ef       	ldi	r25, 0xFF	; 255
    1114:	02 c0       	rjmp	.+4      	; 0x111a <puts+0x56>
    1116:	8d 2f       	mov	r24, r29
    1118:	9c 2f       	mov	r25, r28
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	08 95       	ret

00001124 <snprintf>:
    1124:	ae e0       	ldi	r26, 0x0E	; 14
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e8 e9       	ldi	r30, 0x98	; 152
    112a:	f8 e0       	ldi	r31, 0x08	; 8
    112c:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <__prologue_saves__+0x1c>
    1130:	0d 89       	ldd	r16, Y+21	; 0x15
    1132:	1e 89       	ldd	r17, Y+22	; 0x16
    1134:	8f 89       	ldd	r24, Y+23	; 0x17
    1136:	98 8d       	ldd	r25, Y+24	; 0x18
    1138:	26 e0       	ldi	r18, 0x06	; 6
    113a:	2c 83       	std	Y+4, r18	; 0x04
    113c:	09 83       	std	Y+1, r16	; 0x01
    113e:	1a 83       	std	Y+2, r17	; 0x02
    1140:	97 ff       	sbrs	r25, 7
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <snprintf+0x24>
    1144:	80 e0       	ldi	r24, 0x00	; 0
    1146:	90 e8       	ldi	r25, 0x80	; 128
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	8d 83       	std	Y+5, r24	; 0x05
    114c:	9e 83       	std	Y+6, r25	; 0x06
    114e:	ae 01       	movw	r20, r28
    1150:	45 5e       	subi	r20, 0xE5	; 229
    1152:	5f 4f       	sbci	r21, 0xFF	; 255
    1154:	69 8d       	ldd	r22, Y+25	; 0x19
    1156:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1158:	ce 01       	movw	r24, r28
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	0e 94 c2 08 	call	0x1184	; 0x1184 <vfprintf>
    1160:	4d 81       	ldd	r20, Y+5	; 0x05
    1162:	5e 81       	ldd	r21, Y+6	; 0x06
    1164:	57 fd       	sbrc	r21, 7
    1166:	0a c0       	rjmp	.+20     	; 0x117c <snprintf+0x58>
    1168:	2f 81       	ldd	r18, Y+7	; 0x07
    116a:	38 85       	ldd	r19, Y+8	; 0x08
    116c:	42 17       	cp	r20, r18
    116e:	53 07       	cpc	r21, r19
    1170:	0c f4       	brge	.+2      	; 0x1174 <snprintf+0x50>
    1172:	9a 01       	movw	r18, r20
    1174:	f8 01       	movw	r30, r16
    1176:	e2 0f       	add	r30, r18
    1178:	f3 1f       	adc	r31, r19
    117a:	10 82       	st	Z, r1
    117c:	2e 96       	adiw	r28, 0x0e	; 14
    117e:	e4 e0       	ldi	r30, 0x04	; 4
    1180:	0c 94 ba 0b 	jmp	0x1774	; 0x1774 <__epilogue_restores__+0x1c>

00001184 <vfprintf>:
    1184:	ab e0       	ldi	r26, 0x0B	; 11
    1186:	b0 e0       	ldi	r27, 0x00	; 0
    1188:	e8 ec       	ldi	r30, 0xC8	; 200
    118a:	f8 e0       	ldi	r31, 0x08	; 8
    118c:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__prologue_saves__>
    1190:	6c 01       	movw	r12, r24
    1192:	7b 01       	movw	r14, r22
    1194:	8a 01       	movw	r16, r20
    1196:	fc 01       	movw	r30, r24
    1198:	16 82       	std	Z+6, r1	; 0x06
    119a:	17 82       	std	Z+7, r1	; 0x07
    119c:	83 81       	ldd	r24, Z+3	; 0x03
    119e:	81 ff       	sbrs	r24, 1
    11a0:	cc c1       	rjmp	.+920    	; 0x153a <vfprintf+0x3b6>
    11a2:	ce 01       	movw	r24, r28
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	3c 01       	movw	r6, r24
    11a8:	f6 01       	movw	r30, r12
    11aa:	93 81       	ldd	r25, Z+3	; 0x03
    11ac:	f7 01       	movw	r30, r14
    11ae:	93 fd       	sbrc	r25, 3
    11b0:	85 91       	lpm	r24, Z+
    11b2:	93 ff       	sbrs	r25, 3
    11b4:	81 91       	ld	r24, Z+
    11b6:	7f 01       	movw	r14, r30
    11b8:	88 23       	and	r24, r24
    11ba:	09 f4       	brne	.+2      	; 0x11be <vfprintf+0x3a>
    11bc:	ba c1       	rjmp	.+884    	; 0x1532 <vfprintf+0x3ae>
    11be:	85 32       	cpi	r24, 0x25	; 37
    11c0:	39 f4       	brne	.+14     	; 0x11d0 <vfprintf+0x4c>
    11c2:	93 fd       	sbrc	r25, 3
    11c4:	85 91       	lpm	r24, Z+
    11c6:	93 ff       	sbrs	r25, 3
    11c8:	81 91       	ld	r24, Z+
    11ca:	7f 01       	movw	r14, r30
    11cc:	85 32       	cpi	r24, 0x25	; 37
    11ce:	29 f4       	brne	.+10     	; 0x11da <vfprintf+0x56>
    11d0:	b6 01       	movw	r22, r12
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    11d8:	e7 cf       	rjmp	.-50     	; 0x11a8 <vfprintf+0x24>
    11da:	91 2c       	mov	r9, r1
    11dc:	21 2c       	mov	r2, r1
    11de:	31 2c       	mov	r3, r1
    11e0:	ff e1       	ldi	r31, 0x1F	; 31
    11e2:	f3 15       	cp	r31, r3
    11e4:	d8 f0       	brcs	.+54     	; 0x121c <vfprintf+0x98>
    11e6:	8b 32       	cpi	r24, 0x2B	; 43
    11e8:	79 f0       	breq	.+30     	; 0x1208 <vfprintf+0x84>
    11ea:	38 f4       	brcc	.+14     	; 0x11fa <vfprintf+0x76>
    11ec:	80 32       	cpi	r24, 0x20	; 32
    11ee:	79 f0       	breq	.+30     	; 0x120e <vfprintf+0x8a>
    11f0:	83 32       	cpi	r24, 0x23	; 35
    11f2:	a1 f4       	brne	.+40     	; 0x121c <vfprintf+0x98>
    11f4:	23 2d       	mov	r18, r3
    11f6:	20 61       	ori	r18, 0x10	; 16
    11f8:	1d c0       	rjmp	.+58     	; 0x1234 <vfprintf+0xb0>
    11fa:	8d 32       	cpi	r24, 0x2D	; 45
    11fc:	61 f0       	breq	.+24     	; 0x1216 <vfprintf+0x92>
    11fe:	80 33       	cpi	r24, 0x30	; 48
    1200:	69 f4       	brne	.+26     	; 0x121c <vfprintf+0x98>
    1202:	23 2d       	mov	r18, r3
    1204:	21 60       	ori	r18, 0x01	; 1
    1206:	16 c0       	rjmp	.+44     	; 0x1234 <vfprintf+0xb0>
    1208:	83 2d       	mov	r24, r3
    120a:	82 60       	ori	r24, 0x02	; 2
    120c:	38 2e       	mov	r3, r24
    120e:	e3 2d       	mov	r30, r3
    1210:	e4 60       	ori	r30, 0x04	; 4
    1212:	3e 2e       	mov	r3, r30
    1214:	2a c0       	rjmp	.+84     	; 0x126a <vfprintf+0xe6>
    1216:	f3 2d       	mov	r31, r3
    1218:	f8 60       	ori	r31, 0x08	; 8
    121a:	1d c0       	rjmp	.+58     	; 0x1256 <vfprintf+0xd2>
    121c:	37 fc       	sbrc	r3, 7
    121e:	2d c0       	rjmp	.+90     	; 0x127a <vfprintf+0xf6>
    1220:	20 ed       	ldi	r18, 0xD0	; 208
    1222:	28 0f       	add	r18, r24
    1224:	2a 30       	cpi	r18, 0x0A	; 10
    1226:	40 f0       	brcs	.+16     	; 0x1238 <vfprintf+0xb4>
    1228:	8e 32       	cpi	r24, 0x2E	; 46
    122a:	b9 f4       	brne	.+46     	; 0x125a <vfprintf+0xd6>
    122c:	36 fc       	sbrc	r3, 6
    122e:	81 c1       	rjmp	.+770    	; 0x1532 <vfprintf+0x3ae>
    1230:	23 2d       	mov	r18, r3
    1232:	20 64       	ori	r18, 0x40	; 64
    1234:	32 2e       	mov	r3, r18
    1236:	19 c0       	rjmp	.+50     	; 0x126a <vfprintf+0xe6>
    1238:	36 fe       	sbrs	r3, 6
    123a:	06 c0       	rjmp	.+12     	; 0x1248 <vfprintf+0xc4>
    123c:	8a e0       	ldi	r24, 0x0A	; 10
    123e:	98 9e       	mul	r9, r24
    1240:	20 0d       	add	r18, r0
    1242:	11 24       	eor	r1, r1
    1244:	92 2e       	mov	r9, r18
    1246:	11 c0       	rjmp	.+34     	; 0x126a <vfprintf+0xe6>
    1248:	ea e0       	ldi	r30, 0x0A	; 10
    124a:	2e 9e       	mul	r2, r30
    124c:	20 0d       	add	r18, r0
    124e:	11 24       	eor	r1, r1
    1250:	22 2e       	mov	r2, r18
    1252:	f3 2d       	mov	r31, r3
    1254:	f0 62       	ori	r31, 0x20	; 32
    1256:	3f 2e       	mov	r3, r31
    1258:	08 c0       	rjmp	.+16     	; 0x126a <vfprintf+0xe6>
    125a:	8c 36       	cpi	r24, 0x6C	; 108
    125c:	21 f4       	brne	.+8      	; 0x1266 <vfprintf+0xe2>
    125e:	83 2d       	mov	r24, r3
    1260:	80 68       	ori	r24, 0x80	; 128
    1262:	38 2e       	mov	r3, r24
    1264:	02 c0       	rjmp	.+4      	; 0x126a <vfprintf+0xe6>
    1266:	88 36       	cpi	r24, 0x68	; 104
    1268:	41 f4       	brne	.+16     	; 0x127a <vfprintf+0xf6>
    126a:	f7 01       	movw	r30, r14
    126c:	93 fd       	sbrc	r25, 3
    126e:	85 91       	lpm	r24, Z+
    1270:	93 ff       	sbrs	r25, 3
    1272:	81 91       	ld	r24, Z+
    1274:	7f 01       	movw	r14, r30
    1276:	81 11       	cpse	r24, r1
    1278:	b3 cf       	rjmp	.-154    	; 0x11e0 <vfprintf+0x5c>
    127a:	98 2f       	mov	r25, r24
    127c:	9f 7d       	andi	r25, 0xDF	; 223
    127e:	95 54       	subi	r25, 0x45	; 69
    1280:	93 30       	cpi	r25, 0x03	; 3
    1282:	28 f4       	brcc	.+10     	; 0x128e <vfprintf+0x10a>
    1284:	0c 5f       	subi	r16, 0xFC	; 252
    1286:	1f 4f       	sbci	r17, 0xFF	; 255
    1288:	9f e3       	ldi	r25, 0x3F	; 63
    128a:	99 83       	std	Y+1, r25	; 0x01
    128c:	0d c0       	rjmp	.+26     	; 0x12a8 <vfprintf+0x124>
    128e:	83 36       	cpi	r24, 0x63	; 99
    1290:	31 f0       	breq	.+12     	; 0x129e <vfprintf+0x11a>
    1292:	83 37       	cpi	r24, 0x73	; 115
    1294:	71 f0       	breq	.+28     	; 0x12b2 <vfprintf+0x12e>
    1296:	83 35       	cpi	r24, 0x53	; 83
    1298:	09 f0       	breq	.+2      	; 0x129c <vfprintf+0x118>
    129a:	59 c0       	rjmp	.+178    	; 0x134e <vfprintf+0x1ca>
    129c:	21 c0       	rjmp	.+66     	; 0x12e0 <vfprintf+0x15c>
    129e:	f8 01       	movw	r30, r16
    12a0:	80 81       	ld	r24, Z
    12a2:	89 83       	std	Y+1, r24	; 0x01
    12a4:	0e 5f       	subi	r16, 0xFE	; 254
    12a6:	1f 4f       	sbci	r17, 0xFF	; 255
    12a8:	88 24       	eor	r8, r8
    12aa:	83 94       	inc	r8
    12ac:	91 2c       	mov	r9, r1
    12ae:	53 01       	movw	r10, r6
    12b0:	13 c0       	rjmp	.+38     	; 0x12d8 <vfprintf+0x154>
    12b2:	28 01       	movw	r4, r16
    12b4:	f2 e0       	ldi	r31, 0x02	; 2
    12b6:	4f 0e       	add	r4, r31
    12b8:	51 1c       	adc	r5, r1
    12ba:	f8 01       	movw	r30, r16
    12bc:	a0 80       	ld	r10, Z
    12be:	b1 80       	ldd	r11, Z+1	; 0x01
    12c0:	36 fe       	sbrs	r3, 6
    12c2:	03 c0       	rjmp	.+6      	; 0x12ca <vfprintf+0x146>
    12c4:	69 2d       	mov	r22, r9
    12c6:	70 e0       	ldi	r23, 0x00	; 0
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <vfprintf+0x14a>
    12ca:	6f ef       	ldi	r22, 0xFF	; 255
    12cc:	7f ef       	ldi	r23, 0xFF	; 255
    12ce:	c5 01       	movw	r24, r10
    12d0:	0e 94 b1 0a 	call	0x1562	; 0x1562 <strnlen>
    12d4:	4c 01       	movw	r8, r24
    12d6:	82 01       	movw	r16, r4
    12d8:	f3 2d       	mov	r31, r3
    12da:	ff 77       	andi	r31, 0x7F	; 127
    12dc:	3f 2e       	mov	r3, r31
    12de:	16 c0       	rjmp	.+44     	; 0x130c <vfprintf+0x188>
    12e0:	28 01       	movw	r4, r16
    12e2:	22 e0       	ldi	r18, 0x02	; 2
    12e4:	42 0e       	add	r4, r18
    12e6:	51 1c       	adc	r5, r1
    12e8:	f8 01       	movw	r30, r16
    12ea:	a0 80       	ld	r10, Z
    12ec:	b1 80       	ldd	r11, Z+1	; 0x01
    12ee:	36 fe       	sbrs	r3, 6
    12f0:	03 c0       	rjmp	.+6      	; 0x12f8 <vfprintf+0x174>
    12f2:	69 2d       	mov	r22, r9
    12f4:	70 e0       	ldi	r23, 0x00	; 0
    12f6:	02 c0       	rjmp	.+4      	; 0x12fc <vfprintf+0x178>
    12f8:	6f ef       	ldi	r22, 0xFF	; 255
    12fa:	7f ef       	ldi	r23, 0xFF	; 255
    12fc:	c5 01       	movw	r24, r10
    12fe:	0e 94 a6 0a 	call	0x154c	; 0x154c <strnlen_P>
    1302:	4c 01       	movw	r8, r24
    1304:	f3 2d       	mov	r31, r3
    1306:	f0 68       	ori	r31, 0x80	; 128
    1308:	3f 2e       	mov	r3, r31
    130a:	82 01       	movw	r16, r4
    130c:	33 fc       	sbrc	r3, 3
    130e:	1b c0       	rjmp	.+54     	; 0x1346 <vfprintf+0x1c2>
    1310:	82 2d       	mov	r24, r2
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	88 16       	cp	r8, r24
    1316:	99 06       	cpc	r9, r25
    1318:	b0 f4       	brcc	.+44     	; 0x1346 <vfprintf+0x1c2>
    131a:	b6 01       	movw	r22, r12
    131c:	80 e2       	ldi	r24, 0x20	; 32
    131e:	90 e0       	ldi	r25, 0x00	; 0
    1320:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    1324:	2a 94       	dec	r2
    1326:	f4 cf       	rjmp	.-24     	; 0x1310 <vfprintf+0x18c>
    1328:	f5 01       	movw	r30, r10
    132a:	37 fc       	sbrc	r3, 7
    132c:	85 91       	lpm	r24, Z+
    132e:	37 fe       	sbrs	r3, 7
    1330:	81 91       	ld	r24, Z+
    1332:	5f 01       	movw	r10, r30
    1334:	b6 01       	movw	r22, r12
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    133c:	21 10       	cpse	r2, r1
    133e:	2a 94       	dec	r2
    1340:	21 e0       	ldi	r18, 0x01	; 1
    1342:	82 1a       	sub	r8, r18
    1344:	91 08       	sbc	r9, r1
    1346:	81 14       	cp	r8, r1
    1348:	91 04       	cpc	r9, r1
    134a:	71 f7       	brne	.-36     	; 0x1328 <vfprintf+0x1a4>
    134c:	e8 c0       	rjmp	.+464    	; 0x151e <vfprintf+0x39a>
    134e:	84 36       	cpi	r24, 0x64	; 100
    1350:	11 f0       	breq	.+4      	; 0x1356 <vfprintf+0x1d2>
    1352:	89 36       	cpi	r24, 0x69	; 105
    1354:	41 f5       	brne	.+80     	; 0x13a6 <vfprintf+0x222>
    1356:	f8 01       	movw	r30, r16
    1358:	37 fe       	sbrs	r3, 7
    135a:	07 c0       	rjmp	.+14     	; 0x136a <vfprintf+0x1e6>
    135c:	60 81       	ld	r22, Z
    135e:	71 81       	ldd	r23, Z+1	; 0x01
    1360:	82 81       	ldd	r24, Z+2	; 0x02
    1362:	93 81       	ldd	r25, Z+3	; 0x03
    1364:	0c 5f       	subi	r16, 0xFC	; 252
    1366:	1f 4f       	sbci	r17, 0xFF	; 255
    1368:	08 c0       	rjmp	.+16     	; 0x137a <vfprintf+0x1f6>
    136a:	60 81       	ld	r22, Z
    136c:	71 81       	ldd	r23, Z+1	; 0x01
    136e:	07 2e       	mov	r0, r23
    1370:	00 0c       	add	r0, r0
    1372:	88 0b       	sbc	r24, r24
    1374:	99 0b       	sbc	r25, r25
    1376:	0e 5f       	subi	r16, 0xFE	; 254
    1378:	1f 4f       	sbci	r17, 0xFF	; 255
    137a:	f3 2d       	mov	r31, r3
    137c:	ff 76       	andi	r31, 0x6F	; 111
    137e:	3f 2e       	mov	r3, r31
    1380:	97 ff       	sbrs	r25, 7
    1382:	09 c0       	rjmp	.+18     	; 0x1396 <vfprintf+0x212>
    1384:	90 95       	com	r25
    1386:	80 95       	com	r24
    1388:	70 95       	com	r23
    138a:	61 95       	neg	r22
    138c:	7f 4f       	sbci	r23, 0xFF	; 255
    138e:	8f 4f       	sbci	r24, 0xFF	; 255
    1390:	9f 4f       	sbci	r25, 0xFF	; 255
    1392:	f0 68       	ori	r31, 0x80	; 128
    1394:	3f 2e       	mov	r3, r31
    1396:	2a e0       	ldi	r18, 0x0A	; 10
    1398:	30 e0       	ldi	r19, 0x00	; 0
    139a:	a3 01       	movw	r20, r6
    139c:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__ultoa_invert>
    13a0:	88 2e       	mov	r8, r24
    13a2:	86 18       	sub	r8, r6
    13a4:	45 c0       	rjmp	.+138    	; 0x1430 <vfprintf+0x2ac>
    13a6:	85 37       	cpi	r24, 0x75	; 117
    13a8:	31 f4       	brne	.+12     	; 0x13b6 <vfprintf+0x232>
    13aa:	23 2d       	mov	r18, r3
    13ac:	2f 7e       	andi	r18, 0xEF	; 239
    13ae:	b2 2e       	mov	r11, r18
    13b0:	2a e0       	ldi	r18, 0x0A	; 10
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	25 c0       	rjmp	.+74     	; 0x1400 <vfprintf+0x27c>
    13b6:	93 2d       	mov	r25, r3
    13b8:	99 7f       	andi	r25, 0xF9	; 249
    13ba:	b9 2e       	mov	r11, r25
    13bc:	8f 36       	cpi	r24, 0x6F	; 111
    13be:	c1 f0       	breq	.+48     	; 0x13f0 <vfprintf+0x26c>
    13c0:	18 f4       	brcc	.+6      	; 0x13c8 <vfprintf+0x244>
    13c2:	88 35       	cpi	r24, 0x58	; 88
    13c4:	79 f0       	breq	.+30     	; 0x13e4 <vfprintf+0x260>
    13c6:	b5 c0       	rjmp	.+362    	; 0x1532 <vfprintf+0x3ae>
    13c8:	80 37       	cpi	r24, 0x70	; 112
    13ca:	19 f0       	breq	.+6      	; 0x13d2 <vfprintf+0x24e>
    13cc:	88 37       	cpi	r24, 0x78	; 120
    13ce:	21 f0       	breq	.+8      	; 0x13d8 <vfprintf+0x254>
    13d0:	b0 c0       	rjmp	.+352    	; 0x1532 <vfprintf+0x3ae>
    13d2:	e9 2f       	mov	r30, r25
    13d4:	e0 61       	ori	r30, 0x10	; 16
    13d6:	be 2e       	mov	r11, r30
    13d8:	b4 fe       	sbrs	r11, 4
    13da:	0d c0       	rjmp	.+26     	; 0x13f6 <vfprintf+0x272>
    13dc:	fb 2d       	mov	r31, r11
    13de:	f4 60       	ori	r31, 0x04	; 4
    13e0:	bf 2e       	mov	r11, r31
    13e2:	09 c0       	rjmp	.+18     	; 0x13f6 <vfprintf+0x272>
    13e4:	34 fe       	sbrs	r3, 4
    13e6:	0a c0       	rjmp	.+20     	; 0x13fc <vfprintf+0x278>
    13e8:	29 2f       	mov	r18, r25
    13ea:	26 60       	ori	r18, 0x06	; 6
    13ec:	b2 2e       	mov	r11, r18
    13ee:	06 c0       	rjmp	.+12     	; 0x13fc <vfprintf+0x278>
    13f0:	28 e0       	ldi	r18, 0x08	; 8
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	05 c0       	rjmp	.+10     	; 0x1400 <vfprintf+0x27c>
    13f6:	20 e1       	ldi	r18, 0x10	; 16
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	02 c0       	rjmp	.+4      	; 0x1400 <vfprintf+0x27c>
    13fc:	20 e1       	ldi	r18, 0x10	; 16
    13fe:	32 e0       	ldi	r19, 0x02	; 2
    1400:	f8 01       	movw	r30, r16
    1402:	b7 fe       	sbrs	r11, 7
    1404:	07 c0       	rjmp	.+14     	; 0x1414 <vfprintf+0x290>
    1406:	60 81       	ld	r22, Z
    1408:	71 81       	ldd	r23, Z+1	; 0x01
    140a:	82 81       	ldd	r24, Z+2	; 0x02
    140c:	93 81       	ldd	r25, Z+3	; 0x03
    140e:	0c 5f       	subi	r16, 0xFC	; 252
    1410:	1f 4f       	sbci	r17, 0xFF	; 255
    1412:	06 c0       	rjmp	.+12     	; 0x1420 <vfprintf+0x29c>
    1414:	60 81       	ld	r22, Z
    1416:	71 81       	ldd	r23, Z+1	; 0x01
    1418:	80 e0       	ldi	r24, 0x00	; 0
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	0e 5f       	subi	r16, 0xFE	; 254
    141e:	1f 4f       	sbci	r17, 0xFF	; 255
    1420:	a3 01       	movw	r20, r6
    1422:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__ultoa_invert>
    1426:	88 2e       	mov	r8, r24
    1428:	86 18       	sub	r8, r6
    142a:	fb 2d       	mov	r31, r11
    142c:	ff 77       	andi	r31, 0x7F	; 127
    142e:	3f 2e       	mov	r3, r31
    1430:	36 fe       	sbrs	r3, 6
    1432:	0d c0       	rjmp	.+26     	; 0x144e <vfprintf+0x2ca>
    1434:	23 2d       	mov	r18, r3
    1436:	2e 7f       	andi	r18, 0xFE	; 254
    1438:	a2 2e       	mov	r10, r18
    143a:	89 14       	cp	r8, r9
    143c:	58 f4       	brcc	.+22     	; 0x1454 <vfprintf+0x2d0>
    143e:	34 fe       	sbrs	r3, 4
    1440:	0b c0       	rjmp	.+22     	; 0x1458 <vfprintf+0x2d4>
    1442:	32 fc       	sbrc	r3, 2
    1444:	09 c0       	rjmp	.+18     	; 0x1458 <vfprintf+0x2d4>
    1446:	83 2d       	mov	r24, r3
    1448:	8e 7e       	andi	r24, 0xEE	; 238
    144a:	a8 2e       	mov	r10, r24
    144c:	05 c0       	rjmp	.+10     	; 0x1458 <vfprintf+0x2d4>
    144e:	b8 2c       	mov	r11, r8
    1450:	a3 2c       	mov	r10, r3
    1452:	03 c0       	rjmp	.+6      	; 0x145a <vfprintf+0x2d6>
    1454:	b8 2c       	mov	r11, r8
    1456:	01 c0       	rjmp	.+2      	; 0x145a <vfprintf+0x2d6>
    1458:	b9 2c       	mov	r11, r9
    145a:	a4 fe       	sbrs	r10, 4
    145c:	0f c0       	rjmp	.+30     	; 0x147c <vfprintf+0x2f8>
    145e:	fe 01       	movw	r30, r28
    1460:	e8 0d       	add	r30, r8
    1462:	f1 1d       	adc	r31, r1
    1464:	80 81       	ld	r24, Z
    1466:	80 33       	cpi	r24, 0x30	; 48
    1468:	21 f4       	brne	.+8      	; 0x1472 <vfprintf+0x2ee>
    146a:	9a 2d       	mov	r25, r10
    146c:	99 7e       	andi	r25, 0xE9	; 233
    146e:	a9 2e       	mov	r10, r25
    1470:	09 c0       	rjmp	.+18     	; 0x1484 <vfprintf+0x300>
    1472:	a2 fe       	sbrs	r10, 2
    1474:	06 c0       	rjmp	.+12     	; 0x1482 <vfprintf+0x2fe>
    1476:	b3 94       	inc	r11
    1478:	b3 94       	inc	r11
    147a:	04 c0       	rjmp	.+8      	; 0x1484 <vfprintf+0x300>
    147c:	8a 2d       	mov	r24, r10
    147e:	86 78       	andi	r24, 0x86	; 134
    1480:	09 f0       	breq	.+2      	; 0x1484 <vfprintf+0x300>
    1482:	b3 94       	inc	r11
    1484:	a3 fc       	sbrc	r10, 3
    1486:	11 c0       	rjmp	.+34     	; 0x14aa <vfprintf+0x326>
    1488:	a0 fe       	sbrs	r10, 0
    148a:	06 c0       	rjmp	.+12     	; 0x1498 <vfprintf+0x314>
    148c:	b2 14       	cp	r11, r2
    148e:	88 f4       	brcc	.+34     	; 0x14b2 <vfprintf+0x32e>
    1490:	28 0c       	add	r2, r8
    1492:	92 2c       	mov	r9, r2
    1494:	9b 18       	sub	r9, r11
    1496:	0e c0       	rjmp	.+28     	; 0x14b4 <vfprintf+0x330>
    1498:	b2 14       	cp	r11, r2
    149a:	60 f4       	brcc	.+24     	; 0x14b4 <vfprintf+0x330>
    149c:	b6 01       	movw	r22, r12
    149e:	80 e2       	ldi	r24, 0x20	; 32
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    14a6:	b3 94       	inc	r11
    14a8:	f7 cf       	rjmp	.-18     	; 0x1498 <vfprintf+0x314>
    14aa:	b2 14       	cp	r11, r2
    14ac:	18 f4       	brcc	.+6      	; 0x14b4 <vfprintf+0x330>
    14ae:	2b 18       	sub	r2, r11
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <vfprintf+0x332>
    14b2:	98 2c       	mov	r9, r8
    14b4:	21 2c       	mov	r2, r1
    14b6:	a4 fe       	sbrs	r10, 4
    14b8:	10 c0       	rjmp	.+32     	; 0x14da <vfprintf+0x356>
    14ba:	b6 01       	movw	r22, r12
    14bc:	80 e3       	ldi	r24, 0x30	; 48
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    14c4:	a2 fe       	sbrs	r10, 2
    14c6:	17 c0       	rjmp	.+46     	; 0x14f6 <vfprintf+0x372>
    14c8:	a1 fc       	sbrc	r10, 1
    14ca:	03 c0       	rjmp	.+6      	; 0x14d2 <vfprintf+0x34e>
    14cc:	88 e7       	ldi	r24, 0x78	; 120
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	02 c0       	rjmp	.+4      	; 0x14d6 <vfprintf+0x352>
    14d2:	88 e5       	ldi	r24, 0x58	; 88
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	b6 01       	movw	r22, r12
    14d8:	0c c0       	rjmp	.+24     	; 0x14f2 <vfprintf+0x36e>
    14da:	8a 2d       	mov	r24, r10
    14dc:	86 78       	andi	r24, 0x86	; 134
    14de:	59 f0       	breq	.+22     	; 0x14f6 <vfprintf+0x372>
    14e0:	a1 fe       	sbrs	r10, 1
    14e2:	02 c0       	rjmp	.+4      	; 0x14e8 <vfprintf+0x364>
    14e4:	8b e2       	ldi	r24, 0x2B	; 43
    14e6:	01 c0       	rjmp	.+2      	; 0x14ea <vfprintf+0x366>
    14e8:	80 e2       	ldi	r24, 0x20	; 32
    14ea:	a7 fc       	sbrc	r10, 7
    14ec:	8d e2       	ldi	r24, 0x2D	; 45
    14ee:	b6 01       	movw	r22, r12
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    14f6:	89 14       	cp	r8, r9
    14f8:	38 f4       	brcc	.+14     	; 0x1508 <vfprintf+0x384>
    14fa:	b6 01       	movw	r22, r12
    14fc:	80 e3       	ldi	r24, 0x30	; 48
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    1504:	9a 94       	dec	r9
    1506:	f7 cf       	rjmp	.-18     	; 0x14f6 <vfprintf+0x372>
    1508:	8a 94       	dec	r8
    150a:	f3 01       	movw	r30, r6
    150c:	e8 0d       	add	r30, r8
    150e:	f1 1d       	adc	r31, r1
    1510:	80 81       	ld	r24, Z
    1512:	b6 01       	movw	r22, r12
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    151a:	81 10       	cpse	r8, r1
    151c:	f5 cf       	rjmp	.-22     	; 0x1508 <vfprintf+0x384>
    151e:	22 20       	and	r2, r2
    1520:	09 f4       	brne	.+2      	; 0x1524 <vfprintf+0x3a0>
    1522:	42 ce       	rjmp	.-892    	; 0x11a8 <vfprintf+0x24>
    1524:	b6 01       	movw	r22, r12
    1526:	80 e2       	ldi	r24, 0x20	; 32
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    152e:	2a 94       	dec	r2
    1530:	f6 cf       	rjmp	.-20     	; 0x151e <vfprintf+0x39a>
    1532:	f6 01       	movw	r30, r12
    1534:	86 81       	ldd	r24, Z+6	; 0x06
    1536:	97 81       	ldd	r25, Z+7	; 0x07
    1538:	02 c0       	rjmp	.+4      	; 0x153e <vfprintf+0x3ba>
    153a:	8f ef       	ldi	r24, 0xFF	; 255
    153c:	9f ef       	ldi	r25, 0xFF	; 255
    153e:	2b 96       	adiw	r28, 0x0b	; 11
    1540:	e2 e1       	ldi	r30, 0x12	; 18
    1542:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <__epilogue_restores__>

00001546 <__ctype_isfalse>:
    1546:	99 27       	eor	r25, r25
    1548:	88 27       	eor	r24, r24

0000154a <__ctype_istrue>:
    154a:	08 95       	ret

0000154c <strnlen_P>:
    154c:	fc 01       	movw	r30, r24
    154e:	05 90       	lpm	r0, Z+
    1550:	61 50       	subi	r22, 0x01	; 1
    1552:	70 40       	sbci	r23, 0x00	; 0
    1554:	01 10       	cpse	r0, r1
    1556:	d8 f7       	brcc	.-10     	; 0x154e <strnlen_P+0x2>
    1558:	80 95       	com	r24
    155a:	90 95       	com	r25
    155c:	8e 0f       	add	r24, r30
    155e:	9f 1f       	adc	r25, r31
    1560:	08 95       	ret

00001562 <strnlen>:
    1562:	fc 01       	movw	r30, r24
    1564:	61 50       	subi	r22, 0x01	; 1
    1566:	70 40       	sbci	r23, 0x00	; 0
    1568:	01 90       	ld	r0, Z+
    156a:	01 10       	cpse	r0, r1
    156c:	d8 f7       	brcc	.-10     	; 0x1564 <strnlen+0x2>
    156e:	80 95       	com	r24
    1570:	90 95       	com	r25
    1572:	8e 0f       	add	r24, r30
    1574:	9f 1f       	adc	r25, r31
    1576:	08 95       	ret

00001578 <fputc>:
    1578:	0f 93       	push	r16
    157a:	1f 93       	push	r17
    157c:	cf 93       	push	r28
    157e:	df 93       	push	r29
    1580:	fb 01       	movw	r30, r22
    1582:	23 81       	ldd	r18, Z+3	; 0x03
    1584:	21 fd       	sbrc	r18, 1
    1586:	03 c0       	rjmp	.+6      	; 0x158e <fputc+0x16>
    1588:	8f ef       	ldi	r24, 0xFF	; 255
    158a:	9f ef       	ldi	r25, 0xFF	; 255
    158c:	2c c0       	rjmp	.+88     	; 0x15e6 <fputc+0x6e>
    158e:	22 ff       	sbrs	r18, 2
    1590:	16 c0       	rjmp	.+44     	; 0x15be <fputc+0x46>
    1592:	46 81       	ldd	r20, Z+6	; 0x06
    1594:	57 81       	ldd	r21, Z+7	; 0x07
    1596:	24 81       	ldd	r18, Z+4	; 0x04
    1598:	35 81       	ldd	r19, Z+5	; 0x05
    159a:	42 17       	cp	r20, r18
    159c:	53 07       	cpc	r21, r19
    159e:	44 f4       	brge	.+16     	; 0x15b0 <fputc+0x38>
    15a0:	a0 81       	ld	r26, Z
    15a2:	b1 81       	ldd	r27, Z+1	; 0x01
    15a4:	9d 01       	movw	r18, r26
    15a6:	2f 5f       	subi	r18, 0xFF	; 255
    15a8:	3f 4f       	sbci	r19, 0xFF	; 255
    15aa:	20 83       	st	Z, r18
    15ac:	31 83       	std	Z+1, r19	; 0x01
    15ae:	8c 93       	st	X, r24
    15b0:	26 81       	ldd	r18, Z+6	; 0x06
    15b2:	37 81       	ldd	r19, Z+7	; 0x07
    15b4:	2f 5f       	subi	r18, 0xFF	; 255
    15b6:	3f 4f       	sbci	r19, 0xFF	; 255
    15b8:	26 83       	std	Z+6, r18	; 0x06
    15ba:	37 83       	std	Z+7, r19	; 0x07
    15bc:	14 c0       	rjmp	.+40     	; 0x15e6 <fputc+0x6e>
    15be:	8b 01       	movw	r16, r22
    15c0:	ec 01       	movw	r28, r24
    15c2:	fb 01       	movw	r30, r22
    15c4:	00 84       	ldd	r0, Z+8	; 0x08
    15c6:	f1 85       	ldd	r31, Z+9	; 0x09
    15c8:	e0 2d       	mov	r30, r0
    15ca:	09 95       	icall
    15cc:	89 2b       	or	r24, r25
    15ce:	e1 f6       	brne	.-72     	; 0x1588 <fputc+0x10>
    15d0:	d8 01       	movw	r26, r16
    15d2:	16 96       	adiw	r26, 0x06	; 6
    15d4:	8d 91       	ld	r24, X+
    15d6:	9c 91       	ld	r25, X
    15d8:	17 97       	sbiw	r26, 0x07	; 7
    15da:	01 96       	adiw	r24, 0x01	; 1
    15dc:	16 96       	adiw	r26, 0x06	; 6
    15de:	8d 93       	st	X+, r24
    15e0:	9c 93       	st	X, r25
    15e2:	17 97       	sbiw	r26, 0x07	; 7
    15e4:	ce 01       	movw	r24, r28
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	1f 91       	pop	r17
    15ec:	0f 91       	pop	r16
    15ee:	08 95       	ret

000015f0 <__ultoa_invert>:
    15f0:	fa 01       	movw	r30, r20
    15f2:	aa 27       	eor	r26, r26
    15f4:	28 30       	cpi	r18, 0x08	; 8
    15f6:	51 f1       	breq	.+84     	; 0x164c <__ultoa_invert+0x5c>
    15f8:	20 31       	cpi	r18, 0x10	; 16
    15fa:	81 f1       	breq	.+96     	; 0x165c <__ultoa_invert+0x6c>
    15fc:	e8 94       	clt
    15fe:	6f 93       	push	r22
    1600:	6e 7f       	andi	r22, 0xFE	; 254
    1602:	6e 5f       	subi	r22, 0xFE	; 254
    1604:	7f 4f       	sbci	r23, 0xFF	; 255
    1606:	8f 4f       	sbci	r24, 0xFF	; 255
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	af 4f       	sbci	r26, 0xFF	; 255
    160c:	b1 e0       	ldi	r27, 0x01	; 1
    160e:	3e d0       	rcall	.+124    	; 0x168c <__ultoa_invert+0x9c>
    1610:	b4 e0       	ldi	r27, 0x04	; 4
    1612:	3c d0       	rcall	.+120    	; 0x168c <__ultoa_invert+0x9c>
    1614:	67 0f       	add	r22, r23
    1616:	78 1f       	adc	r23, r24
    1618:	89 1f       	adc	r24, r25
    161a:	9a 1f       	adc	r25, r26
    161c:	a1 1d       	adc	r26, r1
    161e:	68 0f       	add	r22, r24
    1620:	79 1f       	adc	r23, r25
    1622:	8a 1f       	adc	r24, r26
    1624:	91 1d       	adc	r25, r1
    1626:	a1 1d       	adc	r26, r1
    1628:	6a 0f       	add	r22, r26
    162a:	71 1d       	adc	r23, r1
    162c:	81 1d       	adc	r24, r1
    162e:	91 1d       	adc	r25, r1
    1630:	a1 1d       	adc	r26, r1
    1632:	20 d0       	rcall	.+64     	; 0x1674 <__ultoa_invert+0x84>
    1634:	09 f4       	brne	.+2      	; 0x1638 <__ultoa_invert+0x48>
    1636:	68 94       	set
    1638:	3f 91       	pop	r19
    163a:	2a e0       	ldi	r18, 0x0A	; 10
    163c:	26 9f       	mul	r18, r22
    163e:	11 24       	eor	r1, r1
    1640:	30 19       	sub	r19, r0
    1642:	30 5d       	subi	r19, 0xD0	; 208
    1644:	31 93       	st	Z+, r19
    1646:	de f6       	brtc	.-74     	; 0x15fe <__ultoa_invert+0xe>
    1648:	cf 01       	movw	r24, r30
    164a:	08 95       	ret
    164c:	46 2f       	mov	r20, r22
    164e:	47 70       	andi	r20, 0x07	; 7
    1650:	40 5d       	subi	r20, 0xD0	; 208
    1652:	41 93       	st	Z+, r20
    1654:	b3 e0       	ldi	r27, 0x03	; 3
    1656:	0f d0       	rcall	.+30     	; 0x1676 <__ultoa_invert+0x86>
    1658:	c9 f7       	brne	.-14     	; 0x164c <__ultoa_invert+0x5c>
    165a:	f6 cf       	rjmp	.-20     	; 0x1648 <__ultoa_invert+0x58>
    165c:	46 2f       	mov	r20, r22
    165e:	4f 70       	andi	r20, 0x0F	; 15
    1660:	40 5d       	subi	r20, 0xD0	; 208
    1662:	4a 33       	cpi	r20, 0x3A	; 58
    1664:	18 f0       	brcs	.+6      	; 0x166c <__ultoa_invert+0x7c>
    1666:	49 5d       	subi	r20, 0xD9	; 217
    1668:	31 fd       	sbrc	r19, 1
    166a:	40 52       	subi	r20, 0x20	; 32
    166c:	41 93       	st	Z+, r20
    166e:	02 d0       	rcall	.+4      	; 0x1674 <__ultoa_invert+0x84>
    1670:	a9 f7       	brne	.-22     	; 0x165c <__ultoa_invert+0x6c>
    1672:	ea cf       	rjmp	.-44     	; 0x1648 <__ultoa_invert+0x58>
    1674:	b4 e0       	ldi	r27, 0x04	; 4
    1676:	a6 95       	lsr	r26
    1678:	97 95       	ror	r25
    167a:	87 95       	ror	r24
    167c:	77 95       	ror	r23
    167e:	67 95       	ror	r22
    1680:	ba 95       	dec	r27
    1682:	c9 f7       	brne	.-14     	; 0x1676 <__ultoa_invert+0x86>
    1684:	00 97       	sbiw	r24, 0x00	; 0
    1686:	61 05       	cpc	r22, r1
    1688:	71 05       	cpc	r23, r1
    168a:	08 95       	ret
    168c:	9b 01       	movw	r18, r22
    168e:	ac 01       	movw	r20, r24
    1690:	0a 2e       	mov	r0, r26
    1692:	06 94       	lsr	r0
    1694:	57 95       	ror	r21
    1696:	47 95       	ror	r20
    1698:	37 95       	ror	r19
    169a:	27 95       	ror	r18
    169c:	ba 95       	dec	r27
    169e:	c9 f7       	brne	.-14     	; 0x1692 <__ultoa_invert+0xa2>
    16a0:	62 0f       	add	r22, r18
    16a2:	73 1f       	adc	r23, r19
    16a4:	84 1f       	adc	r24, r20
    16a6:	95 1f       	adc	r25, r21
    16a8:	a0 1d       	adc	r26, r0
    16aa:	08 95       	ret

000016ac <__mulsi3>:
    16ac:	db 01       	movw	r26, r22
    16ae:	8f 93       	push	r24
    16b0:	9f 93       	push	r25
    16b2:	0e 94 88 0b 	call	0x1710	; 0x1710 <__muluhisi3>
    16b6:	bf 91       	pop	r27
    16b8:	af 91       	pop	r26
    16ba:	a2 9f       	mul	r26, r18
    16bc:	80 0d       	add	r24, r0
    16be:	91 1d       	adc	r25, r1
    16c0:	a3 9f       	mul	r26, r19
    16c2:	90 0d       	add	r25, r0
    16c4:	b2 9f       	mul	r27, r18
    16c6:	90 0d       	add	r25, r0
    16c8:	11 24       	eor	r1, r1
    16ca:	08 95       	ret

000016cc <__udivmodsi4>:
    16cc:	a1 e2       	ldi	r26, 0x21	; 33
    16ce:	1a 2e       	mov	r1, r26
    16d0:	aa 1b       	sub	r26, r26
    16d2:	bb 1b       	sub	r27, r27
    16d4:	fd 01       	movw	r30, r26
    16d6:	0d c0       	rjmp	.+26     	; 0x16f2 <__udivmodsi4_ep>

000016d8 <__udivmodsi4_loop>:
    16d8:	aa 1f       	adc	r26, r26
    16da:	bb 1f       	adc	r27, r27
    16dc:	ee 1f       	adc	r30, r30
    16de:	ff 1f       	adc	r31, r31
    16e0:	a2 17       	cp	r26, r18
    16e2:	b3 07       	cpc	r27, r19
    16e4:	e4 07       	cpc	r30, r20
    16e6:	f5 07       	cpc	r31, r21
    16e8:	20 f0       	brcs	.+8      	; 0x16f2 <__udivmodsi4_ep>
    16ea:	a2 1b       	sub	r26, r18
    16ec:	b3 0b       	sbc	r27, r19
    16ee:	e4 0b       	sbc	r30, r20
    16f0:	f5 0b       	sbc	r31, r21

000016f2 <__udivmodsi4_ep>:
    16f2:	66 1f       	adc	r22, r22
    16f4:	77 1f       	adc	r23, r23
    16f6:	88 1f       	adc	r24, r24
    16f8:	99 1f       	adc	r25, r25
    16fa:	1a 94       	dec	r1
    16fc:	69 f7       	brne	.-38     	; 0x16d8 <__udivmodsi4_loop>
    16fe:	60 95       	com	r22
    1700:	70 95       	com	r23
    1702:	80 95       	com	r24
    1704:	90 95       	com	r25
    1706:	9b 01       	movw	r18, r22
    1708:	ac 01       	movw	r20, r24
    170a:	bd 01       	movw	r22, r26
    170c:	cf 01       	movw	r24, r30
    170e:	08 95       	ret

00001710 <__muluhisi3>:
    1710:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__umulhisi3>
    1714:	a5 9f       	mul	r26, r21
    1716:	90 0d       	add	r25, r0
    1718:	b4 9f       	mul	r27, r20
    171a:	90 0d       	add	r25, r0
    171c:	a4 9f       	mul	r26, r20
    171e:	80 0d       	add	r24, r0
    1720:	91 1d       	adc	r25, r1
    1722:	11 24       	eor	r1, r1
    1724:	08 95       	ret

00001726 <__prologue_saves__>:
    1726:	2f 92       	push	r2
    1728:	3f 92       	push	r3
    172a:	4f 92       	push	r4
    172c:	5f 92       	push	r5
    172e:	6f 92       	push	r6
    1730:	7f 92       	push	r7
    1732:	8f 92       	push	r8
    1734:	9f 92       	push	r9
    1736:	af 92       	push	r10
    1738:	bf 92       	push	r11
    173a:	cf 92       	push	r12
    173c:	df 92       	push	r13
    173e:	ef 92       	push	r14
    1740:	ff 92       	push	r15
    1742:	0f 93       	push	r16
    1744:	1f 93       	push	r17
    1746:	cf 93       	push	r28
    1748:	df 93       	push	r29
    174a:	cd b7       	in	r28, 0x3d	; 61
    174c:	de b7       	in	r29, 0x3e	; 62
    174e:	ca 1b       	sub	r28, r26
    1750:	db 0b       	sbc	r29, r27
    1752:	cd bf       	out	0x3d, r28	; 61
    1754:	de bf       	out	0x3e, r29	; 62
    1756:	09 94       	ijmp

00001758 <__epilogue_restores__>:
    1758:	2a 88       	ldd	r2, Y+18	; 0x12
    175a:	39 88       	ldd	r3, Y+17	; 0x11
    175c:	48 88       	ldd	r4, Y+16	; 0x10
    175e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1760:	6e 84       	ldd	r6, Y+14	; 0x0e
    1762:	7d 84       	ldd	r7, Y+13	; 0x0d
    1764:	8c 84       	ldd	r8, Y+12	; 0x0c
    1766:	9b 84       	ldd	r9, Y+11	; 0x0b
    1768:	aa 84       	ldd	r10, Y+10	; 0x0a
    176a:	b9 84       	ldd	r11, Y+9	; 0x09
    176c:	c8 84       	ldd	r12, Y+8	; 0x08
    176e:	df 80       	ldd	r13, Y+7	; 0x07
    1770:	ee 80       	ldd	r14, Y+6	; 0x06
    1772:	fd 80       	ldd	r15, Y+5	; 0x05
    1774:	0c 81       	ldd	r16, Y+4	; 0x04
    1776:	1b 81       	ldd	r17, Y+3	; 0x03
    1778:	aa 81       	ldd	r26, Y+2	; 0x02
    177a:	b9 81       	ldd	r27, Y+1	; 0x01
    177c:	ce 0f       	add	r28, r30
    177e:	d1 1d       	adc	r29, r1
    1780:	cd bf       	out	0x3d, r28	; 61
    1782:	de bf       	out	0x3e, r29	; 62
    1784:	ed 01       	movw	r28, r26
    1786:	08 95       	ret

00001788 <_exit>:
    1788:	f8 94       	cli

0000178a <__stop_program>:
    178a:	ff cf       	rjmp	.-2      	; 0x178a <__stop_program>
