
atmevse_firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00802800  00001ec9  00001b7d  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000178c  00000400  00000400  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000033d  00005b8c  00001b8c  00001840  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000f4  00802922  00802922  00001c9f  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001c9f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cfc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000178  00000000  00000000  00001d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004a13  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000028ad  00000000  00000000  000068c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000102a  00000000  00000000  00009174  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003e0  00000000  00000000  0000a1a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000021ff  00000000  00000000  0000a580  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c3a  00000000  00000000  0000c77f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000148  00000000  00000000  0000d3b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000400 <__vectors>:
     400:	0c 94 48 02 	jmp	0x490	; 0x490 <__ctors_end>
     404:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     408:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     40c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     410:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     414:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     418:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     41c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     420:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     424:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     428:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     42c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     430:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     434:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     438:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     43c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     440:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     444:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     448:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     44c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     450:	0c 94 bd 04 	jmp	0x97a	; 0x97a <__vector_20>
     454:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     458:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     45c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     460:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     464:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     468:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     46c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     470:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     474:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     478:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     47c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     480:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     484:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     488:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>
     48c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__bad_interrupt>

00000490 <__ctors_end>:
     490:	11 24       	eor	r1, r1
     492:	1f be       	out	0x3f, r1	; 63
     494:	cf ef       	ldi	r28, 0xFF	; 255
     496:	cd bf       	out	0x3d, r28	; 61
     498:	df e3       	ldi	r29, 0x3F	; 63
     49a:	de bf       	out	0x3e, r29	; 62

0000049c <__do_copy_data>:
     49c:	19 e2       	ldi	r17, 0x29	; 41
     49e:	a0 e0       	ldi	r26, 0x00	; 0
     4a0:	b8 e2       	ldi	r27, 0x28	; 40
     4a2:	e9 ec       	ldi	r30, 0xC9	; 201
     4a4:	fe e1       	ldi	r31, 0x1E	; 30
     4a6:	02 c0       	rjmp	.+4      	; 0x4ac <__do_copy_data+0x10>
     4a8:	05 90       	lpm	r0, Z+
     4aa:	0d 92       	st	X+, r0
     4ac:	a2 32       	cpi	r26, 0x22	; 34
     4ae:	b1 07       	cpc	r27, r17
     4b0:	d9 f7       	brne	.-10     	; 0x4a8 <__do_copy_data+0xc>

000004b2 <__do_clear_bss>:
     4b2:	2a e2       	ldi	r18, 0x2A	; 42
     4b4:	a2 e2       	ldi	r26, 0x22	; 34
     4b6:	b9 e2       	ldi	r27, 0x29	; 41
     4b8:	01 c0       	rjmp	.+2      	; 0x4bc <.do_clear_bss_start>

000004ba <.do_clear_bss_loop>:
     4ba:	1d 92       	st	X+, r1

000004bc <.do_clear_bss_start>:
     4bc:	a6 31       	cpi	r26, 0x16	; 22
     4be:	b2 07       	cpc	r27, r18
     4c0:	e1 f7       	brne	.-8      	; 0x4ba <.do_clear_bss_loop>
     4c2:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <main>
     4c6:	0c 94 c4 0d 	jmp	0x1b88	; 0x1b88 <_exit>

000004ca <__bad_interrupt>:
     4ca:	0c 94 00 02 	jmp	0x400	; 0x400 <__vectors>

000004ce <led_toggle>:
        return 0;        
    } 
    else {
        return -1;
    }
}
     4ce:	88 e0       	ldi	r24, 0x08	; 8
     4d0:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x7f4467>
     4d4:	80 e0       	ldi	r24, 0x00	; 0
     4d6:	08 95       	ret

000004d8 <led_on>:
     4d8:	88 e0       	ldi	r24, 0x08	; 8
     4da:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__TEXT_REGION_LENGTH__+0x7f4465>
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	08 95       	ret

000004e2 <led_off>:
     4e2:	88 e0       	ldi	r24, 0x08	; 8
     4e4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x7f4466>
     4e8:	80 e0       	ldi	r24, 0x00	; 0
     4ea:	08 95       	ret

000004ec <pwm_on>:
     4ec:	e0 e0       	ldi	r30, 0x00	; 0
     4ee:	fa e0       	ldi	r31, 0x0A	; 10
     4f0:	81 81       	ldd	r24, Z+1	; 0x01
     4f2:	80 64       	ori	r24, 0x40	; 64
     4f4:	81 83       	std	Z+1, r24	; 0x01
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	08 95       	ret

000004fa <pwm_off>:
     4fa:	e0 e0       	ldi	r30, 0x00	; 0
     4fc:	fa e0       	ldi	r31, 0x0A	; 10
     4fe:	81 81       	ldd	r24, Z+1	; 0x01
     500:	8f 7b       	andi	r24, 0xBF	; 191
     502:	81 83       	std	Z+1, r24	; 0x01
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	08 95       	ret

00000508 <ssr1_on>:
     508:	80 e4       	ldi	r24, 0x40	; 64
     50a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	08 95       	ret

00000512 <ssr1_off>:
     512:	80 e4       	ldi	r24, 0x40	; 64
     514:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	08 95       	ret

0000051c <ssr2_on>:
     51c:	80 e2       	ldi	r24, 0x20	; 32
     51e:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	08 95       	ret

00000526 <ssr2_off>:
     526:	80 e2       	ldi	r24, 0x20	; 32
     528:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	08 95       	ret

00000530 <ssr3_on>:
     530:	80 e1       	ldi	r24, 0x10	; 16
     532:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	08 95       	ret

0000053a <ssr3_off>:
     53a:	80 e1       	ldi	r24, 0x10	; 16
     53c:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	08 95       	ret

00000544 <lock_off>:
     544:	80 e8       	ldi	r24, 0x80	; 128
     546:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     54a:	84 e0       	ldi	r24, 0x04	; 4
     54c:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	08 95       	ret

00000554 <relay_on>:
     554:	88 e0       	ldi	r24, 0x08	; 8
     556:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     55a:	80 e0       	ldi	r24, 0x00	; 0
     55c:	08 95       	ret

0000055e <relay_off>:
     55e:	88 e0       	ldi	r24, 0x08	; 8
     560:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	08 95       	ret

00000568 <readCP>:
     568:	e0 e0       	ldi	r30, 0x00	; 0
     56a:	f6 e0       	ldi	r31, 0x06	; 6
     56c:	81 e0       	ldi	r24, 0x01	; 1
     56e:	86 83       	std	Z+6, r24	; 0x06
     570:	80 87       	std	Z+8, r24	; 0x08
     572:	83 85       	ldd	r24, Z+11	; 0x0b
     574:	80 ff       	sbrs	r24, 0
     576:	fd cf       	rjmp	.-6      	; 0x572 <readCP+0xa>
     578:	e0 e0       	ldi	r30, 0x00	; 0
     57a:	f6 e0       	ldi	r31, 0x06	; 6
     57c:	80 89       	ldd	r24, Z+16	; 0x10
     57e:	91 89       	ldd	r25, Z+17	; 0x11
     580:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <cpVal>
     584:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <cpVal+0x1>
     588:	21 e0       	ldi	r18, 0x01	; 1
     58a:	23 87       	std	Z+11, r18	; 0x0b
     58c:	85 3d       	cpi	r24, 0xD5	; 213
     58e:	23 e0       	ldi	r18, 0x03	; 3
     590:	92 07       	cpc	r25, r18
     592:	20 f0       	brcs	.+8      	; 0x59c <readCP+0x34>
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     59a:	1e c0       	rjmp	.+60     	; 0x5d8 <readCP+0x70>
     59c:	9c 01       	movw	r18, r24
     59e:	2d 55       	subi	r18, 0x5D	; 93
     5a0:	33 40       	sbci	r19, 0x03	; 3
     5a2:	26 33       	cpi	r18, 0x36	; 54
     5a4:	31 05       	cpc	r19, r1
     5a6:	20 f4       	brcc	.+8      	; 0x5b0 <readCP+0x48>
     5a8:	82 e0       	ldi	r24, 0x02	; 2
     5aa:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     5ae:	14 c0       	rjmp	.+40     	; 0x5d8 <readCP+0x70>
     5b0:	9c 01       	movw	r18, r24
     5b2:	21 5d       	subi	r18, 0xD1	; 209
     5b4:	32 40       	sbci	r19, 0x02	; 2
     5b6:	2f 34       	cpi	r18, 0x4F	; 79
     5b8:	31 05       	cpc	r19, r1
     5ba:	20 f4       	brcc	.+8      	; 0x5c4 <readCP+0x5c>
     5bc:	83 e0       	ldi	r24, 0x03	; 3
     5be:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     5c2:	0a c0       	rjmp	.+20     	; 0x5d8 <readCP+0x70>
     5c4:	4a 97       	sbiw	r24, 0x1a	; 26
     5c6:	85 34       	cpi	r24, 0x45	; 69
     5c8:	91 05       	cpc	r25, r1
     5ca:	20 f4       	brcc	.+8      	; 0x5d4 <readCP+0x6c>
     5cc:	84 e0       	ldi	r24, 0x04	; 4
     5ce:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <readCP+0x70>
     5d4:	10 92 3b 29 	sts	0x293B, r1	; 0x80293b <pilot>
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	08 95       	ret

000005dc <readPP>:
     5dc:	e0 e0       	ldi	r30, 0x00	; 0
     5de:	f6 e0       	ldi	r31, 0x06	; 6
     5e0:	16 82       	std	Z+6, r1	; 0x06
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	80 87       	std	Z+8, r24	; 0x08
     5e6:	83 85       	ldd	r24, Z+11	; 0x0b
     5e8:	80 ff       	sbrs	r24, 0
     5ea:	fd cf       	rjmp	.-6      	; 0x5e6 <readPP+0xa>
     5ec:	e0 e0       	ldi	r30, 0x00	; 0
     5ee:	f6 e0       	ldi	r31, 0x06	; 6
     5f0:	80 89       	ldd	r24, Z+16	; 0x10
     5f2:	91 89       	ldd	r25, Z+17	; 0x11
     5f4:	80 93 3e 29 	sts	0x293E, r24	; 0x80293e <ppVal>
     5f8:	90 93 3f 29 	sts	0x293F, r25	; 0x80293f <ppVal+0x1>
     5fc:	21 e0       	ldi	r18, 0x01	; 1
     5fe:	23 87       	std	Z+11, r18	; 0x0b
     600:	9c 01       	movw	r18, r24
     602:	2b 58       	subi	r18, 0x8B	; 139
     604:	31 40       	sbci	r19, 0x01	; 1
     606:	27 32       	cpi	r18, 0x27	; 39
     608:	31 05       	cpc	r19, r1
     60a:	20 f4       	brcc	.+8      	; 0x614 <readPP+0x38>
     60c:	80 e1       	ldi	r24, 0x10	; 16
     60e:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     612:	15 c0       	rjmp	.+42     	; 0x63e <readPP+0x62>
     614:	9c 01       	movw	r18, r24
     616:	20 5b       	subi	r18, 0xB0	; 176
     618:	31 09       	sbc	r19, r1
     61a:	21 31       	cpi	r18, 0x11	; 17
     61c:	31 05       	cpc	r19, r1
     61e:	20 f4       	brcc	.+8      	; 0x628 <readPP+0x4c>
     620:	80 e2       	ldi	r24, 0x20	; 32
     622:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     626:	0b c0       	rjmp	.+22     	; 0x63e <readPP+0x62>
     628:	89 55       	subi	r24, 0x59	; 89
     62a:	91 09       	sbc	r25, r1
     62c:	09 97       	sbiw	r24, 0x09	; 9
     62e:	20 f0       	brcs	.+8      	; 0x638 <readPP+0x5c>
     630:	8d e0       	ldi	r24, 0x0D	; 13
     632:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     636:	03 c0       	rjmp	.+6      	; 0x63e <readPP+0x62>
     638:	8f e3       	ldi	r24, 0x3F	; 63
     63a:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     63e:	80 91 2d 29 	lds	r24, 0x292D	; 0x80292d <cableConf>
     642:	88 23       	and	r24, r24
     644:	21 f0       	breq	.+8      	; 0x64e <readPP+0x72>
     646:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <maxCurrent>
     64a:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     64e:	80 e0       	ldi	r24, 0x00	; 0
     650:	08 95       	ret

00000652 <readCT>:
     652:	e0 e0       	ldi	r30, 0x00	; 0
     654:	f6 e0       	ldi	r31, 0x06	; 6
     656:	85 e0       	ldi	r24, 0x05	; 5
     658:	86 83       	std	Z+6, r24	; 0x06
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	80 87       	std	Z+8, r24	; 0x08
     65e:	83 85       	ldd	r24, Z+11	; 0x0b
     660:	80 ff       	sbrs	r24, 0
     662:	fd cf       	rjmp	.-6      	; 0x65e <readCT+0xc>
     664:	e0 e0       	ldi	r30, 0x00	; 0
     666:	f6 e0       	ldi	r31, 0x06	; 6
     668:	80 89       	ldd	r24, Z+16	; 0x10
     66a:	91 89       	ldd	r25, Z+17	; 0x11
     66c:	80 93 46 29 	sts	0x2946, r24	; 0x802946 <ctVal>
     670:	90 93 47 29 	sts	0x2947, r25	; 0x802947 <ctVal+0x1>
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	83 87       	std	Z+11, r24	; 0x0b
     678:	96 e0       	ldi	r25, 0x06	; 6
     67a:	96 83       	std	Z+6, r25	; 0x06
     67c:	80 87       	std	Z+8, r24	; 0x08
     67e:	83 85       	ldd	r24, Z+11	; 0x0b
     680:	80 ff       	sbrs	r24, 0
     682:	fd cf       	rjmp	.-6      	; 0x67e <readCT+0x2c>
     684:	e0 e0       	ldi	r30, 0x00	; 0
     686:	f6 e0       	ldi	r31, 0x06	; 6
     688:	80 89       	ldd	r24, Z+16	; 0x10
     68a:	91 89       	ldd	r25, Z+17	; 0x11
     68c:	80 93 48 29 	sts	0x2948, r24	; 0x802948 <ctVal+0x2>
     690:	90 93 49 29 	sts	0x2949, r25	; 0x802949 <ctVal+0x3>
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	83 87       	std	Z+11, r24	; 0x0b
     698:	97 e0       	ldi	r25, 0x07	; 7
     69a:	96 83       	std	Z+6, r25	; 0x06
     69c:	80 87       	std	Z+8, r24	; 0x08
     69e:	83 85       	ldd	r24, Z+11	; 0x0b
     6a0:	80 ff       	sbrs	r24, 0
     6a2:	fd cf       	rjmp	.-6      	; 0x69e <readCT+0x4c>
     6a4:	e0 e0       	ldi	r30, 0x00	; 0
     6a6:	f6 e0       	ldi	r31, 0x06	; 6
     6a8:	80 89       	ldd	r24, Z+16	; 0x10
     6aa:	91 89       	ldd	r25, Z+17	; 0x11
     6ac:	80 93 4a 29 	sts	0x294A, r24	; 0x80294a <ctVal+0x4>
     6b0:	90 93 4b 29 	sts	0x294B, r25	; 0x80294b <ctVal+0x5>
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	83 87       	std	Z+11, r24	; 0x0b
     6b8:	80 e0       	ldi	r24, 0x00	; 0
     6ba:	08 95       	ret

000006bc <lock_cable>:
     6bc:	80 e8       	ldi	r24, 0x80	; 128
     6be:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     6c2:	84 e0       	ldi	r24, 0x04	; 4
     6c4:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
     6c8:	2f eb       	ldi	r18, 0xBF	; 191
     6ca:	87 e2       	ldi	r24, 0x27	; 39
     6cc:	99 e0       	ldi	r25, 0x09	; 9
     6ce:	21 50       	subi	r18, 0x01	; 1
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	90 40       	sbci	r25, 0x00	; 0
     6d4:	e1 f7       	brne	.-8      	; 0x6ce <lock_cable+0x12>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <lock_cable+0x1c>
     6d8:	00 00       	nop
     6da:	0e 94 a2 02 	call	0x544	; 0x544 <lock_off>
     6de:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	28 2f       	mov	r18, r24
     6e6:	24 70       	andi	r18, 0x04	; 4
     6e8:	82 ff       	sbrs	r24, 2
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     6f0:	21 11       	cpse	r18, r1
     6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <lock_cable+0x3c>
     6f4:	8e ef       	ldi	r24, 0xFE	; 254
     6f6:	08 95       	ret
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	08 95       	ret

000006fc <unlock_cable>:
     6fc:	80 e8       	ldi	r24, 0x80	; 128
     6fe:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     702:	84 e0       	ldi	r24, 0x04	; 4
     704:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     708:	2f eb       	ldi	r18, 0xBF	; 191
     70a:	87 e2       	ldi	r24, 0x27	; 39
     70c:	99 e0       	ldi	r25, 0x09	; 9
     70e:	21 50       	subi	r18, 0x01	; 1
     710:	80 40       	sbci	r24, 0x00	; 0
     712:	90 40       	sbci	r25, 0x00	; 0
     714:	e1 f7       	brne	.-8      	; 0x70e <unlock_cable+0x12>
     716:	00 c0       	rjmp	.+0      	; 0x718 <unlock_cable+0x1c>
     718:	00 00       	nop
     71a:	0e 94 a2 02 	call	0x544	; 0x544 <lock_off>
     71e:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     722:	91 e0       	ldi	r25, 0x01	; 1
     724:	28 2f       	mov	r18, r24
     726:	24 70       	andi	r18, 0x04	; 4
     728:	82 ff       	sbrs	r24, 2
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     730:	22 23       	and	r18, r18
     732:	11 f0       	breq	.+4      	; 0x738 <unlock_cable+0x3c>
     734:	8e ef       	ldi	r24, 0xFE	; 254
     736:	08 95       	ret
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	08 95       	ret

0000073c <readTemp>:
     73c:	e0 e0       	ldi	r30, 0x00	; 0
     73e:	f6 e0       	ldi	r31, 0x06	; 6
     740:	80 81       	ld	r24, Z
     742:	8e 7f       	andi	r24, 0xFE	; 254
     744:	80 83       	st	Z, r24
     746:	82 81       	ldd	r24, Z+2	; 0x02
     748:	82 83       	std	Z+2, r24	; 0x02
     74a:	8e e1       	ldi	r24, 0x1E	; 30
     74c:	86 83       	std	Z+6, r24	; 0x06
     74e:	83 81       	ldd	r24, Z+3	; 0x03
     750:	80 62       	ori	r24, 0x20	; 32
     752:	83 83       	std	Z+3, r24	; 0x03
     754:	80 81       	ld	r24, Z
     756:	81 60       	ori	r24, 0x01	; 1
     758:	80 83       	st	Z, r24
     75a:	89 ef       	ldi	r24, 0xF9	; 249
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	f1 f7       	brne	.-4      	; 0x75e <readTemp+0x22>
     762:	00 c0       	rjmp	.+0      	; 0x764 <readTemp+0x28>
     764:	00 00       	nop
     766:	81 e0       	ldi	r24, 0x01	; 1
     768:	80 87       	std	Z+8, r24	; 0x08
     76a:	83 85       	ldd	r24, Z+11	; 0x0b
     76c:	80 ff       	sbrs	r24, 0
     76e:	fd cf       	rjmp	.-6      	; 0x76a <readTemp+0x2e>
     770:	e0 e0       	ldi	r30, 0x00	; 0
     772:	f6 e0       	ldi	r31, 0x06	; 6
     774:	20 89       	ldd	r18, Z+16	; 0x10
     776:	31 89       	ldd	r19, Z+17	; 0x11
     778:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <sigrow_offset>
     77c:	28 1b       	sub	r18, r24
     77e:	31 09       	sbc	r19, r1
     780:	87 fd       	sbrc	r24, 7
     782:	33 95       	inc	r19
     784:	a0 91 24 29 	lds	r26, 0x2924	; 0x802924 <sigrow_gain>
     788:	b0 e0       	ldi	r27, 0x00	; 0
     78a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__umulhisi3>
     78e:	dc 01       	movw	r26, r24
     790:	cb 01       	movw	r24, r22
     792:	80 58       	subi	r24, 0x80	; 128
     794:	9f 4f       	sbci	r25, 0xFF	; 255
     796:	af 4f       	sbci	r26, 0xFF	; 255
     798:	bf 4f       	sbci	r27, 0xFF	; 255
     79a:	89 2f       	mov	r24, r25
     79c:	9a 2f       	mov	r25, r26
     79e:	ab 2f       	mov	r26, r27
     7a0:	bb 27       	eor	r27, r27
     7a2:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <temperature>
     7a6:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <temperature+0x1>
     7aa:	80 81       	ld	r24, Z
     7ac:	8e 7f       	andi	r24, 0xFE	; 254
     7ae:	80 83       	st	Z, r24
     7b0:	82 81       	ldd	r24, Z+2	; 0x02
     7b2:	80 61       	ori	r24, 0x10	; 16
     7b4:	82 83       	std	Z+2, r24	; 0x02
     7b6:	83 81       	ldd	r24, Z+3	; 0x03
     7b8:	83 83       	std	Z+3, r24	; 0x03
     7ba:	80 81       	ld	r24, Z
     7bc:	81 60       	ori	r24, 0x01	; 1
     7be:	80 83       	st	Z, r24
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	83 87       	std	Z+11, r24	; 0x0b
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	08 95       	ret

000007c8 <all_ssr_off>:
     7c8:	e0 e0       	ldi	r30, 0x00	; 0
     7ca:	f4 e0       	ldi	r31, 0x04	; 4
     7cc:	80 e4       	ldi	r24, 0x40	; 64
     7ce:	86 83       	std	Z+6, r24	; 0x06
     7d0:	80 e2       	ldi	r24, 0x20	; 32
     7d2:	86 83       	std	Z+6, r24	; 0x06
     7d4:	80 e1       	ldi	r24, 0x10	; 16
     7d6:	86 83       	std	Z+6, r24	; 0x06
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	08 95       	ret

000007dc <all_ssr_on>:
     7dc:	e0 e0       	ldi	r30, 0x00	; 0
     7de:	f4 e0       	ldi	r31, 0x04	; 4
     7e0:	80 e4       	ldi	r24, 0x40	; 64
     7e2:	85 83       	std	Z+5, r24	; 0x05
     7e4:	80 e2       	ldi	r24, 0x20	; 32
     7e6:	85 83       	std	Z+5, r24	; 0x05
     7e8:	80 e1       	ldi	r24, 0x10	; 16
     7ea:	85 83       	std	Z+5, r24	; 0x05
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	08 95       	ret

000007f0 <init>:
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	98 ed       	ldi	r25, 0xD8	; 216
     7f6:	94 bf       	out	0x34, r25	; 52
     7f8:	e0 e1       	ldi	r30, 0x10	; 16
     7fa:	f1 e0       	ldi	r31, 0x01	; 1
     7fc:	80 81       	ld	r24, Z
     7fe:	8f 7b       	andi	r24, 0xBF	; 191
     800:	80 83       	st	Z, r24
     802:	94 bf       	out	0x34, r25	; 52
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
     80a:	8f ef       	ldi	r24, 0xFF	; 255
     80c:	9f ef       	ldi	r25, 0xFF	; 255
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	f1 f7       	brne	.-4      	; 0x80e <init+0x1e>
     812:	e0 e6       	ldi	r30, 0x60	; 96
     814:	f4 e0       	ldi	r31, 0x04	; 4
     816:	88 e0       	ldi	r24, 0x08	; 8
     818:	81 83       	std	Z+1, r24	; 0x01
     81a:	90 e1       	ldi	r25, 0x10	; 16
     81c:	92 83       	std	Z+2, r25	; 0x02
     81e:	94 89       	ldd	r25, Z+20	; 0x14
     820:	92 60       	ori	r25, 0x02	; 2
     822:	94 8b       	std	Z+20, r25	; 0x14
     824:	94 89       	ldd	r25, Z+20	; 0x14
     826:	97 7f       	andi	r25, 0xF7	; 247
     828:	94 8b       	std	Z+20, r25	; 0x14
     82a:	a0 e0       	ldi	r26, 0x00	; 0
     82c:	b4 e0       	ldi	r27, 0x04	; 4
     82e:	90 e7       	ldi	r25, 0x70	; 112
     830:	11 96       	adiw	r26, 0x01	; 1
     832:	9c 93       	st	X, r25
     834:	11 97       	sbiw	r26, 0x01	; 1
     836:	16 96       	adiw	r26, 0x06	; 6
     838:	9c 93       	st	X, r25
     83a:	16 97       	sbiw	r26, 0x06	; 6
     83c:	11 96       	adiw	r26, 0x01	; 1
     83e:	8c 93       	st	X, r24
     840:	11 97       	sbiw	r26, 0x01	; 1
     842:	16 96       	adiw	r26, 0x06	; 6
     844:	8c 93       	st	X, r24
     846:	16 97       	sbiw	r26, 0x06	; 6
     848:	90 e8       	ldi	r25, 0x80	; 128
     84a:	11 96       	adiw	r26, 0x01	; 1
     84c:	9c 93       	st	X, r25
     84e:	11 97       	sbiw	r26, 0x01	; 1
     850:	15 96       	adiw	r26, 0x05	; 5
     852:	9c 93       	st	X, r25
     854:	15 97       	sbiw	r26, 0x05	; 5
     856:	c0 e4       	ldi	r28, 0x40	; 64
     858:	d4 e0       	ldi	r29, 0x04	; 4
     85a:	84 e0       	ldi	r24, 0x04	; 4
     85c:	89 83       	std	Y+1, r24	; 0x01
     85e:	8d 83       	std	Y+5, r24	; 0x05
     860:	82 83       	std	Z+2, r24	; 0x02
     862:	22 89       	ldd	r18, Z+18	; 0x12
     864:	22 8b       	std	Z+18, r18	; 0x12
     866:	20 e2       	ldi	r18, 0x20	; 32
     868:	22 83       	std	Z+2, r18	; 0x02
     86a:	25 89       	ldd	r18, Z+21	; 0x15
     86c:	28 7f       	andi	r18, 0xF8	; 248
     86e:	25 8b       	std	Z+21, r18	; 0x15
     870:	25 89       	ldd	r18, Z+21	; 0x15
     872:	24 60       	ori	r18, 0x04	; 4
     874:	25 8b       	std	Z+21, r18	; 0x15
     876:	25 89       	ldd	r18, Z+21	; 0x15
     878:	27 7f       	andi	r18, 0xF7	; 247
     87a:	25 8b       	std	Z+21, r18	; 0x15
     87c:	20 e4       	ldi	r18, 0x40	; 64
     87e:	22 83       	std	Z+2, r18	; 0x02
     880:	26 89       	ldd	r18, Z+22	; 0x16
     882:	28 7f       	andi	r18, 0xF8	; 248
     884:	26 8b       	std	Z+22, r18	; 0x16
     886:	26 89       	ldd	r18, Z+22	; 0x16
     888:	24 60       	ori	r18, 0x04	; 4
     88a:	26 8b       	std	Z+22, r18	; 0x16
     88c:	26 89       	ldd	r18, Z+22	; 0x16
     88e:	27 7f       	andi	r18, 0xF7	; 247
     890:	26 8b       	std	Z+22, r18	; 0x16
     892:	92 83       	std	Z+2, r25	; 0x02
     894:	97 89       	ldd	r25, Z+23	; 0x17
     896:	98 7f       	andi	r25, 0xF8	; 248
     898:	97 8b       	std	Z+23, r25	; 0x17
     89a:	97 89       	ldd	r25, Z+23	; 0x17
     89c:	94 60       	ori	r25, 0x04	; 4
     89e:	97 8b       	std	Z+23, r25	; 0x17
     8a0:	97 89       	ldd	r25, Z+23	; 0x17
     8a2:	97 7f       	andi	r25, 0xF7	; 247
     8a4:	97 8b       	std	Z+23, r25	; 0x17
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	92 83       	std	Z+2, r25	; 0x02
     8aa:	90 89       	ldd	r25, Z+16	; 0x10
     8ac:	98 7f       	andi	r25, 0xF8	; 248
     8ae:	90 8b       	std	Z+16, r25	; 0x10
     8b0:	90 89       	ldd	r25, Z+16	; 0x10
     8b2:	94 60       	ori	r25, 0x04	; 4
     8b4:	90 8b       	std	Z+16, r25	; 0x10
     8b6:	90 89       	ldd	r25, Z+16	; 0x10
     8b8:	97 7f       	andi	r25, 0xF7	; 247
     8ba:	90 8b       	std	Z+16, r25	; 0x10
     8bc:	92 e0       	ldi	r25, 0x02	; 2
     8be:	92 83       	std	Z+2, r25	; 0x02
     8c0:	91 89       	ldd	r25, Z+17	; 0x11
     8c2:	98 7f       	andi	r25, 0xF8	; 248
     8c4:	91 8b       	std	Z+17, r25	; 0x11
     8c6:	91 89       	ldd	r25, Z+17	; 0x11
     8c8:	94 60       	ori	r25, 0x04	; 4
     8ca:	91 8b       	std	Z+17, r25	; 0x11
     8cc:	91 89       	ldd	r25, Z+17	; 0x11
     8ce:	97 7f       	andi	r25, 0xF7	; 247
     8d0:	91 8b       	std	Z+17, r25	; 0x11
     8d2:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
     8d6:	11 96       	adiw	r26, 0x01	; 1
     8d8:	8c 93       	st	X, r24
     8da:	11 97       	sbiw	r26, 0x01	; 1
     8dc:	16 96       	adiw	r26, 0x06	; 6
     8de:	8c 93       	st	X, r24
     8e0:	c0 e0       	ldi	r28, 0x00	; 0
     8e2:	da e0       	ldi	r29, 0x0A	; 10
     8e4:	88 81       	ld	r24, Y
     8e6:	87 60       	ori	r24, 0x07	; 7
     8e8:	88 83       	st	Y, r24
     8ea:	89 81       	ldd	r24, Y+1	; 0x01
     8ec:	87 60       	ori	r24, 0x07	; 7
     8ee:	89 83       	std	Y+1, r24	; 0x01
     8f0:	89 85       	ldd	r24, Y+9	; 0x09
     8f2:	8e 7f       	andi	r24, 0xFE	; 254
     8f4:	89 87       	std	Y+9, r24	; 0x09
     8f6:	81 e7       	ldi	r24, 0x71	; 113
     8f8:	92 e0       	ldi	r25, 0x02	; 2
     8fa:	8e ab       	std	Y+54, r24	; 0x36
     8fc:	9f ab       	std	Y+55, r25	; 0x37
     8fe:	60 91 13 29 	lds	r22, 0x2913	; 0x802913 <dutyCycle>
     902:	70 e0       	ldi	r23, 0x00	; 0
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	0e 94 06 08 	call	0x100c	; 0x100c <__floatsisf>
     90c:	2a e0       	ldi	r18, 0x0A	; 10
     90e:	37 ed       	ldi	r19, 0xD7	; 215
     910:	43 e2       	ldi	r20, 0x23	; 35
     912:	5c e3       	ldi	r21, 0x3C	; 60
     914:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <__mulsf3>
     918:	20 e0       	ldi	r18, 0x00	; 0
     91a:	30 e4       	ldi	r19, 0x40	; 64
     91c:	4c e1       	ldi	r20, 0x1C	; 28
     91e:	54 e4       	ldi	r21, 0x44	; 68
     920:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <__mulsf3>
     924:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__fixunssfsi>
     928:	6c af       	std	Y+60, r22	; 0x3c
     92a:	7d af       	std	Y+61, r23	; 0x3d
     92c:	89 81       	ldd	r24, Y+1	; 0x01
     92e:	8f 7b       	andi	r24, 0xBF	; 191
     930:	89 83       	std	Y+1, r24	; 0x01
     932:	e0 e0       	ldi	r30, 0x00	; 0
     934:	f1 e1       	ldi	r31, 0x11	; 17
     936:	81 a1       	ldd	r24, Z+33	; 0x21
     938:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <sigrow_offset>
     93c:	80 a1       	ldd	r24, Z+32	; 0x20
     93e:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <sigrow_gain>
     942:	e0 ea       	ldi	r30, 0xA0	; 160
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	80 81       	ld	r24, Z
     948:	80 61       	ori	r24, 0x10	; 16
     94a:	80 83       	st	Z, r24
     94c:	81 81       	ldd	r24, Z+1	; 0x01
     94e:	82 60       	ori	r24, 0x02	; 2
     950:	81 83       	std	Z+1, r24	; 0x01
     952:	e0 e0       	ldi	r30, 0x00	; 0
     954:	f6 e0       	ldi	r31, 0x06	; 6
     956:	82 81       	ldd	r24, Z+2	; 0x02
     958:	85 61       	ori	r24, 0x15	; 21
     95a:	82 83       	std	Z+2, r24	; 0x02
     95c:	83 81       	ldd	r24, Z+3	; 0x03
     95e:	83 83       	std	Z+3, r24	; 0x03
     960:	85 e0       	ldi	r24, 0x05	; 5
     962:	85 83       	std	Z+5, r24	; 0x05
     964:	82 81       	ldd	r24, Z+2	; 0x02
     966:	80 64       	ori	r24, 0x40	; 64
     968:	82 83       	std	Z+2, r24	; 0x02
     96a:	80 81       	ld	r24, Z
     96c:	81 60       	ori	r24, 0x01	; 1
     96e:	80 83       	st	Z, r24
     970:	0e 94 78 07 	call	0xef0	; 0xef0 <uart_init>
     974:	df 91       	pop	r29
     976:	cf 91       	pop	r28
     978:	08 95       	ret

0000097a <__vector_20>:
    ADC0.INTFLAGS = ADC_RESRDY_bm;
    return 0;
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
     97a:	1f 92       	push	r1
     97c:	0f 92       	push	r0
     97e:	0f b6       	in	r0, 0x3f	; 63
     980:	0f 92       	push	r0
     982:	11 24       	eor	r1, r1
     984:	8f 93       	push	r24
     986:	ef 93       	push	r30
     988:	ff 93       	push	r31
        uart_init();
    #endif
}

int8_t led_toggle() {
    PORTD.OUTTGL = LED;
     98a:	e0 e6       	ldi	r30, 0x60	; 96
     98c:	f4 e0       	ldi	r31, 0x04	; 4
     98e:	88 e0       	ldi	r24, 0x08	; 8
     990:	87 83       	std	Z+7, r24	; 0x07
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
    led_toggle();
    PORTD.INTFLAGS |= PORT_INT4_bm;
     992:	81 85       	ldd	r24, Z+9	; 0x09
     994:	80 61       	ori	r24, 0x10	; 16
     996:	81 87       	std	Z+9, r24	; 0x09
}
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	8f 91       	pop	r24
     99e:	0f 90       	pop	r0
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	0f 90       	pop	r0
     9a4:	1f 90       	pop	r1
     9a6:	18 95       	reti

000009a8 <main>:

/*
    Application
    *************************************************/
int main(void) {
    init();
     9a8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <init>
    sei();
     9ac:	78 94       	sei
#ifdef TESTING
//     pwm_on();
//     pwm_set_duty_cycle(10);
    while (1) {
/*        pwm_count = TCA0.SINGLE.CNT;*/
        input = uart0_readLine();
     9ae:	0e 94 a4 07 	call	0xf48	; 0xf48 <uart0_readLine>
        cmd_parse(input);
     9b2:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <cmd_parse>
     9b6:	fb cf       	rjmp	.-10     	; 0x9ae <main+0x6>

000009b8 <cmd_exec>:
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
     9b8:	24 e0       	ldi	r18, 0x04	; 4
     9ba:	82 9f       	mul	r24, r18
     9bc:	c0 01       	movw	r24, r0
     9be:	11 24       	eor	r1, r1
     9c0:	fc 01       	movw	r30, r24
     9c2:	eb 55       	subi	r30, 0x5B	; 91
     9c4:	f7 4d       	sbci	r31, 0xD7	; 215
     9c6:	02 80       	ldd	r0, Z+2	; 0x02
     9c8:	f3 81       	ldd	r31, Z+3	; 0x03
     9ca:	e0 2d       	mov	r30, r0
     9cc:	30 97       	sbiw	r30, 0x00	; 0
     9ce:	11 f0       	breq	.+4      	; 0x9d4 <cmd_exec+0x1c>
        retval = cmd_table[index].cmd_func_ptr();
     9d0:	09 95       	icall
     9d2:	08 95       	ret
                int8_t cmd_func();
                Excepted are system commands, which are used to deal with parameter get/set operations and status reports.
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
     9d4:	8e ef       	ldi	r24, 0xFE	; 254
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}
     9d6:	08 95       	ret

000009d8 <param_get>:
        return retval;
    }
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
     9d8:	af 92       	push	r10
     9da:	bf 92       	push	r11
     9dc:	cf 92       	push	r12
     9de:	df 92       	push	r13
     9e0:	ef 92       	push	r14
     9e2:	ff 92       	push	r15
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
     9e8:	cf 93       	push	r28
     9ea:	df 93       	push	r29
     9ec:	5c 01       	movw	r10, r24
     9ee:	8b 01       	movw	r16, r22
     9f0:	0f 2e       	mov	r0, r31
     9f2:	f0 e0       	ldi	r31, 0x00	; 0
     9f4:	cf 2e       	mov	r12, r31
     9f6:	f8 e2       	ldi	r31, 0x28	; 40
     9f8:	df 2e       	mov	r13, r31
     9fa:	f0 2d       	mov	r31, r0
     9fc:	e1 2c       	mov	r14, r1
     9fe:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp((const char *)param_string, (const char *)param_table[i].param) == 0) {
     a00:	e7 01       	movw	r28, r14
     a02:	f6 01       	movw	r30, r12
     a04:	60 81       	ld	r22, Z
     a06:	71 81       	ldd	r23, Z+1	; 0x01
     a08:	c5 01       	movw	r24, r10
     a0a:	0e 94 1c 0a 	call	0x1438	; 0x1438 <strcmp>
     a0e:	89 2b       	or	r24, r25
     a10:	09 f0       	breq	.+2      	; 0xa14 <param_get+0x3c>
     a12:	4a c0       	rjmp	.+148    	; 0xaa8 <param_get+0xd0>
            cli();
     a14:	f8 94       	cli
            switch (param_table[i].size) {                      // cast pointer to the correct data type according to param table size info
     a16:	f7 01       	movw	r30, r14
     a18:	ee 0f       	add	r30, r30
     a1a:	ff 1f       	adc	r31, r31
     a1c:	ee 0f       	add	r30, r30
     a1e:	ff 1f       	adc	r31, r31
     a20:	ee 0d       	add	r30, r14
     a22:	ff 1d       	adc	r31, r15
     a24:	e0 50       	subi	r30, 0x00	; 0
     a26:	f8 4d       	sbci	r31, 0xD8	; 216
     a28:	84 81       	ldd	r24, Z+4	; 0x04
     a2a:	80 31       	cpi	r24, 0x10	; 16
     a2c:	89 f0       	breq	.+34     	; 0xa50 <param_get+0x78>
     a2e:	80 32       	cpi	r24, 0x20	; 32
     a30:	21 f1       	breq	.+72     	; 0xa7a <param_get+0xa2>
     a32:	88 30       	cpi	r24, 0x08	; 8
     a34:	b1 f5       	brne	.+108    	; 0xaa2 <param_get+0xca>
            case 8:
                *param_value = *(uint8_t *)param_table[i].value;
     a36:	02 80       	ldd	r0, Z+2	; 0x02
     a38:	f3 81       	ldd	r31, Z+3	; 0x03
     a3a:	e0 2d       	mov	r30, r0
     a3c:	80 81       	ld	r24, Z
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	b0 e0       	ldi	r27, 0x00	; 0
     a44:	f8 01       	movw	r30, r16
     a46:	80 83       	st	Z, r24
     a48:	91 83       	std	Z+1, r25	; 0x01
     a4a:	a2 83       	std	Z+2, r26	; 0x02
     a4c:	b3 83       	std	Z+3, r27	; 0x03
            	break;
     a4e:	29 c0       	rjmp	.+82     	; 0xaa2 <param_get+0xca>
            case 16:
                *param_value = *(uint16_t *)param_table[i].value;
     a50:	c7 01       	movw	r24, r14
     a52:	88 0f       	add	r24, r24
     a54:	99 1f       	adc	r25, r25
     a56:	88 0f       	add	r24, r24
     a58:	99 1f       	adc	r25, r25
     a5a:	c8 0f       	add	r28, r24
     a5c:	d9 1f       	adc	r29, r25
     a5e:	c0 50       	subi	r28, 0x00	; 0
     a60:	d8 4d       	sbci	r29, 0xD8	; 216
     a62:	ea 81       	ldd	r30, Y+2	; 0x02
     a64:	fb 81       	ldd	r31, Y+3	; 0x03
     a66:	80 81       	ld	r24, Z
     a68:	91 81       	ldd	r25, Z+1	; 0x01
     a6a:	a0 e0       	ldi	r26, 0x00	; 0
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	f8 01       	movw	r30, r16
     a70:	80 83       	st	Z, r24
     a72:	91 83       	std	Z+1, r25	; 0x01
     a74:	a2 83       	std	Z+2, r26	; 0x02
     a76:	b3 83       	std	Z+3, r27	; 0x03
                break;
     a78:	14 c0       	rjmp	.+40     	; 0xaa2 <param_get+0xca>
            case 32:
                *param_value = *(uint32_t *)param_table[i].value;
     a7a:	c7 01       	movw	r24, r14
     a7c:	88 0f       	add	r24, r24
     a7e:	99 1f       	adc	r25, r25
     a80:	88 0f       	add	r24, r24
     a82:	99 1f       	adc	r25, r25
     a84:	c8 0f       	add	r28, r24
     a86:	d9 1f       	adc	r29, r25
     a88:	c0 50       	subi	r28, 0x00	; 0
     a8a:	d8 4d       	sbci	r29, 0xD8	; 216
     a8c:	ea 81       	ldd	r30, Y+2	; 0x02
     a8e:	fb 81       	ldd	r31, Y+3	; 0x03
     a90:	80 81       	ld	r24, Z
     a92:	91 81       	ldd	r25, Z+1	; 0x01
     a94:	a2 81       	ldd	r26, Z+2	; 0x02
     a96:	b3 81       	ldd	r27, Z+3	; 0x03
     a98:	f8 01       	movw	r30, r16
     a9a:	80 83       	st	Z, r24
     a9c:	91 83       	std	Z+1, r25	; 0x01
     a9e:	a2 83       	std	Z+2, r26	; 0x02
     aa0:	b3 83       	std	Z+3, r27	; 0x03
                break;               
            }
            sei();
     aa2:	78 94       	sei
            i = NO_PARAM;                                   // exit loop
            retval = 0;
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	0c c0       	rjmp	.+24     	; 0xac0 <param_get+0xe8>
     aa8:	ff ef       	ldi	r31, 0xFF	; 255
     aaa:	ef 1a       	sub	r14, r31
     aac:	ff 0a       	sbc	r15, r31
     aae:	85 e0       	ldi	r24, 0x05	; 5
     ab0:	c8 0e       	add	r12, r24
     ab2:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     ab4:	e1 e2       	ldi	r30, 0x21	; 33
     ab6:	ee 16       	cp	r14, r30
     ab8:	f1 04       	cpc	r15, r1
     aba:	09 f0       	breq	.+2      	; 0xabe <param_get+0xe6>
     abc:	a1 cf       	rjmp	.-190    	; 0xa00 <param_get+0x28>
     abe:	8c ef       	ldi	r24, 0xFC	; 252
            i = NO_PARAM;                                   // exit loop
            retval = 0;
        }
    }
    return retval;
}
     ac0:	df 91       	pop	r29
     ac2:	cf 91       	pop	r28
     ac4:	1f 91       	pop	r17
     ac6:	0f 91       	pop	r16
     ac8:	ff 90       	pop	r15
     aca:	ef 90       	pop	r14
     acc:	df 90       	pop	r13
     ace:	cf 90       	pop	r12
     ad0:	bf 90       	pop	r11
     ad2:	af 90       	pop	r10
     ad4:	08 95       	ret

00000ad6 <param_set>:

int8_t param_set(char *param_string, void *param_new_val_ptr) {
     ad6:	af 92       	push	r10
     ad8:	bf 92       	push	r11
     ada:	cf 92       	push	r12
     adc:	df 92       	push	r13
     ade:	ef 92       	push	r14
     ae0:	ff 92       	push	r15
     ae2:	0f 93       	push	r16
     ae4:	1f 93       	push	r17
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	5c 01       	movw	r10, r24
     aec:	8b 01       	movw	r16, r22
     aee:	0f 2e       	mov	r0, r31
     af0:	f0 e0       	ldi	r31, 0x00	; 0
     af2:	cf 2e       	mov	r12, r31
     af4:	f8 e2       	ldi	r31, 0x28	; 40
     af6:	df 2e       	mov	r13, r31
     af8:	f0 2d       	mov	r31, r0
     afa:	e1 2c       	mov	r14, r1
     afc:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp(param_string, param_table[i].param) == 0) {
     afe:	e7 01       	movw	r28, r14
     b00:	d6 01       	movw	r26, r12
     b02:	6d 91       	ld	r22, X+
     b04:	7c 91       	ld	r23, X
     b06:	c5 01       	movw	r24, r10
     b08:	0e 94 1c 0a 	call	0x1438	; 0x1438 <strcmp>
     b0c:	89 2b       	or	r24, r25
     b0e:	09 f0       	breq	.+2      	; 0xb12 <param_set+0x3c>
     b10:	44 c0       	rjmp	.+136    	; 0xb9a <param_set+0xc4>
            cli();
     b12:	f8 94       	cli
            switch (param_table[i].size) {                                           // cast pointer to the correct data type according to param table size info
     b14:	f7 01       	movw	r30, r14
     b16:	ee 0f       	add	r30, r30
     b18:	ff 1f       	adc	r31, r31
     b1a:	ee 0f       	add	r30, r30
     b1c:	ff 1f       	adc	r31, r31
     b1e:	ee 0d       	add	r30, r14
     b20:	ff 1d       	adc	r31, r15
     b22:	e0 50       	subi	r30, 0x00	; 0
     b24:	f8 4d       	sbci	r31, 0xD8	; 216
     b26:	84 81       	ldd	r24, Z+4	; 0x04
     b28:	80 31       	cpi	r24, 0x10	; 16
     b2a:	61 f0       	breq	.+24     	; 0xb44 <param_set+0x6e>
     b2c:	80 32       	cpi	r24, 0x20	; 32
     b2e:	e1 f0       	breq	.+56     	; 0xb68 <param_set+0x92>
     b30:	88 30       	cpi	r24, 0x08	; 8
     b32:	81 f5       	brne	.+96     	; 0xb94 <param_set+0xbe>
            case 8:
                *(uint8_t *)param_table[i].value = *(uint8_t *)param_new_val_ptr;
     b34:	02 80       	ldd	r0, Z+2	; 0x02
     b36:	f3 81       	ldd	r31, Z+3	; 0x03
     b38:	e0 2d       	mov	r30, r0
     b3a:	e8 01       	movw	r28, r16
     b3c:	88 81       	ld	r24, Y
     b3e:	80 83       	st	Z, r24
                retval = 0;
     b40:	80 e0       	ldi	r24, 0x00	; 0
            	break;
     b42:	29 c0       	rjmp	.+82     	; 0xb96 <param_set+0xc0>
            case 16:
                *(uint16_t *)param_table[i].value = *(uint16_t *)param_new_val_ptr;
     b44:	c7 01       	movw	r24, r14
     b46:	88 0f       	add	r24, r24
     b48:	99 1f       	adc	r25, r25
     b4a:	88 0f       	add	r24, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	c8 0f       	add	r28, r24
     b50:	d9 1f       	adc	r29, r25
     b52:	c0 50       	subi	r28, 0x00	; 0
     b54:	d8 4d       	sbci	r29, 0xD8	; 216
     b56:	ea 81       	ldd	r30, Y+2	; 0x02
     b58:	fb 81       	ldd	r31, Y+3	; 0x03
     b5a:	d8 01       	movw	r26, r16
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	80 83       	st	Z, r24
     b62:	91 83       	std	Z+1, r25	; 0x01
                retval = 0;
     b64:	80 e0       	ldi	r24, 0x00	; 0
                break;
     b66:	17 c0       	rjmp	.+46     	; 0xb96 <param_set+0xc0>
            case 32:
                *(uint32_t *)param_table[i].value = *(uint32_t *)param_new_val_ptr;
     b68:	c7 01       	movw	r24, r14
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	88 0f       	add	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	c8 0f       	add	r28, r24
     b74:	d9 1f       	adc	r29, r25
     b76:	c0 50       	subi	r28, 0x00	; 0
     b78:	d8 4d       	sbci	r29, 0xD8	; 216
     b7a:	ea 81       	ldd	r30, Y+2	; 0x02
     b7c:	fb 81       	ldd	r31, Y+3	; 0x03
     b7e:	e8 01       	movw	r28, r16
     b80:	88 81       	ld	r24, Y
     b82:	99 81       	ldd	r25, Y+1	; 0x01
     b84:	aa 81       	ldd	r26, Y+2	; 0x02
     b86:	bb 81       	ldd	r27, Y+3	; 0x03
     b88:	80 83       	st	Z, r24
     b8a:	91 83       	std	Z+1, r25	; 0x01
     b8c:	a2 83       	std	Z+2, r26	; 0x02
     b8e:	b3 83       	std	Z+3, r27	; 0x03
                retval = 0;
     b90:	80 e0       	ldi	r24, 0x00	; 0
                break; 
     b92:	01 c0       	rjmp	.+2      	; 0xb96 <param_set+0xc0>
            default:
                retval = -3;                                                // default return value -3 -> invalid value size               
     b94:	8d ef       	ldi	r24, 0xFD	; 253
            }
            sei();
     b96:	78 94       	sei
     b98:	0c c0       	rjmp	.+24     	; 0xbb2 <param_set+0xdc>
     b9a:	df ef       	ldi	r29, 0xFF	; 255
     b9c:	ed 1a       	sub	r14, r29
     b9e:	fd 0a       	sbc	r15, r29
     ba0:	e5 e0       	ldi	r30, 0x05	; 5
     ba2:	ce 0e       	add	r12, r30
     ba4:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_set(char *param_string, void *param_new_val_ptr) {
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     ba6:	f1 e2       	ldi	r31, 0x21	; 33
     ba8:	ef 16       	cp	r14, r31
     baa:	f1 04       	cpc	r15, r1
     bac:	09 f0       	breq	.+2      	; 0xbb0 <param_set+0xda>
     bae:	a7 cf       	rjmp	.-178    	; 0xafe <param_set+0x28>
     bb0:	8c ef       	ldi	r24, 0xFC	; 252
            sei();
            i = NO_PARAM;                                               // exit loop
        }
    }
    return retval;
}
     bb2:	df 91       	pop	r29
     bb4:	cf 91       	pop	r28
     bb6:	1f 91       	pop	r17
     bb8:	0f 91       	pop	r16
     bba:	ff 90       	pop	r15
     bbc:	ef 90       	pop	r14
     bbe:	df 90       	pop	r13
     bc0:	cf 90       	pop	r12
     bc2:	bf 90       	pop	r11
     bc4:	af 90       	pop	r10
     bc6:	08 95       	ret

00000bc8 <cmd_parse>:
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     bc8:	cf 92       	push	r12
     bca:	df 92       	push	r13
     bcc:	ff 92       	push	r15
     bce:	0f 93       	push	r16
     bd0:	1f 93       	push	r17
     bd2:	cf 93       	push	r28
     bd4:	df 93       	push	r29
     bd6:	cd b7       	in	r28, 0x3d	; 61
     bd8:	de b7       	in	r29, 0x3e	; 62
     bda:	28 97       	sbiw	r28, 0x08	; 8
     bdc:	cd bf       	out	0x3d, r28	; 61
     bde:	de bf       	out	0x3e, r29	; 62
     be0:	6c 01       	movw	r12, r24
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
     be2:	65 e7       	ldi	r22, 0x75	; 117
     be4:	7d e5       	ldi	r23, 0x5D	; 93
     be6:	0e 94 1c 0a 	call	0x1438	; 0x1438 <strcmp>
     bea:	89 2b       	or	r24, r25
     bec:	09 f4       	brne	.+2      	; 0xbf0 <cmd_parse+0x28>
     bee:	dd c0       	rjmp	.+442    	; 0xdaa <cmd_parse+0x1e2>
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
     bf0:	6f e3       	ldi	r22, 0x3F	; 63
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	c6 01       	movw	r24, r12
     bf6:	0e 94 11 0a 	call	0x1422	; 0x1422 <strchr>
     bfa:	89 2b       	or	r24, r25
     bfc:	61 f1       	breq	.+88     	; 0xc56 <cmd_parse+0x8e>
        command = "param_get";                      
        param = strtok(string, "?");
     bfe:	66 e7       	ldi	r22, 0x76	; 118
     c00:	7d e5       	ldi	r23, 0x5D	; 93
     c02:	c6 01       	movw	r24, r12
     c04:	0e 94 0c 0a 	call	0x1418	; 0x1418 <strtok>
     c08:	08 2f       	mov	r16, r24
     c0a:	f9 2e       	mov	r15, r25
        is_param_op = 1;
        uint32_t param_val = 0;
     c0c:	19 82       	std	Y+1, r1	; 0x01
     c0e:	1a 82       	std	Y+2, r1	; 0x02
     c10:	1b 82       	std	Y+3, r1	; 0x03
     c12:	1c 82       	std	Y+4, r1	; 0x04
        retval = param_get(param, &param_val);
     c14:	be 01       	movw	r22, r28
     c16:	6f 5f       	subi	r22, 0xFF	; 255
     c18:	7f 4f       	sbci	r23, 0xFF	; 255
     c1a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <param_get>
     c1e:	18 2f       	mov	r17, r24
        if (retval == 0) {
     c20:	81 11       	cpse	r24, r1
     c22:	12 c0       	rjmp	.+36     	; 0xc48 <cmd_parse+0x80>
            printf("%s = %"PRIu32"\r\n", param, param_val);               
     c24:	8c 81       	ldd	r24, Y+4	; 0x04
     c26:	8f 93       	push	r24
     c28:	8b 81       	ldd	r24, Y+3	; 0x03
     c2a:	8f 93       	push	r24
     c2c:	8a 81       	ldd	r24, Y+2	; 0x02
     c2e:	8f 93       	push	r24
     c30:	89 81       	ldd	r24, Y+1	; 0x01
     c32:	8f 93       	push	r24
     c34:	ff 92       	push	r15
     c36:	0f 93       	push	r16
     c38:	85 e7       	ldi	r24, 0x75	; 117
     c3a:	9e e5       	ldi	r25, 0x5E	; 94
     c3c:	9f 93       	push	r25
     c3e:	8f 93       	push	r24
     c40:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
     c44:	cd bf       	out	0x3d, r28	; 61
     c46:	de bf       	out	0x3e, r29	; 62
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
        command = "param_get";                      
     c48:	0f 2e       	mov	r0, r31
     c4a:	f3 ea       	ldi	r31, 0xA3	; 163
     c4c:	cf 2e       	mov	r12, r31
     c4e:	fc e5       	ldi	r31, 0x5C	; 92
     c50:	df 2e       	mov	r13, r31
     c52:	f0 2d       	mov	r31, r0
     c54:	64 c0       	rjmp	.+200    	; 0xd1e <cmd_parse+0x156>
        if (retval == 0) {
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
     c56:	6d e3       	ldi	r22, 0x3D	; 61
     c58:	70 e0       	ldi	r23, 0x00	; 0
     c5a:	c6 01       	movw	r24, r12
     c5c:	0e 94 11 0a 	call	0x1422	; 0x1422 <strchr>
     c60:	89 2b       	or	r24, r25
     c62:	09 f4       	brne	.+2      	; 0xc66 <cmd_parse+0x9e>
     c64:	a8 c0       	rjmp	.+336    	; 0xdb6 <cmd_parse+0x1ee>
        command = "param_set";
        is_param_op = 1;
        param = strtok(string, "=");
     c66:	68 e7       	ldi	r22, 0x78	; 120
     c68:	7d e5       	ldi	r23, 0x5D	; 93
     c6a:	c6 01       	movw	r24, r12
     c6c:	0e 94 0c 0a 	call	0x1418	; 0x1418 <strtok>
     c70:	08 2f       	mov	r16, r24
     c72:	f9 2e       	mov	r15, r25
        char *str_value = strtok(NULL, "=");
     c74:	68 e7       	ldi	r22, 0x78	; 120
     c76:	7d e5       	ldi	r23, 0x5D	; 93
     c78:	80 e0       	ldi	r24, 0x00	; 0
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	0e 94 0c 0a 	call	0x1418	; 0x1418 <strtok>
        uint32_t value = (uint32_t)strtoul(str_value, NULL, 0);
     c80:	40 e0       	ldi	r20, 0x00	; 0
     c82:	50 e0       	ldi	r21, 0x00	; 0
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	0e 94 0e 09 	call	0x121c	; 0x121c <strtoul>
     c8c:	6d 83       	std	Y+5, r22	; 0x05
     c8e:	7e 83       	std	Y+6, r23	; 0x06
     c90:	8f 83       	std	Y+7, r24	; 0x07
     c92:	98 87       	std	Y+8, r25	; 0x08
        retval = param_set(param, &value);
     c94:	be 01       	movw	r22, r28
     c96:	6b 5f       	subi	r22, 0xFB	; 251
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	80 2f       	mov	r24, r16
     c9c:	9f 2d       	mov	r25, r15
     c9e:	0e 94 6b 05 	call	0xad6	; 0xad6 <param_set>
     ca2:	18 2f       	mov	r17, r24
        if (retval == 0) {
     ca4:	81 11       	cpse	r24, r1
     ca6:	1d c0       	rjmp	.+58     	; 0xce2 <cmd_parse+0x11a>
            uint32_t param_val = 0;
     ca8:	19 82       	std	Y+1, r1	; 0x01
     caa:	1a 82       	std	Y+2, r1	; 0x02
     cac:	1b 82       	std	Y+3, r1	; 0x03
     cae:	1c 82       	std	Y+4, r1	; 0x04
            param_get(param, &param_val);        
     cb0:	be 01       	movw	r22, r28
     cb2:	6f 5f       	subi	r22, 0xFF	; 255
     cb4:	7f 4f       	sbci	r23, 0xFF	; 255
     cb6:	80 2f       	mov	r24, r16
     cb8:	9f 2d       	mov	r25, r15
     cba:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <param_get>
            printf("%s = %"PRIu32"\r\n", param, param_val);
     cbe:	8c 81       	ldd	r24, Y+4	; 0x04
     cc0:	8f 93       	push	r24
     cc2:	8b 81       	ldd	r24, Y+3	; 0x03
     cc4:	8f 93       	push	r24
     cc6:	8a 81       	ldd	r24, Y+2	; 0x02
     cc8:	8f 93       	push	r24
     cca:	89 81       	ldd	r24, Y+1	; 0x01
     ccc:	8f 93       	push	r24
     cce:	ff 92       	push	r15
     cd0:	0f 93       	push	r16
     cd2:	85 e7       	ldi	r24, 0x75	; 117
     cd4:	9e e5       	ldi	r25, 0x5E	; 94
     cd6:	9f 93       	push	r25
     cd8:	8f 93       	push	r24
     cda:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
     cde:	cd bf       	out	0x3d, r28	; 61
     ce0:	de bf       	out	0x3e, r29	; 62
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
        command = "param_set";
     ce2:	0f 2e       	mov	r0, r31
     ce4:	fd ea       	ldi	r31, 0xAD	; 173
     ce6:	cf 2e       	mov	r12, r31
     ce8:	fc e5       	ldi	r31, 0x5C	; 92
     cea:	df 2e       	mov	r13, r31
     cec:	f0 2d       	mov	r31, r0
     cee:	17 c0       	rjmp	.+46     	; 0xd1e <cmd_parse+0x156>
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
            if (strcmp(command, cmd_table[i].cmd) == 0) {
     cf0:	f8 01       	movw	r30, r16
     cf2:	60 81       	ld	r22, Z
     cf4:	71 81       	ldd	r23, Z+1	; 0x01
     cf6:	c6 01       	movw	r24, r12
     cf8:	0e 94 1c 0a 	call	0x1438	; 0x1438 <strcmp>
     cfc:	89 2b       	or	r24, r25
     cfe:	39 f4       	brne	.+14     	; 0xd0e <cmd_parse+0x146>
                retval = cmd_exec(i);
     d00:	8f 2d       	mov	r24, r15
     d02:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <cmd_exec>
     d06:	18 2f       	mov	r17, r24
     d08:	00 e0       	ldi	r16, 0x00	; 0
     d0a:	f1 2c       	mov	r15, r1
     d0c:	08 c0       	rjmp	.+16     	; 0xd1e <cmd_parse+0x156>
            param_get(param, &param_val);        
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
     d0e:	f3 94       	inc	r15
     d10:	0c 5f       	subi	r16, 0xFC	; 252
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
     d14:	f9 e1       	ldi	r31, 0x19	; 25
     d16:	ff 12       	cpse	r15, r31
     d18:	eb cf       	rjmp	.-42     	; 0xcf0 <cmd_parse+0x128>
     d1a:	1f ef       	ldi	r17, 0xFF	; 255
     d1c:	0d c0       	rjmp	.+26     	; 0xd38 <cmd_parse+0x170>
                i = NO_CMD;                             // exit loop
            }
	    } 
    }
    
    switch (retval) {                                   // select appropriate feedback to return
     d1e:	1e 3f       	cpi	r17, 0xFE	; 254
     d20:	c1 f0       	breq	.+48     	; 0xd52 <cmd_parse+0x18a>
     d22:	2c f4       	brge	.+10     	; 0xd2e <cmd_parse+0x166>
     d24:	1c 3f       	cpi	r17, 0xFC	; 252
     d26:	79 f1       	breq	.+94     	; 0xd86 <cmd_parse+0x1be>
     d28:	1d 3f       	cpi	r17, 0xFD	; 253
     d2a:	01 f1       	breq	.+64     	; 0xd6c <cmd_parse+0x1a4>
     d2c:	48 c0       	rjmp	.+144    	; 0xdbe <cmd_parse+0x1f6>
     d2e:	1f 3f       	cpi	r17, 0xFF	; 255
     d30:	19 f0       	breq	.+6      	; 0xd38 <cmd_parse+0x170>
     d32:	11 23       	and	r17, r17
     d34:	a9 f1       	breq	.+106    	; 0xda0 <cmd_parse+0x1d8>
     d36:	43 c0       	rjmp	.+134    	; 0xdbe <cmd_parse+0x1f6>
    case -1:
        printf("FAIL. Command %s not found in command table!\r\n", command);
     d38:	df 92       	push	r13
     d3a:	cf 92       	push	r12
     d3c:	8a e7       	ldi	r24, 0x7A	; 122
     d3e:	9d e5       	ldi	r25, 0x5D	; 93
     d40:	9f 93       	push	r25
     d42:	8f 93       	push	r24
     d44:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
    	return retval;
     d48:	0f 90       	pop	r0
     d4a:	0f 90       	pop	r0
     d4c:	0f 90       	pop	r0
     d4e:	0f 90       	pop	r0
     d50:	36 c0       	rjmp	.+108    	; 0xdbe <cmd_parse+0x1f6>
    case -2:
        printf("FAIL. Failed to execute command %s!\r\n", command);
     d52:	df 92       	push	r13
     d54:	cf 92       	push	r12
     d56:	89 ea       	ldi	r24, 0xA9	; 169
     d58:	9d e5       	ldi	r25, 0x5D	; 93
     d5a:	9f 93       	push	r25
     d5c:	8f 93       	push	r24
     d5e:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
        return retval;
     d62:	0f 90       	pop	r0
     d64:	0f 90       	pop	r0
     d66:	0f 90       	pop	r0
     d68:	0f 90       	pop	r0
     d6a:	29 c0       	rjmp	.+82     	; 0xdbe <cmd_parse+0x1f6>
    case -3:
        printf("FAIL. Invalid options/parameters for command %s!\r\n", command);
     d6c:	df 92       	push	r13
     d6e:	cf 92       	push	r12
     d70:	8f ec       	ldi	r24, 0xCF	; 207
     d72:	9d e5       	ldi	r25, 0x5D	; 93
     d74:	9f 93       	push	r25
     d76:	8f 93       	push	r24
     d78:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
        return retval;
     d7c:	0f 90       	pop	r0
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	1c c0       	rjmp	.+56     	; 0xdbe <cmd_parse+0x1f6>
    case -4:
        printf("FAIL. Parameter %s not found in parameter table!\r\n", param);
     d86:	ff 92       	push	r15
     d88:	0f 93       	push	r16
     d8a:	82 e0       	ldi	r24, 0x02	; 2
     d8c:	9e e5       	ldi	r25, 0x5E	; 94
     d8e:	9f 93       	push	r25
     d90:	8f 93       	push	r24
     d92:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
        return retval;
     d96:	0f 90       	pop	r0
     d98:	0f 90       	pop	r0
     d9a:	0f 90       	pop	r0
     d9c:	0f 90       	pop	r0
     d9e:	0f c0       	rjmp	.+30     	; 0xdbe <cmd_parse+0x1f6>
    case 0:
        printf("OK.\r\n");
     da0:	85 e3       	ldi	r24, 0x35	; 53
     da2:	9e e5       	ldi	r25, 0x5E	; 94
     da4:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <puts>
        return retval;
     da8:	0a c0       	rjmp	.+20     	; 0xdbe <cmd_parse+0x1f6>
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
     daa:	0f 2e       	mov	r0, r31
     dac:	fc e9       	ldi	r31, 0x9C	; 156
     dae:	cf 2e       	mov	r12, r31
     db0:	fc e5       	ldi	r31, 0x5C	; 92
     db2:	df 2e       	mov	r13, r31
     db4:	f0 2d       	mov	r31, r0
     db6:	05 ea       	ldi	r16, 0xA5	; 165
     db8:	18 e2       	ldi	r17, 0x28	; 40
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     dba:	f1 2c       	mov	r15, r1
     dbc:	99 cf       	rjmp	.-206    	; 0xcf0 <cmd_parse+0x128>
    case 0:
        printf("OK.\r\n");
        return retval;
    }
    return retval;
}
     dbe:	81 2f       	mov	r24, r17
     dc0:	28 96       	adiw	r28, 0x08	; 8
     dc2:	cd bf       	out	0x3d, r28	; 61
     dc4:	de bf       	out	0x3e, r29	; 62
     dc6:	df 91       	pop	r29
     dc8:	cf 91       	pop	r28
     dca:	1f 91       	pop	r17
     dcc:	0f 91       	pop	r16
     dce:	ff 90       	pop	r15
     dd0:	df 90       	pop	r13
     dd2:	cf 90       	pop	r12
     dd4:	08 95       	ret

00000dd6 <sys_status>:
        }
    }
    return retval;
}

int8_t sys_status() {
     dd6:	cf 92       	push	r12
     dd8:	df 92       	push	r13
     dda:	ef 92       	push	r14
     ddc:	ff 92       	push	r15
     dde:	0f 93       	push	r16
     de0:	1f 93       	push	r17
     de2:	cf 93       	push	r28
     de4:	df 93       	push	r29
     de6:	00 d0       	rcall	.+0      	; 0xde8 <sys_status+0x12>
     de8:	00 d0       	rcall	.+0      	; 0xdea <sys_status+0x14>
     dea:	cd b7       	in	r28, 0x3d	; 61
     dec:	de b7       	in	r29, 0x3e	; 62
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
     dee:	8a e3       	ldi	r24, 0x3A	; 58
     df0:	9e e5       	ldi	r25, 0x5E	; 94
     df2:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <puts>
     df6:	05 ea       	ldi	r16, 0xA5	; 165
     df8:	18 e2       	ldi	r17, 0x28	; 40
     dfa:	0f 2e       	mov	r0, r31
     dfc:	f9 e0       	ldi	r31, 0x09	; 9
     dfe:	ef 2e       	mov	r14, r31
     e00:	f9 e2       	ldi	r31, 0x29	; 41
     e02:	ff 2e       	mov	r15, r31
     e04:	f0 2d       	mov	r31, r0
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
     e06:	0f 2e       	mov	r0, r31
     e08:	f1 e5       	ldi	r31, 0x51	; 81
     e0a:	cf 2e       	mov	r12, r31
     e0c:	fe e5       	ldi	r31, 0x5E	; 94
     e0e:	df 2e       	mov	r13, r31
     e10:	f0 2d       	mov	r31, r0
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
     e12:	d8 01       	movw	r26, r16
     e14:	ed 91       	ld	r30, X+
     e16:	fc 91       	ld	r31, X
        if (strcmp(cmd, "\0") != 0) {
     e18:	80 81       	ld	r24, Z
     e1a:	88 23       	and	r24, r24
     e1c:	51 f0       	breq	.+20     	; 0xe32 <sys_status+0x5c>
            printf("$ %s\r\n", cmd);
     e1e:	ff 93       	push	r31
     e20:	ef 93       	push	r30
     e22:	df 92       	push	r13
     e24:	cf 92       	push	r12
     e26:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
     e2a:	0f 90       	pop	r0
     e2c:	0f 90       	pop	r0
     e2e:	0f 90       	pop	r0
     e30:	0f 90       	pop	r0
     e32:	0c 5f       	subi	r16, 0xFC	; 252
     e34:	1f 4f       	sbci	r17, 0xFF	; 255
    return retval;
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
     e36:	0e 15       	cp	r16, r14
     e38:	1f 05       	cpc	r17, r15
     e3a:	59 f7       	brne	.-42     	; 0xe12 <sys_status+0x3c>
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
     e3c:	88 e5       	ldi	r24, 0x58	; 88
     e3e:	9e e5       	ldi	r25, 0x5E	; 94
     e40:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <puts>
     e44:	0f 2e       	mov	r0, r31
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	ef 2e       	mov	r14, r31
     e4a:	f8 e2       	ldi	r31, 0x28	; 40
     e4c:	ff 2e       	mov	r15, r31
     e4e:	f0 2d       	mov	r31, r0
     e50:	00 e0       	ldi	r16, 0x00	; 0
     e52:	10 e0       	ldi	r17, 0x00	; 0
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     e54:	0f 2e       	mov	r0, r31
     e56:	ff e6       	ldi	r31, 0x6F	; 111
     e58:	cf 2e       	mov	r12, r31
     e5a:	fe e5       	ldi	r31, 0x5E	; 94
     e5c:	df 2e       	mov	r13, r31
     e5e:	f0 2d       	mov	r31, r0
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
     e60:	19 82       	std	Y+1, r1	; 0x01
     e62:	1a 82       	std	Y+2, r1	; 0x02
     e64:	1b 82       	std	Y+3, r1	; 0x03
     e66:	1c 82       	std	Y+4, r1	; 0x04
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
     e68:	d7 01       	movw	r26, r14
     e6a:	ed 91       	ld	r30, X+
     e6c:	fc 91       	ld	r31, X
     e6e:	80 81       	ld	r24, Z
     e70:	88 23       	and	r24, r24
     e72:	d9 f0       	breq	.+54     	; 0xeaa <sys_status+0xd4>
            param_get(param_table[i].param, &param_value);
     e74:	be 01       	movw	r22, r28
     e76:	6f 5f       	subi	r22, 0xFF	; 255
     e78:	7f 4f       	sbci	r23, 0xFF	; 255
     e7a:	cf 01       	movw	r24, r30
     e7c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <param_get>
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     e80:	8c 81       	ldd	r24, Y+4	; 0x04
     e82:	8f 93       	push	r24
     e84:	8b 81       	ldd	r24, Y+3	; 0x03
     e86:	8f 93       	push	r24
     e88:	8a 81       	ldd	r24, Y+2	; 0x02
     e8a:	8f 93       	push	r24
     e8c:	89 81       	ldd	r24, Y+1	; 0x01
     e8e:	8f 93       	push	r24
     e90:	f7 01       	movw	r30, r14
     e92:	81 81       	ldd	r24, Z+1	; 0x01
     e94:	8f 93       	push	r24
     e96:	80 81       	ld	r24, Z
     e98:	8f 93       	push	r24
     e9a:	1f 93       	push	r17
     e9c:	0f 93       	push	r16
     e9e:	df 92       	push	r13
     ea0:	cf 92       	push	r12
     ea2:	0e 94 4c 0a 	call	0x1498	; 0x1498 <printf>
     ea6:	cd bf       	out	0x3d, r28	; 61
     ea8:	de bf       	out	0x3e, r29	; 62
     eaa:	0f 5f       	subi	r16, 0xFF	; 255
     eac:	1f 4f       	sbci	r17, 0xFF	; 255
     eae:	95 e0       	ldi	r25, 0x05	; 5
     eb0:	e9 0e       	add	r14, r25
     eb2:	f1 1c       	adc	r15, r1
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     eb4:	01 32       	cpi	r16, 0x21	; 33
     eb6:	11 05       	cpc	r17, r1
     eb8:	99 f6       	brne	.-90     	; 0xe60 <sys_status+0x8a>
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
        }

    }
    printf("$ Status message end #\r\n");
     eba:	80 e8       	ldi	r24, 0x80	; 128
     ebc:	9e e5       	ldi	r25, 0x5E	; 94
     ebe:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <puts>
    return 0;
     ec2:	80 e0       	ldi	r24, 0x00	; 0
     ec4:	24 96       	adiw	r28, 0x04	; 4
     ec6:	cd bf       	out	0x3d, r28	; 61
     ec8:	de bf       	out	0x3e, r29	; 62
     eca:	df 91       	pop	r29
     ecc:	cf 91       	pop	r28
     ece:	1f 91       	pop	r17
     ed0:	0f 91       	pop	r16
     ed2:	ff 90       	pop	r15
     ed4:	ef 90       	pop	r14
     ed6:	df 90       	pop	r13
     ed8:	cf 90       	pop	r12
     eda:	08 95       	ret

00000edc <uart0_printChar>:
    USART1.TXDATAL = c;
    while (!(USART1.STATUS & USART_DREIF_bm)) {     // Check for completed transmission
        ;
    }
    /* Return to receiver mode */
    PORTC.OUTCLR = PIN3_bm;
     edc:	e0 e0       	ldi	r30, 0x00	; 0
     ede:	f8 e0       	ldi	r31, 0x08	; 8
     ee0:	94 81       	ldd	r25, Z+4	; 0x04
     ee2:	95 ff       	sbrs	r25, 5
     ee4:	fd cf       	rjmp	.-6      	; 0xee0 <uart0_printChar+0x4>
     ee6:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f4802>
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	08 95       	ret

00000ef0 <uart_init>:
    Function definitions
    *************************************************/
void uart_init() {
    /* Setup stream for printf() */  
    #if USART_SEL == 0
        stdout = &uart0_stream;
     ef0:	84 e1       	ldi	r24, 0x14	; 20
     ef2:	99 e2       	ldi	r25, 0x29	; 41
     ef4:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <__iob+0x2>
     ef8:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <__iob+0x3>
        stdout = &uart1_stream;
    #endif
    
    /* USART0 Config (Main comms and debug interface) */
    /* Baud rate */
    USART0.BAUD = (uint16_t)USART_BAUD_RATE(BAUD0);
     efc:	e0 e0       	ldi	r30, 0x00	; 0
     efe:	f8 e0       	ldi	r31, 0x08	; 8
     f00:	8b e5       	ldi	r24, 0x5B	; 91
     f02:	91 e0       	ldi	r25, 0x01	; 1
     f04:	80 87       	std	Z+8, r24	; 0x08
     f06:	91 87       	std	Z+9, r25	; 0x09
    /* Enable interrupts */
    USART0.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm);
     f08:	85 81       	ldd	r24, Z+5	; 0x05
     f0a:	80 6e       	ori	r24, 0xE0	; 224
     f0c:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */
    USART0.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);
     f0e:	86 81       	ldd	r24, Z+6	; 0x06
     f10:	80 6c       	ori	r24, 0xC0	; 192
     f12:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PA0) to output, RX(PA1) to input */
    PORTA.DIRSET = PIN0_bm;
     f14:	e0 e0       	ldi	r30, 0x00	; 0
     f16:	f4 e0       	ldi	r31, 0x04	; 4
     f18:	21 e0       	ldi	r18, 0x01	; 1
     f1a:	21 83       	std	Z+1, r18	; 0x01
    PORTA.DIRCLR = PIN1_bm;
     f1c:	92 e0       	ldi	r25, 0x02	; 2
     f1e:	92 83       	std	Z+2, r25	; 0x02
                                               

    
    /* USART1 Config (RS485 interface) */
    /* Baud rate */
    USART1.BAUD = (uint16_t)USART_BAUD_RATE(BAUD1);
     f20:	e0 e2       	ldi	r30, 0x20	; 32
     f22:	f8 e0       	ldi	r31, 0x08	; 8
     f24:	47 e4       	ldi	r20, 0x47	; 71
     f26:	50 e1       	ldi	r21, 0x10	; 16
     f28:	40 87       	std	Z+8, r20	; 0x08
     f2a:	51 87       	std	Z+9, r21	; 0x09
    /* Enable interrupts */
    USART1.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm | USART_RS485_EXT_gc); 
     f2c:	85 81       	ldd	r24, Z+5	; 0x05
     f2e:	81 6e       	ori	r24, 0xE1	; 225
     f30:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */    
    USART1.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);   
     f32:	86 81       	ldd	r24, Z+6	; 0x06
     f34:	80 6c       	ori	r24, 0xC0	; 192
     f36:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PC0) and XDIR(PC3) to output, RX(PC1) to input. XDIR low ->  Receiver mode */                     
    PORTC.DIRSET = PIN0_bm;                                              
     f38:	e0 e4       	ldi	r30, 0x40	; 64
     f3a:	f4 e0       	ldi	r31, 0x04	; 4
     f3c:	21 83       	std	Z+1, r18	; 0x01
    PORTC.DIRCLR = PIN1_bm;                                                
     f3e:	92 83       	std	Z+2, r25	; 0x02
    PORTC.DIRSET = PIN3_bm;                                                
     f40:	88 e0       	ldi	r24, 0x08	; 8
     f42:	81 83       	std	Z+1, r24	; 0x01
    PORTC.OUTCLR = PIN3_bm;
     f44:	86 83       	std	Z+6, r24	; 0x06
     f46:	08 95       	ret

00000f48 <uart0_readLine>:
    }
    return USART0.RXDATAL;
}

char * uart0_readLine() {                             // Read a single line from uart0 RX
    uint8_t index = 0;
     f48:	a0 e0       	ldi	r26, 0x00	; 0
    uart0_sendChar(c);
    return 0;
}

static uint8_t uart0_readChar() {
    while (!(USART0.STATUS & USART_RXCIF_bm)) {
     f4a:	e0 e0       	ldi	r30, 0x00	; 0
     f4c:	f8 e0       	ldi	r31, 0x08	; 8
     f4e:	84 81       	ldd	r24, Z+4	; 0x04
     f50:	88 23       	and	r24, r24
     f52:	ec f7       	brge	.-6      	; 0xf4e <uart0_readLine+0x6>
        ;
    }
    return USART0.RXDATAL;
     f54:	80 81       	ld	r24, Z
    uint8_t index = 0;
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
     f56:	8a 30       	cpi	r24, 0x0A	; 10
     f58:	09 f1       	breq	.+66     	; 0xf9c <uart0_readLine+0x54>
     f5a:	8d 30       	cpi	r24, 0x0D	; 13
     f5c:	c1 f3       	breq	.-16     	; 0xf4e <uart0_readLine+0x6>
            buffer[index++] = c;
     f5e:	91 e0       	ldi	r25, 0x01	; 1
     f60:	9a 0f       	add	r25, r26
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	a4 5b       	subi	r26, 0xB4	; 180
     f66:	b6 4d       	sbci	r27, 0xD6	; 214
     f68:	8c 93       	st	X, r24
            if (index > MAX_LINE_LEN) {
     f6a:	9d 33       	cpi	r25, 0x3D	; 61
     f6c:	a8 f0       	brcs	.+42     	; 0xf98 <uart0_readLine+0x50>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
     f6e:	1f 92       	push	r1
     f70:	8c e3       	ldi	r24, 0x3C	; 60
     f72:	8f 93       	push	r24
     f74:	28 e9       	ldi	r18, 0x98	; 152
     f76:	3e e5       	ldi	r19, 0x5E	; 94
     f78:	3f 93       	push	r19
     f7a:	2f 93       	push	r18
     f7c:	1f 92       	push	r1
     f7e:	8f 93       	push	r24
     f80:	8c e4       	ldi	r24, 0x4C	; 76
     f82:	99 e2       	ldi	r25, 0x29	; 41
     f84:	9f 93       	push	r25
     f86:	8f 93       	push	r24
     f88:	0e 94 92 0a 	call	0x1524	; 0x1524 <snprintf>
                return buffer;
     f8c:	8d b7       	in	r24, 0x3d	; 61
     f8e:	9e b7       	in	r25, 0x3e	; 62
     f90:	08 96       	adiw	r24, 0x08	; 8
     f92:	8d bf       	out	0x3d, r24	; 61
     f94:	9e bf       	out	0x3e, r25	; 62
     f96:	06 c0       	rjmp	.+12     	; 0xfa4 <uart0_readLine+0x5c>
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
            buffer[index++] = c;
     f98:	a9 2f       	mov	r26, r25
     f9a:	d9 cf       	rjmp	.-78     	; 0xf4e <uart0_readLine+0x6>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
                return buffer;
            }
        }        
        if (c == '\n') {
            buffer[index] = '\0';
     f9c:	b0 e0       	ldi	r27, 0x00	; 0
     f9e:	a4 5b       	subi	r26, 0xB4	; 180
     fa0:	b6 4d       	sbci	r27, 0xD6	; 214
     fa2:	1c 92       	st	X, r1
            index = 0;
            return buffer;
        }
    }
}     
     fa4:	8c e4       	ldi	r24, 0x4C	; 76
     fa6:	99 e2       	ldi	r25, 0x29	; 41
     fa8:	08 95       	ret

00000faa <__fixunssfsi>:
     faa:	0e 94 49 08 	call	0x1092	; 0x1092 <__fp_splitA>
     fae:	88 f0       	brcs	.+34     	; 0xfd2 <__fixunssfsi+0x28>
     fb0:	9f 57       	subi	r25, 0x7F	; 127
     fb2:	98 f0       	brcs	.+38     	; 0xfda <__fixunssfsi+0x30>
     fb4:	b9 2f       	mov	r27, r25
     fb6:	99 27       	eor	r25, r25
     fb8:	b7 51       	subi	r27, 0x17	; 23
     fba:	b0 f0       	brcs	.+44     	; 0xfe8 <__fixunssfsi+0x3e>
     fbc:	e1 f0       	breq	.+56     	; 0xff6 <__fixunssfsi+0x4c>
     fbe:	66 0f       	add	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	88 1f       	adc	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	1a f0       	brmi	.+6      	; 0xfce <__fixunssfsi+0x24>
     fc8:	ba 95       	dec	r27
     fca:	c9 f7       	brne	.-14     	; 0xfbe <__fixunssfsi+0x14>
     fcc:	14 c0       	rjmp	.+40     	; 0xff6 <__fixunssfsi+0x4c>
     fce:	b1 30       	cpi	r27, 0x01	; 1
     fd0:	91 f0       	breq	.+36     	; 0xff6 <__fixunssfsi+0x4c>
     fd2:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__fp_zero>
     fd6:	b1 e0       	ldi	r27, 0x01	; 1
     fd8:	08 95       	ret
     fda:	0c 94 63 08 	jmp	0x10c6	; 0x10c6 <__fp_zero>
     fde:	67 2f       	mov	r22, r23
     fe0:	78 2f       	mov	r23, r24
     fe2:	88 27       	eor	r24, r24
     fe4:	b8 5f       	subi	r27, 0xF8	; 248
     fe6:	39 f0       	breq	.+14     	; 0xff6 <__fixunssfsi+0x4c>
     fe8:	b9 3f       	cpi	r27, 0xF9	; 249
     fea:	cc f3       	brlt	.-14     	; 0xfde <__fixunssfsi+0x34>
     fec:	86 95       	lsr	r24
     fee:	77 95       	ror	r23
     ff0:	67 95       	ror	r22
     ff2:	b3 95       	inc	r27
     ff4:	d9 f7       	brne	.-10     	; 0xfec <__fixunssfsi+0x42>
     ff6:	3e f4       	brtc	.+14     	; 0x1006 <__fixunssfsi+0x5c>
     ff8:	90 95       	com	r25
     ffa:	80 95       	com	r24
     ffc:	70 95       	com	r23
     ffe:	61 95       	neg	r22
    1000:	7f 4f       	sbci	r23, 0xFF	; 255
    1002:	8f 4f       	sbci	r24, 0xFF	; 255
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	08 95       	ret

00001008 <__floatunsisf>:
    1008:	e8 94       	clt
    100a:	09 c0       	rjmp	.+18     	; 0x101e <__floatsisf+0x12>

0000100c <__floatsisf>:
    100c:	97 fb       	bst	r25, 7
    100e:	3e f4       	brtc	.+14     	; 0x101e <__floatsisf+0x12>
    1010:	90 95       	com	r25
    1012:	80 95       	com	r24
    1014:	70 95       	com	r23
    1016:	61 95       	neg	r22
    1018:	7f 4f       	sbci	r23, 0xFF	; 255
    101a:	8f 4f       	sbci	r24, 0xFF	; 255
    101c:	9f 4f       	sbci	r25, 0xFF	; 255
    101e:	99 23       	and	r25, r25
    1020:	a9 f0       	breq	.+42     	; 0x104c <__floatsisf+0x40>
    1022:	f9 2f       	mov	r31, r25
    1024:	96 e9       	ldi	r25, 0x96	; 150
    1026:	bb 27       	eor	r27, r27
    1028:	93 95       	inc	r25
    102a:	f6 95       	lsr	r31
    102c:	87 95       	ror	r24
    102e:	77 95       	ror	r23
    1030:	67 95       	ror	r22
    1032:	b7 95       	ror	r27
    1034:	f1 11       	cpse	r31, r1
    1036:	f8 cf       	rjmp	.-16     	; 0x1028 <__floatsisf+0x1c>
    1038:	fa f4       	brpl	.+62     	; 0x1078 <__floatsisf+0x6c>
    103a:	bb 0f       	add	r27, r27
    103c:	11 f4       	brne	.+4      	; 0x1042 <__floatsisf+0x36>
    103e:	60 ff       	sbrs	r22, 0
    1040:	1b c0       	rjmp	.+54     	; 0x1078 <__floatsisf+0x6c>
    1042:	6f 5f       	subi	r22, 0xFF	; 255
    1044:	7f 4f       	sbci	r23, 0xFF	; 255
    1046:	8f 4f       	sbci	r24, 0xFF	; 255
    1048:	9f 4f       	sbci	r25, 0xFF	; 255
    104a:	16 c0       	rjmp	.+44     	; 0x1078 <__floatsisf+0x6c>
    104c:	88 23       	and	r24, r24
    104e:	11 f0       	breq	.+4      	; 0x1054 <__floatsisf+0x48>
    1050:	96 e9       	ldi	r25, 0x96	; 150
    1052:	11 c0       	rjmp	.+34     	; 0x1076 <__floatsisf+0x6a>
    1054:	77 23       	and	r23, r23
    1056:	21 f0       	breq	.+8      	; 0x1060 <__floatsisf+0x54>
    1058:	9e e8       	ldi	r25, 0x8E	; 142
    105a:	87 2f       	mov	r24, r23
    105c:	76 2f       	mov	r23, r22
    105e:	05 c0       	rjmp	.+10     	; 0x106a <__floatsisf+0x5e>
    1060:	66 23       	and	r22, r22
    1062:	71 f0       	breq	.+28     	; 0x1080 <__floatsisf+0x74>
    1064:	96 e8       	ldi	r25, 0x86	; 134
    1066:	86 2f       	mov	r24, r22
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	60 e0       	ldi	r22, 0x00	; 0
    106c:	2a f0       	brmi	.+10     	; 0x1078 <__floatsisf+0x6c>
    106e:	9a 95       	dec	r25
    1070:	66 0f       	add	r22, r22
    1072:	77 1f       	adc	r23, r23
    1074:	88 1f       	adc	r24, r24
    1076:	da f7       	brpl	.-10     	; 0x106e <__floatsisf+0x62>
    1078:	88 0f       	add	r24, r24
    107a:	96 95       	lsr	r25
    107c:	87 95       	ror	r24
    107e:	97 f9       	bld	r25, 7
    1080:	08 95       	ret

00001082 <__fp_split3>:
    1082:	57 fd       	sbrc	r21, 7
    1084:	90 58       	subi	r25, 0x80	; 128
    1086:	44 0f       	add	r20, r20
    1088:	55 1f       	adc	r21, r21
    108a:	59 f0       	breq	.+22     	; 0x10a2 <__fp_splitA+0x10>
    108c:	5f 3f       	cpi	r21, 0xFF	; 255
    108e:	71 f0       	breq	.+28     	; 0x10ac <__fp_splitA+0x1a>
    1090:	47 95       	ror	r20

00001092 <__fp_splitA>:
    1092:	88 0f       	add	r24, r24
    1094:	97 fb       	bst	r25, 7
    1096:	99 1f       	adc	r25, r25
    1098:	61 f0       	breq	.+24     	; 0x10b2 <__fp_splitA+0x20>
    109a:	9f 3f       	cpi	r25, 0xFF	; 255
    109c:	79 f0       	breq	.+30     	; 0x10bc <__fp_splitA+0x2a>
    109e:	87 95       	ror	r24
    10a0:	08 95       	ret
    10a2:	12 16       	cp	r1, r18
    10a4:	13 06       	cpc	r1, r19
    10a6:	14 06       	cpc	r1, r20
    10a8:	55 1f       	adc	r21, r21
    10aa:	f2 cf       	rjmp	.-28     	; 0x1090 <__fp_split3+0xe>
    10ac:	46 95       	lsr	r20
    10ae:	f1 df       	rcall	.-30     	; 0x1092 <__fp_splitA>
    10b0:	08 c0       	rjmp	.+16     	; 0x10c2 <__fp_splitA+0x30>
    10b2:	16 16       	cp	r1, r22
    10b4:	17 06       	cpc	r1, r23
    10b6:	18 06       	cpc	r1, r24
    10b8:	99 1f       	adc	r25, r25
    10ba:	f1 cf       	rjmp	.-30     	; 0x109e <__fp_splitA+0xc>
    10bc:	86 95       	lsr	r24
    10be:	71 05       	cpc	r23, r1
    10c0:	61 05       	cpc	r22, r1
    10c2:	08 94       	sec
    10c4:	08 95       	ret

000010c6 <__fp_zero>:
    10c6:	e8 94       	clt

000010c8 <__fp_szero>:
    10c8:	bb 27       	eor	r27, r27
    10ca:	66 27       	eor	r22, r22
    10cc:	77 27       	eor	r23, r23
    10ce:	cb 01       	movw	r24, r22
    10d0:	97 f9       	bld	r25, 7
    10d2:	08 95       	ret

000010d4 <__mulsf3>:
    10d4:	0e 94 7d 08 	call	0x10fa	; 0x10fa <__mulsf3x>
    10d8:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <__fp_round>
    10dc:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_pscA>
    10e0:	38 f0       	brcs	.+14     	; 0x10f0 <__mulsf3+0x1c>
    10e2:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__fp_pscB>
    10e6:	20 f0       	brcs	.+8      	; 0x10f0 <__mulsf3+0x1c>
    10e8:	95 23       	and	r25, r21
    10ea:	11 f0       	breq	.+4      	; 0x10f0 <__mulsf3+0x1c>
    10ec:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>
    10f0:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_nan>
    10f4:	11 24       	eor	r1, r1
    10f6:	0c 94 64 08 	jmp	0x10c8	; 0x10c8 <__fp_szero>

000010fa <__mulsf3x>:
    10fa:	0e 94 41 08 	call	0x1082	; 0x1082 <__fp_split3>
    10fe:	70 f3       	brcs	.-36     	; 0x10dc <__mulsf3+0x8>

00001100 <__mulsf3_pse>:
    1100:	95 9f       	mul	r25, r21
    1102:	c1 f3       	breq	.-16     	; 0x10f4 <__mulsf3+0x20>
    1104:	95 0f       	add	r25, r21
    1106:	50 e0       	ldi	r21, 0x00	; 0
    1108:	55 1f       	adc	r21, r21
    110a:	62 9f       	mul	r22, r18
    110c:	f0 01       	movw	r30, r0
    110e:	72 9f       	mul	r23, r18
    1110:	bb 27       	eor	r27, r27
    1112:	f0 0d       	add	r31, r0
    1114:	b1 1d       	adc	r27, r1
    1116:	63 9f       	mul	r22, r19
    1118:	aa 27       	eor	r26, r26
    111a:	f0 0d       	add	r31, r0
    111c:	b1 1d       	adc	r27, r1
    111e:	aa 1f       	adc	r26, r26
    1120:	64 9f       	mul	r22, r20
    1122:	66 27       	eor	r22, r22
    1124:	b0 0d       	add	r27, r0
    1126:	a1 1d       	adc	r26, r1
    1128:	66 1f       	adc	r22, r22
    112a:	82 9f       	mul	r24, r18
    112c:	22 27       	eor	r18, r18
    112e:	b0 0d       	add	r27, r0
    1130:	a1 1d       	adc	r26, r1
    1132:	62 1f       	adc	r22, r18
    1134:	73 9f       	mul	r23, r19
    1136:	b0 0d       	add	r27, r0
    1138:	a1 1d       	adc	r26, r1
    113a:	62 1f       	adc	r22, r18
    113c:	83 9f       	mul	r24, r19
    113e:	a0 0d       	add	r26, r0
    1140:	61 1d       	adc	r22, r1
    1142:	22 1f       	adc	r18, r18
    1144:	74 9f       	mul	r23, r20
    1146:	33 27       	eor	r19, r19
    1148:	a0 0d       	add	r26, r0
    114a:	61 1d       	adc	r22, r1
    114c:	23 1f       	adc	r18, r19
    114e:	84 9f       	mul	r24, r20
    1150:	60 0d       	add	r22, r0
    1152:	21 1d       	adc	r18, r1
    1154:	82 2f       	mov	r24, r18
    1156:	76 2f       	mov	r23, r22
    1158:	6a 2f       	mov	r22, r26
    115a:	11 24       	eor	r1, r1
    115c:	9f 57       	subi	r25, 0x7F	; 127
    115e:	50 40       	sbci	r21, 0x00	; 0
    1160:	9a f0       	brmi	.+38     	; 0x1188 <__mulsf3_pse+0x88>
    1162:	f1 f0       	breq	.+60     	; 0x11a0 <__mulsf3_pse+0xa0>
    1164:	88 23       	and	r24, r24
    1166:	4a f0       	brmi	.+18     	; 0x117a <__mulsf3_pse+0x7a>
    1168:	ee 0f       	add	r30, r30
    116a:	ff 1f       	adc	r31, r31
    116c:	bb 1f       	adc	r27, r27
    116e:	66 1f       	adc	r22, r22
    1170:	77 1f       	adc	r23, r23
    1172:	88 1f       	adc	r24, r24
    1174:	91 50       	subi	r25, 0x01	; 1
    1176:	50 40       	sbci	r21, 0x00	; 0
    1178:	a9 f7       	brne	.-22     	; 0x1164 <__mulsf3_pse+0x64>
    117a:	9e 3f       	cpi	r25, 0xFE	; 254
    117c:	51 05       	cpc	r21, r1
    117e:	80 f0       	brcs	.+32     	; 0x11a0 <__mulsf3_pse+0xa0>
    1180:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>
    1184:	0c 94 64 08 	jmp	0x10c8	; 0x10c8 <__fp_szero>
    1188:	5f 3f       	cpi	r21, 0xFF	; 255
    118a:	e4 f3       	brlt	.-8      	; 0x1184 <__mulsf3_pse+0x84>
    118c:	98 3e       	cpi	r25, 0xE8	; 232
    118e:	d4 f3       	brlt	.-12     	; 0x1184 <__mulsf3_pse+0x84>
    1190:	86 95       	lsr	r24
    1192:	77 95       	ror	r23
    1194:	67 95       	ror	r22
    1196:	b7 95       	ror	r27
    1198:	f7 95       	ror	r31
    119a:	e7 95       	ror	r30
    119c:	9f 5f       	subi	r25, 0xFF	; 255
    119e:	c1 f7       	brne	.-16     	; 0x1190 <__mulsf3_pse+0x90>
    11a0:	fe 2b       	or	r31, r30
    11a2:	88 0f       	add	r24, r24
    11a4:	91 1d       	adc	r25, r1
    11a6:	96 95       	lsr	r25
    11a8:	87 95       	ror	r24
    11aa:	97 f9       	bld	r25, 7
    11ac:	08 95       	ret

000011ae <__fp_inf>:
    11ae:	97 f9       	bld	r25, 7
    11b0:	9f 67       	ori	r25, 0x7F	; 127
    11b2:	80 e8       	ldi	r24, 0x80	; 128
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	08 95       	ret

000011ba <__fp_nan>:
    11ba:	9f ef       	ldi	r25, 0xFF	; 255
    11bc:	80 ec       	ldi	r24, 0xC0	; 192
    11be:	08 95       	ret

000011c0 <__fp_pscA>:
    11c0:	00 24       	eor	r0, r0
    11c2:	0a 94       	dec	r0
    11c4:	16 16       	cp	r1, r22
    11c6:	17 06       	cpc	r1, r23
    11c8:	18 06       	cpc	r1, r24
    11ca:	09 06       	cpc	r0, r25
    11cc:	08 95       	ret

000011ce <__fp_pscB>:
    11ce:	00 24       	eor	r0, r0
    11d0:	0a 94       	dec	r0
    11d2:	12 16       	cp	r1, r18
    11d4:	13 06       	cpc	r1, r19
    11d6:	14 06       	cpc	r1, r20
    11d8:	05 06       	cpc	r0, r21
    11da:	08 95       	ret

000011dc <__fp_round>:
    11dc:	09 2e       	mov	r0, r25
    11de:	03 94       	inc	r0
    11e0:	00 0c       	add	r0, r0
    11e2:	11 f4       	brne	.+4      	; 0x11e8 <__fp_round+0xc>
    11e4:	88 23       	and	r24, r24
    11e6:	52 f0       	brmi	.+20     	; 0x11fc <__fp_round+0x20>
    11e8:	bb 0f       	add	r27, r27
    11ea:	40 f4       	brcc	.+16     	; 0x11fc <__fp_round+0x20>
    11ec:	bf 2b       	or	r27, r31
    11ee:	11 f4       	brne	.+4      	; 0x11f4 <__fp_round+0x18>
    11f0:	60 ff       	sbrs	r22, 0
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <__fp_round+0x20>
    11f4:	6f 5f       	subi	r22, 0xFF	; 255
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	8f 4f       	sbci	r24, 0xFF	; 255
    11fa:	9f 4f       	sbci	r25, 0xFF	; 255
    11fc:	08 95       	ret

000011fe <__umulhisi3>:
    11fe:	a2 9f       	mul	r26, r18
    1200:	b0 01       	movw	r22, r0
    1202:	b3 9f       	mul	r27, r19
    1204:	c0 01       	movw	r24, r0
    1206:	a3 9f       	mul	r26, r19
    1208:	70 0d       	add	r23, r0
    120a:	81 1d       	adc	r24, r1
    120c:	11 24       	eor	r1, r1
    120e:	91 1d       	adc	r25, r1
    1210:	b2 9f       	mul	r27, r18
    1212:	70 0d       	add	r23, r0
    1214:	81 1d       	adc	r24, r1
    1216:	11 24       	eor	r1, r1
    1218:	91 1d       	adc	r25, r1
    121a:	08 95       	ret

0000121c <strtoul>:
    121c:	a0 e0       	ldi	r26, 0x00	; 0
    121e:	b0 e0       	ldi	r27, 0x00	; 0
    1220:	e4 e1       	ldi	r30, 0x14	; 20
    1222:	f9 e0       	ldi	r31, 0x09	; 9
    1224:	0c 94 94 0d 	jmp	0x1b28	; 0x1b28 <__prologue_saves__+0x2>
    1228:	5c 01       	movw	r10, r24
    122a:	6b 01       	movw	r12, r22
    122c:	7a 01       	movw	r14, r20
    122e:	61 15       	cp	r22, r1
    1230:	71 05       	cpc	r23, r1
    1232:	19 f0       	breq	.+6      	; 0x123a <strtoul+0x1e>
    1234:	fb 01       	movw	r30, r22
    1236:	80 83       	st	Z, r24
    1238:	91 83       	std	Z+1, r25	; 0x01
    123a:	e1 14       	cp	r14, r1
    123c:	f1 04       	cpc	r15, r1
    123e:	29 f0       	breq	.+10     	; 0x124a <strtoul+0x2e>
    1240:	c7 01       	movw	r24, r14
    1242:	02 97       	sbiw	r24, 0x02	; 2
    1244:	83 97       	sbiw	r24, 0x23	; 35
    1246:	08 f0       	brcs	.+2      	; 0x124a <strtoul+0x2e>
    1248:	c9 c0       	rjmp	.+402    	; 0x13dc <strtoul+0x1c0>
    124a:	e5 01       	movw	r28, r10
    124c:	21 96       	adiw	r28, 0x01	; 1
    124e:	f5 01       	movw	r30, r10
    1250:	10 81       	ld	r17, Z
    1252:	81 2f       	mov	r24, r17
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	0e 94 03 0a 	call	0x1406	; 0x1406 <isspace>
    125a:	89 2b       	or	r24, r25
    125c:	11 f0       	breq	.+4      	; 0x1262 <strtoul+0x46>
    125e:	5e 01       	movw	r10, r28
    1260:	f4 cf       	rjmp	.-24     	; 0x124a <strtoul+0x2e>
    1262:	1d 32       	cpi	r17, 0x2D	; 45
    1264:	29 f4       	brne	.+10     	; 0x1270 <strtoul+0x54>
    1266:	21 96       	adiw	r28, 0x01	; 1
    1268:	f5 01       	movw	r30, r10
    126a:	11 81       	ldd	r17, Z+1	; 0x01
    126c:	01 e0       	ldi	r16, 0x01	; 1
    126e:	07 c0       	rjmp	.+14     	; 0x127e <strtoul+0x62>
    1270:	1b 32       	cpi	r17, 0x2B	; 43
    1272:	21 f4       	brne	.+8      	; 0x127c <strtoul+0x60>
    1274:	e5 01       	movw	r28, r10
    1276:	22 96       	adiw	r28, 0x02	; 2
    1278:	f5 01       	movw	r30, r10
    127a:	11 81       	ldd	r17, Z+1	; 0x01
    127c:	00 e0       	ldi	r16, 0x00	; 0
    127e:	e1 14       	cp	r14, r1
    1280:	f1 04       	cpc	r15, r1
    1282:	b1 f0       	breq	.+44     	; 0x12b0 <strtoul+0x94>
    1284:	f0 e1       	ldi	r31, 0x10	; 16
    1286:	ef 16       	cp	r14, r31
    1288:	f1 04       	cpc	r15, r1
    128a:	29 f4       	brne	.+10     	; 0x1296 <strtoul+0x7a>
    128c:	b0 c0       	rjmp	.+352    	; 0x13ee <strtoul+0x1d2>
    128e:	10 e3       	ldi	r17, 0x30	; 48
    1290:	e1 14       	cp	r14, r1
    1292:	f1 04       	cpc	r15, r1
    1294:	01 f1       	breq	.+64     	; 0x12d6 <strtoul+0xba>
    1296:	2a e0       	ldi	r18, 0x0A	; 10
    1298:	e2 16       	cp	r14, r18
    129a:	f1 04       	cpc	r15, r1
    129c:	b1 f1       	breq	.+108    	; 0x130a <strtoul+0xee>
    129e:	80 e1       	ldi	r24, 0x10	; 16
    12a0:	e8 16       	cp	r14, r24
    12a2:	f1 04       	cpc	r15, r1
    12a4:	71 f0       	breq	.+28     	; 0x12c2 <strtoul+0xa6>
    12a6:	e8 e0       	ldi	r30, 0x08	; 8
    12a8:	ee 16       	cp	r14, r30
    12aa:	f1 04       	cpc	r15, r1
    12ac:	f1 f4       	brne	.+60     	; 0x12ea <strtoul+0xce>
    12ae:	13 c0       	rjmp	.+38     	; 0x12d6 <strtoul+0xba>
    12b0:	10 33       	cpi	r17, 0x30	; 48
    12b2:	41 f5       	brne	.+80     	; 0x1304 <strtoul+0xe8>
    12b4:	88 81       	ld	r24, Y
    12b6:	8f 7d       	andi	r24, 0xDF	; 223
    12b8:	88 35       	cpi	r24, 0x58	; 88
    12ba:	49 f7       	brne	.-46     	; 0x128e <strtoul+0x72>
    12bc:	19 81       	ldd	r17, Y+1	; 0x01
    12be:	22 96       	adiw	r28, 0x02	; 2
    12c0:	02 60       	ori	r16, 0x02	; 2
    12c2:	f0 e1       	ldi	r31, 0x10	; 16
    12c4:	ef 2e       	mov	r14, r31
    12c6:	f1 2c       	mov	r15, r1
    12c8:	88 24       	eor	r8, r8
    12ca:	8a 94       	dec	r8
    12cc:	98 2c       	mov	r9, r8
    12ce:	a8 2c       	mov	r10, r8
    12d0:	af e0       	ldi	r26, 0x0F	; 15
    12d2:	ba 2e       	mov	r11, r26
    12d4:	20 c0       	rjmp	.+64     	; 0x1316 <strtoul+0xfa>
    12d6:	78 e0       	ldi	r23, 0x08	; 8
    12d8:	e7 2e       	mov	r14, r23
    12da:	f1 2c       	mov	r15, r1
    12dc:	88 24       	eor	r8, r8
    12de:	8a 94       	dec	r8
    12e0:	98 2c       	mov	r9, r8
    12e2:	a8 2c       	mov	r10, r8
    12e4:	ef e1       	ldi	r30, 0x1F	; 31
    12e6:	be 2e       	mov	r11, r30
    12e8:	16 c0       	rjmp	.+44     	; 0x1316 <strtoul+0xfa>
    12ea:	6f ef       	ldi	r22, 0xFF	; 255
    12ec:	7f ef       	ldi	r23, 0xFF	; 255
    12ee:	cb 01       	movw	r24, r22
    12f0:	97 01       	movw	r18, r14
    12f2:	0f 2c       	mov	r0, r15
    12f4:	00 0c       	add	r0, r0
    12f6:	44 0b       	sbc	r20, r20
    12f8:	55 0b       	sbc	r21, r21
    12fa:	0e 94 66 0d 	call	0x1acc	; 0x1acc <__udivmodsi4>
    12fe:	49 01       	movw	r8, r18
    1300:	5a 01       	movw	r10, r20
    1302:	09 c0       	rjmp	.+18     	; 0x1316 <strtoul+0xfa>
    1304:	8a e0       	ldi	r24, 0x0A	; 10
    1306:	e8 2e       	mov	r14, r24
    1308:	f1 2c       	mov	r15, r1
    130a:	69 e9       	ldi	r22, 0x99	; 153
    130c:	86 2e       	mov	r8, r22
    130e:	98 2c       	mov	r9, r8
    1310:	a8 2c       	mov	r10, r8
    1312:	69 e1       	ldi	r22, 0x19	; 25
    1314:	b6 2e       	mov	r11, r22
    1316:	40 e0       	ldi	r20, 0x00	; 0
    1318:	60 e0       	ldi	r22, 0x00	; 0
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	cb 01       	movw	r24, r22
    131e:	27 01       	movw	r4, r14
    1320:	0f 2c       	mov	r0, r15
    1322:	00 0c       	add	r0, r0
    1324:	66 08       	sbc	r6, r6
    1326:	77 08       	sbc	r7, r7
    1328:	fe 01       	movw	r30, r28
    132a:	50 ed       	ldi	r21, 0xD0	; 208
    132c:	35 2e       	mov	r3, r21
    132e:	31 0e       	add	r3, r17
    1330:	29 e0       	ldi	r18, 0x09	; 9
    1332:	23 15       	cp	r18, r3
    1334:	70 f4       	brcc	.+28     	; 0x1352 <strtoul+0x136>
    1336:	2f eb       	ldi	r18, 0xBF	; 191
    1338:	21 0f       	add	r18, r17
    133a:	2a 31       	cpi	r18, 0x1A	; 26
    133c:	18 f4       	brcc	.+6      	; 0x1344 <strtoul+0x128>
    133e:	39 ec       	ldi	r19, 0xC9	; 201
    1340:	33 2e       	mov	r3, r19
    1342:	06 c0       	rjmp	.+12     	; 0x1350 <strtoul+0x134>
    1344:	2f e9       	ldi	r18, 0x9F	; 159
    1346:	21 0f       	add	r18, r17
    1348:	2a 31       	cpi	r18, 0x1A	; 26
    134a:	30 f5       	brcc	.+76     	; 0x1398 <strtoul+0x17c>
    134c:	29 ea       	ldi	r18, 0xA9	; 169
    134e:	32 2e       	mov	r3, r18
    1350:	31 0e       	add	r3, r17
    1352:	23 2d       	mov	r18, r3
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	2e 15       	cp	r18, r14
    1358:	3f 05       	cpc	r19, r15
    135a:	f4 f4       	brge	.+60     	; 0x1398 <strtoul+0x17c>
    135c:	4f 3f       	cpi	r20, 0xFF	; 255
    135e:	c9 f0       	breq	.+50     	; 0x1392 <strtoul+0x176>
    1360:	86 16       	cp	r8, r22
    1362:	97 06       	cpc	r9, r23
    1364:	a8 06       	cpc	r10, r24
    1366:	b9 06       	cpc	r11, r25
    1368:	88 f0       	brcs	.+34     	; 0x138c <strtoul+0x170>
    136a:	a3 01       	movw	r20, r6
    136c:	92 01       	movw	r18, r4
    136e:	0e 94 56 0d 	call	0x1aac	; 0x1aac <__mulsi3>
    1372:	23 2d       	mov	r18, r3
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	40 e0       	ldi	r20, 0x00	; 0
    1378:	50 e0       	ldi	r21, 0x00	; 0
    137a:	62 0f       	add	r22, r18
    137c:	73 1f       	adc	r23, r19
    137e:	84 1f       	adc	r24, r20
    1380:	95 1f       	adc	r25, r21
    1382:	62 17       	cp	r22, r18
    1384:	73 07       	cpc	r23, r19
    1386:	84 07       	cpc	r24, r20
    1388:	95 07       	cpc	r25, r21
    138a:	10 f4       	brcc	.+4      	; 0x1390 <strtoul+0x174>
    138c:	4f ef       	ldi	r20, 0xFF	; 255
    138e:	01 c0       	rjmp	.+2      	; 0x1392 <strtoul+0x176>
    1390:	41 e0       	ldi	r20, 0x01	; 1
    1392:	21 96       	adiw	r28, 0x01	; 1
    1394:	10 81       	ld	r17, Z
    1396:	c8 cf       	rjmp	.-112    	; 0x1328 <strtoul+0x10c>
    1398:	c1 14       	cp	r12, r1
    139a:	d1 04       	cpc	r13, r1
    139c:	51 f0       	breq	.+20     	; 0x13b2 <strtoul+0x196>
    139e:	44 23       	and	r20, r20
    13a0:	11 f0       	breq	.+4      	; 0x13a6 <strtoul+0x18a>
    13a2:	21 97       	sbiw	r28, 0x01	; 1
    13a4:	03 c0       	rjmp	.+6      	; 0x13ac <strtoul+0x190>
    13a6:	01 ff       	sbrs	r16, 1
    13a8:	04 c0       	rjmp	.+8      	; 0x13b2 <strtoul+0x196>
    13aa:	22 97       	sbiw	r28, 0x02	; 2
    13ac:	f6 01       	movw	r30, r12
    13ae:	c0 83       	st	Z, r28
    13b0:	d1 83       	std	Z+1, r29	; 0x01
    13b2:	00 ff       	sbrs	r16, 0
    13b4:	07 c0       	rjmp	.+14     	; 0x13c4 <strtoul+0x1a8>
    13b6:	90 95       	com	r25
    13b8:	80 95       	com	r24
    13ba:	70 95       	com	r23
    13bc:	61 95       	neg	r22
    13be:	7f 4f       	sbci	r23, 0xFF	; 255
    13c0:	8f 4f       	sbci	r24, 0xFF	; 255
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	4f 3f       	cpi	r20, 0xFF	; 255
    13c6:	79 f4       	brne	.+30     	; 0x13e6 <strtoul+0x1ca>
    13c8:	82 e2       	ldi	r24, 0x22	; 34
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <errno>
    13d0:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <errno+0x1>
    13d4:	3f ef       	ldi	r19, 0xFF	; 255
    13d6:	2f ef       	ldi	r18, 0xFF	; 255
    13d8:	9f ef       	ldi	r25, 0xFF	; 255
    13da:	0d c0       	rjmp	.+26     	; 0x13f6 <strtoul+0x1da>
    13dc:	40 e0       	ldi	r20, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	20 e0       	ldi	r18, 0x00	; 0
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	08 c0       	rjmp	.+16     	; 0x13f6 <strtoul+0x1da>
    13e6:	46 2f       	mov	r20, r22
    13e8:	37 2f       	mov	r19, r23
    13ea:	28 2f       	mov	r18, r24
    13ec:	04 c0       	rjmp	.+8      	; 0x13f6 <strtoul+0x1da>
    13ee:	10 33       	cpi	r17, 0x30	; 48
    13f0:	09 f0       	breq	.+2      	; 0x13f4 <strtoul+0x1d8>
    13f2:	67 cf       	rjmp	.-306    	; 0x12c2 <strtoul+0xa6>
    13f4:	5f cf       	rjmp	.-322    	; 0x12b4 <strtoul+0x98>
    13f6:	64 2f       	mov	r22, r20
    13f8:	73 2f       	mov	r23, r19
    13fa:	82 2f       	mov	r24, r18
    13fc:	cd b7       	in	r28, 0x3d	; 61
    13fe:	de b7       	in	r29, 0x3e	; 62
    1400:	e1 e1       	ldi	r30, 0x11	; 17
    1402:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__epilogue_restores__+0x2>

00001406 <isspace>:
    1406:	91 11       	cpse	r25, r1
    1408:	0c 94 a3 0c 	jmp	0x1946	; 0x1946 <__ctype_isfalse>
    140c:	80 32       	cpi	r24, 0x20	; 32
    140e:	19 f0       	breq	.+6      	; 0x1416 <isspace+0x10>
    1410:	89 50       	subi	r24, 0x09	; 9
    1412:	85 50       	subi	r24, 0x05	; 5
    1414:	c8 f7       	brcc	.-14     	; 0x1408 <isspace+0x2>
    1416:	08 95       	ret

00001418 <strtok>:
    1418:	42 e2       	ldi	r20, 0x22	; 34
    141a:	59 e2       	ldi	r21, 0x29	; 41
    141c:	0e 94 25 0a 	call	0x144a	; 0x144a <strtok_r>
    1420:	08 95       	ret

00001422 <strchr>:
    1422:	fc 01       	movw	r30, r24
    1424:	81 91       	ld	r24, Z+
    1426:	86 17       	cp	r24, r22
    1428:	21 f0       	breq	.+8      	; 0x1432 <strchr+0x10>
    142a:	88 23       	and	r24, r24
    142c:	d9 f7       	brne	.-10     	; 0x1424 <strchr+0x2>
    142e:	99 27       	eor	r25, r25
    1430:	08 95       	ret
    1432:	31 97       	sbiw	r30, 0x01	; 1
    1434:	cf 01       	movw	r24, r30
    1436:	08 95       	ret

00001438 <strcmp>:
    1438:	fb 01       	movw	r30, r22
    143a:	dc 01       	movw	r26, r24
    143c:	8d 91       	ld	r24, X+
    143e:	01 90       	ld	r0, Z+
    1440:	80 19       	sub	r24, r0
    1442:	01 10       	cpse	r0, r1
    1444:	d9 f3       	breq	.-10     	; 0x143c <strcmp+0x4>
    1446:	99 0b       	sbc	r25, r25
    1448:	08 95       	ret

0000144a <strtok_r>:
    144a:	fa 01       	movw	r30, r20
    144c:	a1 91       	ld	r26, Z+
    144e:	b0 81       	ld	r27, Z
    1450:	00 97       	sbiw	r24, 0x00	; 0
    1452:	19 f4       	brne	.+6      	; 0x145a <strtok_r+0x10>
    1454:	10 97       	sbiw	r26, 0x00	; 0
    1456:	e1 f0       	breq	.+56     	; 0x1490 <strtok_r+0x46>
    1458:	cd 01       	movw	r24, r26
    145a:	dc 01       	movw	r26, r24
    145c:	cd 01       	movw	r24, r26
    145e:	0d 90       	ld	r0, X+
    1460:	00 20       	and	r0, r0
    1462:	11 f4       	brne	.+4      	; 0x1468 <strtok_r+0x1e>
    1464:	c0 01       	movw	r24, r0
    1466:	13 c0       	rjmp	.+38     	; 0x148e <strtok_r+0x44>
    1468:	fb 01       	movw	r30, r22
    146a:	21 91       	ld	r18, Z+
    146c:	22 23       	and	r18, r18
    146e:	19 f0       	breq	.+6      	; 0x1476 <strtok_r+0x2c>
    1470:	20 15       	cp	r18, r0
    1472:	d9 f7       	brne	.-10     	; 0x146a <strtok_r+0x20>
    1474:	f3 cf       	rjmp	.-26     	; 0x145c <strtok_r+0x12>
    1476:	fb 01       	movw	r30, r22
    1478:	21 91       	ld	r18, Z+
    147a:	20 15       	cp	r18, r0
    147c:	19 f4       	brne	.+6      	; 0x1484 <strtok_r+0x3a>
    147e:	1e 92       	st	-X, r1
    1480:	11 96       	adiw	r26, 0x01	; 1
    1482:	06 c0       	rjmp	.+12     	; 0x1490 <strtok_r+0x46>
    1484:	22 23       	and	r18, r18
    1486:	c1 f7       	brne	.-16     	; 0x1478 <strtok_r+0x2e>
    1488:	0d 90       	ld	r0, X+
    148a:	00 20       	and	r0, r0
    148c:	a1 f7       	brne	.-24     	; 0x1476 <strtok_r+0x2c>
    148e:	d0 01       	movw	r26, r0
    1490:	fa 01       	movw	r30, r20
    1492:	a1 93       	st	Z+, r26
    1494:	b0 83       	st	Z, r27
    1496:	08 95       	ret

00001498 <printf>:
    1498:	a0 e0       	ldi	r26, 0x00	; 0
    149a:	b0 e0       	ldi	r27, 0x00	; 0
    149c:	e2 e5       	ldi	r30, 0x52	; 82
    149e:	fa e0       	ldi	r31, 0x0A	; 10
    14a0:	0c 94 a3 0d 	jmp	0x1b46	; 0x1b46 <__prologue_saves__+0x20>
    14a4:	ae 01       	movw	r20, r28
    14a6:	4b 5f       	subi	r20, 0xFB	; 251
    14a8:	5f 4f       	sbci	r21, 0xFF	; 255
    14aa:	fa 01       	movw	r30, r20
    14ac:	61 91       	ld	r22, Z+
    14ae:	71 91       	ld	r23, Z+
    14b0:	af 01       	movw	r20, r30
    14b2:	80 91 10 2a 	lds	r24, 0x2A10	; 0x802a10 <__iob+0x2>
    14b6:	90 91 11 2a 	lds	r25, 0x2A11	; 0x802a11 <__iob+0x3>
    14ba:	0e 94 c2 0a 	call	0x1584	; 0x1584 <vfprintf>
    14be:	e2 e0       	ldi	r30, 0x02	; 2
    14c0:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__epilogue_restores__+0x20>

000014c4 <puts>:
    14c4:	0f 93       	push	r16
    14c6:	1f 93       	push	r17
    14c8:	cf 93       	push	r28
    14ca:	df 93       	push	r29
    14cc:	e0 91 10 2a 	lds	r30, 0x2A10	; 0x802a10 <__iob+0x2>
    14d0:	f0 91 11 2a 	lds	r31, 0x2A11	; 0x802a11 <__iob+0x3>
    14d4:	23 81       	ldd	r18, Z+3	; 0x03
    14d6:	21 ff       	sbrs	r18, 1
    14d8:	1b c0       	rjmp	.+54     	; 0x1510 <puts+0x4c>
    14da:	8c 01       	movw	r16, r24
    14dc:	d0 e0       	ldi	r29, 0x00	; 0
    14de:	c0 e0       	ldi	r28, 0x00	; 0
    14e0:	f8 01       	movw	r30, r16
    14e2:	81 91       	ld	r24, Z+
    14e4:	8f 01       	movw	r16, r30
    14e6:	60 91 10 2a 	lds	r22, 0x2A10	; 0x802a10 <__iob+0x2>
    14ea:	70 91 11 2a 	lds	r23, 0x2A11	; 0x802a11 <__iob+0x3>
    14ee:	db 01       	movw	r26, r22
    14f0:	18 96       	adiw	r26, 0x08	; 8
    14f2:	ed 91       	ld	r30, X+
    14f4:	fc 91       	ld	r31, X
    14f6:	19 97       	sbiw	r26, 0x09	; 9
    14f8:	88 23       	and	r24, r24
    14fa:	31 f0       	breq	.+12     	; 0x1508 <puts+0x44>
    14fc:	09 95       	icall
    14fe:	89 2b       	or	r24, r25
    1500:	79 f3       	breq	.-34     	; 0x14e0 <puts+0x1c>
    1502:	df ef       	ldi	r29, 0xFF	; 255
    1504:	cf ef       	ldi	r28, 0xFF	; 255
    1506:	ec cf       	rjmp	.-40     	; 0x14e0 <puts+0x1c>
    1508:	8a e0       	ldi	r24, 0x0A	; 10
    150a:	09 95       	icall
    150c:	89 2b       	or	r24, r25
    150e:	19 f0       	breq	.+6      	; 0x1516 <puts+0x52>
    1510:	8f ef       	ldi	r24, 0xFF	; 255
    1512:	9f ef       	ldi	r25, 0xFF	; 255
    1514:	02 c0       	rjmp	.+4      	; 0x151a <puts+0x56>
    1516:	8d 2f       	mov	r24, r29
    1518:	9c 2f       	mov	r25, r28
    151a:	df 91       	pop	r29
    151c:	cf 91       	pop	r28
    151e:	1f 91       	pop	r17
    1520:	0f 91       	pop	r16
    1522:	08 95       	ret

00001524 <snprintf>:
    1524:	ae e0       	ldi	r26, 0x0E	; 14
    1526:	b0 e0       	ldi	r27, 0x00	; 0
    1528:	e8 e9       	ldi	r30, 0x98	; 152
    152a:	fa e0       	ldi	r31, 0x0A	; 10
    152c:	0c 94 a1 0d 	jmp	0x1b42	; 0x1b42 <__prologue_saves__+0x1c>
    1530:	0d 89       	ldd	r16, Y+21	; 0x15
    1532:	1e 89       	ldd	r17, Y+22	; 0x16
    1534:	8f 89       	ldd	r24, Y+23	; 0x17
    1536:	98 8d       	ldd	r25, Y+24	; 0x18
    1538:	26 e0       	ldi	r18, 0x06	; 6
    153a:	2c 83       	std	Y+4, r18	; 0x04
    153c:	09 83       	std	Y+1, r16	; 0x01
    153e:	1a 83       	std	Y+2, r17	; 0x02
    1540:	97 ff       	sbrs	r25, 7
    1542:	02 c0       	rjmp	.+4      	; 0x1548 <snprintf+0x24>
    1544:	80 e0       	ldi	r24, 0x00	; 0
    1546:	90 e8       	ldi	r25, 0x80	; 128
    1548:	01 97       	sbiw	r24, 0x01	; 1
    154a:	8d 83       	std	Y+5, r24	; 0x05
    154c:	9e 83       	std	Y+6, r25	; 0x06
    154e:	ae 01       	movw	r20, r28
    1550:	45 5e       	subi	r20, 0xE5	; 229
    1552:	5f 4f       	sbci	r21, 0xFF	; 255
    1554:	69 8d       	ldd	r22, Y+25	; 0x19
    1556:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1558:	ce 01       	movw	r24, r28
    155a:	01 96       	adiw	r24, 0x01	; 1
    155c:	0e 94 c2 0a 	call	0x1584	; 0x1584 <vfprintf>
    1560:	4d 81       	ldd	r20, Y+5	; 0x05
    1562:	5e 81       	ldd	r21, Y+6	; 0x06
    1564:	57 fd       	sbrc	r21, 7
    1566:	0a c0       	rjmp	.+20     	; 0x157c <snprintf+0x58>
    1568:	2f 81       	ldd	r18, Y+7	; 0x07
    156a:	38 85       	ldd	r19, Y+8	; 0x08
    156c:	42 17       	cp	r20, r18
    156e:	53 07       	cpc	r21, r19
    1570:	0c f4       	brge	.+2      	; 0x1574 <snprintf+0x50>
    1572:	9a 01       	movw	r18, r20
    1574:	f8 01       	movw	r30, r16
    1576:	e2 0f       	add	r30, r18
    1578:	f3 1f       	adc	r31, r19
    157a:	10 82       	st	Z, r1
    157c:	2e 96       	adiw	r28, 0x0e	; 14
    157e:	e4 e0       	ldi	r30, 0x04	; 4
    1580:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <__epilogue_restores__+0x1c>

00001584 <vfprintf>:
    1584:	ab e0       	ldi	r26, 0x0B	; 11
    1586:	b0 e0       	ldi	r27, 0x00	; 0
    1588:	e8 ec       	ldi	r30, 0xC8	; 200
    158a:	fa e0       	ldi	r31, 0x0A	; 10
    158c:	0c 94 93 0d 	jmp	0x1b26	; 0x1b26 <__prologue_saves__>
    1590:	6c 01       	movw	r12, r24
    1592:	7b 01       	movw	r14, r22
    1594:	8a 01       	movw	r16, r20
    1596:	fc 01       	movw	r30, r24
    1598:	16 82       	std	Z+6, r1	; 0x06
    159a:	17 82       	std	Z+7, r1	; 0x07
    159c:	83 81       	ldd	r24, Z+3	; 0x03
    159e:	81 ff       	sbrs	r24, 1
    15a0:	cc c1       	rjmp	.+920    	; 0x193a <__DATA_REGION_LENGTH__+0x13a>
    15a2:	ce 01       	movw	r24, r28
    15a4:	01 96       	adiw	r24, 0x01	; 1
    15a6:	3c 01       	movw	r6, r24
    15a8:	f6 01       	movw	r30, r12
    15aa:	93 81       	ldd	r25, Z+3	; 0x03
    15ac:	f7 01       	movw	r30, r14
    15ae:	93 fd       	sbrc	r25, 3
    15b0:	85 91       	lpm	r24, Z+
    15b2:	93 ff       	sbrs	r25, 3
    15b4:	81 91       	ld	r24, Z+
    15b6:	7f 01       	movw	r14, r30
    15b8:	88 23       	and	r24, r24
    15ba:	09 f4       	brne	.+2      	; 0x15be <vfprintf+0x3a>
    15bc:	ba c1       	rjmp	.+884    	; 0x1932 <__DATA_REGION_LENGTH__+0x132>
    15be:	85 32       	cpi	r24, 0x25	; 37
    15c0:	39 f4       	brne	.+14     	; 0x15d0 <vfprintf+0x4c>
    15c2:	93 fd       	sbrc	r25, 3
    15c4:	85 91       	lpm	r24, Z+
    15c6:	93 ff       	sbrs	r25, 3
    15c8:	81 91       	ld	r24, Z+
    15ca:	7f 01       	movw	r14, r30
    15cc:	85 32       	cpi	r24, 0x25	; 37
    15ce:	29 f4       	brne	.+10     	; 0x15da <vfprintf+0x56>
    15d0:	b6 01       	movw	r22, r12
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    15d8:	e7 cf       	rjmp	.-50     	; 0x15a8 <vfprintf+0x24>
    15da:	91 2c       	mov	r9, r1
    15dc:	21 2c       	mov	r2, r1
    15de:	31 2c       	mov	r3, r1
    15e0:	ff e1       	ldi	r31, 0x1F	; 31
    15e2:	f3 15       	cp	r31, r3
    15e4:	d8 f0       	brcs	.+54     	; 0x161c <vfprintf+0x98>
    15e6:	8b 32       	cpi	r24, 0x2B	; 43
    15e8:	79 f0       	breq	.+30     	; 0x1608 <vfprintf+0x84>
    15ea:	38 f4       	brcc	.+14     	; 0x15fa <vfprintf+0x76>
    15ec:	80 32       	cpi	r24, 0x20	; 32
    15ee:	79 f0       	breq	.+30     	; 0x160e <vfprintf+0x8a>
    15f0:	83 32       	cpi	r24, 0x23	; 35
    15f2:	a1 f4       	brne	.+40     	; 0x161c <vfprintf+0x98>
    15f4:	23 2d       	mov	r18, r3
    15f6:	20 61       	ori	r18, 0x10	; 16
    15f8:	1d c0       	rjmp	.+58     	; 0x1634 <vfprintf+0xb0>
    15fa:	8d 32       	cpi	r24, 0x2D	; 45
    15fc:	61 f0       	breq	.+24     	; 0x1616 <vfprintf+0x92>
    15fe:	80 33       	cpi	r24, 0x30	; 48
    1600:	69 f4       	brne	.+26     	; 0x161c <vfprintf+0x98>
    1602:	23 2d       	mov	r18, r3
    1604:	21 60       	ori	r18, 0x01	; 1
    1606:	16 c0       	rjmp	.+44     	; 0x1634 <vfprintf+0xb0>
    1608:	83 2d       	mov	r24, r3
    160a:	82 60       	ori	r24, 0x02	; 2
    160c:	38 2e       	mov	r3, r24
    160e:	e3 2d       	mov	r30, r3
    1610:	e4 60       	ori	r30, 0x04	; 4
    1612:	3e 2e       	mov	r3, r30
    1614:	2a c0       	rjmp	.+84     	; 0x166a <vfprintf+0xe6>
    1616:	f3 2d       	mov	r31, r3
    1618:	f8 60       	ori	r31, 0x08	; 8
    161a:	1d c0       	rjmp	.+58     	; 0x1656 <vfprintf+0xd2>
    161c:	37 fc       	sbrc	r3, 7
    161e:	2d c0       	rjmp	.+90     	; 0x167a <vfprintf+0xf6>
    1620:	20 ed       	ldi	r18, 0xD0	; 208
    1622:	28 0f       	add	r18, r24
    1624:	2a 30       	cpi	r18, 0x0A	; 10
    1626:	40 f0       	brcs	.+16     	; 0x1638 <vfprintf+0xb4>
    1628:	8e 32       	cpi	r24, 0x2E	; 46
    162a:	b9 f4       	brne	.+46     	; 0x165a <vfprintf+0xd6>
    162c:	36 fc       	sbrc	r3, 6
    162e:	81 c1       	rjmp	.+770    	; 0x1932 <__DATA_REGION_LENGTH__+0x132>
    1630:	23 2d       	mov	r18, r3
    1632:	20 64       	ori	r18, 0x40	; 64
    1634:	32 2e       	mov	r3, r18
    1636:	19 c0       	rjmp	.+50     	; 0x166a <vfprintf+0xe6>
    1638:	36 fe       	sbrs	r3, 6
    163a:	06 c0       	rjmp	.+12     	; 0x1648 <vfprintf+0xc4>
    163c:	8a e0       	ldi	r24, 0x0A	; 10
    163e:	98 9e       	mul	r9, r24
    1640:	20 0d       	add	r18, r0
    1642:	11 24       	eor	r1, r1
    1644:	92 2e       	mov	r9, r18
    1646:	11 c0       	rjmp	.+34     	; 0x166a <vfprintf+0xe6>
    1648:	ea e0       	ldi	r30, 0x0A	; 10
    164a:	2e 9e       	mul	r2, r30
    164c:	20 0d       	add	r18, r0
    164e:	11 24       	eor	r1, r1
    1650:	22 2e       	mov	r2, r18
    1652:	f3 2d       	mov	r31, r3
    1654:	f0 62       	ori	r31, 0x20	; 32
    1656:	3f 2e       	mov	r3, r31
    1658:	08 c0       	rjmp	.+16     	; 0x166a <vfprintf+0xe6>
    165a:	8c 36       	cpi	r24, 0x6C	; 108
    165c:	21 f4       	brne	.+8      	; 0x1666 <vfprintf+0xe2>
    165e:	83 2d       	mov	r24, r3
    1660:	80 68       	ori	r24, 0x80	; 128
    1662:	38 2e       	mov	r3, r24
    1664:	02 c0       	rjmp	.+4      	; 0x166a <vfprintf+0xe6>
    1666:	88 36       	cpi	r24, 0x68	; 104
    1668:	41 f4       	brne	.+16     	; 0x167a <vfprintf+0xf6>
    166a:	f7 01       	movw	r30, r14
    166c:	93 fd       	sbrc	r25, 3
    166e:	85 91       	lpm	r24, Z+
    1670:	93 ff       	sbrs	r25, 3
    1672:	81 91       	ld	r24, Z+
    1674:	7f 01       	movw	r14, r30
    1676:	81 11       	cpse	r24, r1
    1678:	b3 cf       	rjmp	.-154    	; 0x15e0 <vfprintf+0x5c>
    167a:	98 2f       	mov	r25, r24
    167c:	9f 7d       	andi	r25, 0xDF	; 223
    167e:	95 54       	subi	r25, 0x45	; 69
    1680:	93 30       	cpi	r25, 0x03	; 3
    1682:	28 f4       	brcc	.+10     	; 0x168e <vfprintf+0x10a>
    1684:	0c 5f       	subi	r16, 0xFC	; 252
    1686:	1f 4f       	sbci	r17, 0xFF	; 255
    1688:	9f e3       	ldi	r25, 0x3F	; 63
    168a:	99 83       	std	Y+1, r25	; 0x01
    168c:	0d c0       	rjmp	.+26     	; 0x16a8 <vfprintf+0x124>
    168e:	83 36       	cpi	r24, 0x63	; 99
    1690:	31 f0       	breq	.+12     	; 0x169e <vfprintf+0x11a>
    1692:	83 37       	cpi	r24, 0x73	; 115
    1694:	71 f0       	breq	.+28     	; 0x16b2 <vfprintf+0x12e>
    1696:	83 35       	cpi	r24, 0x53	; 83
    1698:	09 f0       	breq	.+2      	; 0x169c <vfprintf+0x118>
    169a:	59 c0       	rjmp	.+178    	; 0x174e <vfprintf+0x1ca>
    169c:	21 c0       	rjmp	.+66     	; 0x16e0 <vfprintf+0x15c>
    169e:	f8 01       	movw	r30, r16
    16a0:	80 81       	ld	r24, Z
    16a2:	89 83       	std	Y+1, r24	; 0x01
    16a4:	0e 5f       	subi	r16, 0xFE	; 254
    16a6:	1f 4f       	sbci	r17, 0xFF	; 255
    16a8:	88 24       	eor	r8, r8
    16aa:	83 94       	inc	r8
    16ac:	91 2c       	mov	r9, r1
    16ae:	53 01       	movw	r10, r6
    16b0:	13 c0       	rjmp	.+38     	; 0x16d8 <vfprintf+0x154>
    16b2:	28 01       	movw	r4, r16
    16b4:	f2 e0       	ldi	r31, 0x02	; 2
    16b6:	4f 0e       	add	r4, r31
    16b8:	51 1c       	adc	r5, r1
    16ba:	f8 01       	movw	r30, r16
    16bc:	a0 80       	ld	r10, Z
    16be:	b1 80       	ldd	r11, Z+1	; 0x01
    16c0:	36 fe       	sbrs	r3, 6
    16c2:	03 c0       	rjmp	.+6      	; 0x16ca <vfprintf+0x146>
    16c4:	69 2d       	mov	r22, r9
    16c6:	70 e0       	ldi	r23, 0x00	; 0
    16c8:	02 c0       	rjmp	.+4      	; 0x16ce <vfprintf+0x14a>
    16ca:	6f ef       	ldi	r22, 0xFF	; 255
    16cc:	7f ef       	ldi	r23, 0xFF	; 255
    16ce:	c5 01       	movw	r24, r10
    16d0:	0e 94 b1 0c 	call	0x1962	; 0x1962 <strnlen>
    16d4:	4c 01       	movw	r8, r24
    16d6:	82 01       	movw	r16, r4
    16d8:	f3 2d       	mov	r31, r3
    16da:	ff 77       	andi	r31, 0x7F	; 127
    16dc:	3f 2e       	mov	r3, r31
    16de:	16 c0       	rjmp	.+44     	; 0x170c <vfprintf+0x188>
    16e0:	28 01       	movw	r4, r16
    16e2:	22 e0       	ldi	r18, 0x02	; 2
    16e4:	42 0e       	add	r4, r18
    16e6:	51 1c       	adc	r5, r1
    16e8:	f8 01       	movw	r30, r16
    16ea:	a0 80       	ld	r10, Z
    16ec:	b1 80       	ldd	r11, Z+1	; 0x01
    16ee:	36 fe       	sbrs	r3, 6
    16f0:	03 c0       	rjmp	.+6      	; 0x16f8 <vfprintf+0x174>
    16f2:	69 2d       	mov	r22, r9
    16f4:	70 e0       	ldi	r23, 0x00	; 0
    16f6:	02 c0       	rjmp	.+4      	; 0x16fc <vfprintf+0x178>
    16f8:	6f ef       	ldi	r22, 0xFF	; 255
    16fa:	7f ef       	ldi	r23, 0xFF	; 255
    16fc:	c5 01       	movw	r24, r10
    16fe:	0e 94 a6 0c 	call	0x194c	; 0x194c <strnlen_P>
    1702:	4c 01       	movw	r8, r24
    1704:	f3 2d       	mov	r31, r3
    1706:	f0 68       	ori	r31, 0x80	; 128
    1708:	3f 2e       	mov	r3, r31
    170a:	82 01       	movw	r16, r4
    170c:	33 fc       	sbrc	r3, 3
    170e:	1b c0       	rjmp	.+54     	; 0x1746 <vfprintf+0x1c2>
    1710:	82 2d       	mov	r24, r2
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	88 16       	cp	r8, r24
    1716:	99 06       	cpc	r9, r25
    1718:	b0 f4       	brcc	.+44     	; 0x1746 <vfprintf+0x1c2>
    171a:	b6 01       	movw	r22, r12
    171c:	80 e2       	ldi	r24, 0x20	; 32
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    1724:	2a 94       	dec	r2
    1726:	f4 cf       	rjmp	.-24     	; 0x1710 <vfprintf+0x18c>
    1728:	f5 01       	movw	r30, r10
    172a:	37 fc       	sbrc	r3, 7
    172c:	85 91       	lpm	r24, Z+
    172e:	37 fe       	sbrs	r3, 7
    1730:	81 91       	ld	r24, Z+
    1732:	5f 01       	movw	r10, r30
    1734:	b6 01       	movw	r22, r12
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    173c:	21 10       	cpse	r2, r1
    173e:	2a 94       	dec	r2
    1740:	21 e0       	ldi	r18, 0x01	; 1
    1742:	82 1a       	sub	r8, r18
    1744:	91 08       	sbc	r9, r1
    1746:	81 14       	cp	r8, r1
    1748:	91 04       	cpc	r9, r1
    174a:	71 f7       	brne	.-36     	; 0x1728 <vfprintf+0x1a4>
    174c:	e8 c0       	rjmp	.+464    	; 0x191e <__DATA_REGION_LENGTH__+0x11e>
    174e:	84 36       	cpi	r24, 0x64	; 100
    1750:	11 f0       	breq	.+4      	; 0x1756 <vfprintf+0x1d2>
    1752:	89 36       	cpi	r24, 0x69	; 105
    1754:	41 f5       	brne	.+80     	; 0x17a6 <vfprintf+0x222>
    1756:	f8 01       	movw	r30, r16
    1758:	37 fe       	sbrs	r3, 7
    175a:	07 c0       	rjmp	.+14     	; 0x176a <vfprintf+0x1e6>
    175c:	60 81       	ld	r22, Z
    175e:	71 81       	ldd	r23, Z+1	; 0x01
    1760:	82 81       	ldd	r24, Z+2	; 0x02
    1762:	93 81       	ldd	r25, Z+3	; 0x03
    1764:	0c 5f       	subi	r16, 0xFC	; 252
    1766:	1f 4f       	sbci	r17, 0xFF	; 255
    1768:	08 c0       	rjmp	.+16     	; 0x177a <vfprintf+0x1f6>
    176a:	60 81       	ld	r22, Z
    176c:	71 81       	ldd	r23, Z+1	; 0x01
    176e:	07 2e       	mov	r0, r23
    1770:	00 0c       	add	r0, r0
    1772:	88 0b       	sbc	r24, r24
    1774:	99 0b       	sbc	r25, r25
    1776:	0e 5f       	subi	r16, 0xFE	; 254
    1778:	1f 4f       	sbci	r17, 0xFF	; 255
    177a:	f3 2d       	mov	r31, r3
    177c:	ff 76       	andi	r31, 0x6F	; 111
    177e:	3f 2e       	mov	r3, r31
    1780:	97 ff       	sbrs	r25, 7
    1782:	09 c0       	rjmp	.+18     	; 0x1796 <vfprintf+0x212>
    1784:	90 95       	com	r25
    1786:	80 95       	com	r24
    1788:	70 95       	com	r23
    178a:	61 95       	neg	r22
    178c:	7f 4f       	sbci	r23, 0xFF	; 255
    178e:	8f 4f       	sbci	r24, 0xFF	; 255
    1790:	9f 4f       	sbci	r25, 0xFF	; 255
    1792:	f0 68       	ori	r31, 0x80	; 128
    1794:	3f 2e       	mov	r3, r31
    1796:	2a e0       	ldi	r18, 0x0A	; 10
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	a3 01       	movw	r20, r6
    179c:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__ultoa_invert>
    17a0:	88 2e       	mov	r8, r24
    17a2:	86 18       	sub	r8, r6
    17a4:	45 c0       	rjmp	.+138    	; 0x1830 <__DATA_REGION_LENGTH__+0x30>
    17a6:	85 37       	cpi	r24, 0x75	; 117
    17a8:	31 f4       	brne	.+12     	; 0x17b6 <vfprintf+0x232>
    17aa:	23 2d       	mov	r18, r3
    17ac:	2f 7e       	andi	r18, 0xEF	; 239
    17ae:	b2 2e       	mov	r11, r18
    17b0:	2a e0       	ldi	r18, 0x0A	; 10
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	25 c0       	rjmp	.+74     	; 0x1800 <__DATA_REGION_LENGTH__>
    17b6:	93 2d       	mov	r25, r3
    17b8:	99 7f       	andi	r25, 0xF9	; 249
    17ba:	b9 2e       	mov	r11, r25
    17bc:	8f 36       	cpi	r24, 0x6F	; 111
    17be:	c1 f0       	breq	.+48     	; 0x17f0 <vfprintf+0x26c>
    17c0:	18 f4       	brcc	.+6      	; 0x17c8 <vfprintf+0x244>
    17c2:	88 35       	cpi	r24, 0x58	; 88
    17c4:	79 f0       	breq	.+30     	; 0x17e4 <vfprintf+0x260>
    17c6:	b5 c0       	rjmp	.+362    	; 0x1932 <__DATA_REGION_LENGTH__+0x132>
    17c8:	80 37       	cpi	r24, 0x70	; 112
    17ca:	19 f0       	breq	.+6      	; 0x17d2 <vfprintf+0x24e>
    17cc:	88 37       	cpi	r24, 0x78	; 120
    17ce:	21 f0       	breq	.+8      	; 0x17d8 <vfprintf+0x254>
    17d0:	b0 c0       	rjmp	.+352    	; 0x1932 <__DATA_REGION_LENGTH__+0x132>
    17d2:	e9 2f       	mov	r30, r25
    17d4:	e0 61       	ori	r30, 0x10	; 16
    17d6:	be 2e       	mov	r11, r30
    17d8:	b4 fe       	sbrs	r11, 4
    17da:	0d c0       	rjmp	.+26     	; 0x17f6 <vfprintf+0x272>
    17dc:	fb 2d       	mov	r31, r11
    17de:	f4 60       	ori	r31, 0x04	; 4
    17e0:	bf 2e       	mov	r11, r31
    17e2:	09 c0       	rjmp	.+18     	; 0x17f6 <vfprintf+0x272>
    17e4:	34 fe       	sbrs	r3, 4
    17e6:	0a c0       	rjmp	.+20     	; 0x17fc <vfprintf+0x278>
    17e8:	29 2f       	mov	r18, r25
    17ea:	26 60       	ori	r18, 0x06	; 6
    17ec:	b2 2e       	mov	r11, r18
    17ee:	06 c0       	rjmp	.+12     	; 0x17fc <vfprintf+0x278>
    17f0:	28 e0       	ldi	r18, 0x08	; 8
    17f2:	30 e0       	ldi	r19, 0x00	; 0
    17f4:	05 c0       	rjmp	.+10     	; 0x1800 <__DATA_REGION_LENGTH__>
    17f6:	20 e1       	ldi	r18, 0x10	; 16
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	02 c0       	rjmp	.+4      	; 0x1800 <__DATA_REGION_LENGTH__>
    17fc:	20 e1       	ldi	r18, 0x10	; 16
    17fe:	32 e0       	ldi	r19, 0x02	; 2
    1800:	f8 01       	movw	r30, r16
    1802:	b7 fe       	sbrs	r11, 7
    1804:	07 c0       	rjmp	.+14     	; 0x1814 <__DATA_REGION_LENGTH__+0x14>
    1806:	60 81       	ld	r22, Z
    1808:	71 81       	ldd	r23, Z+1	; 0x01
    180a:	82 81       	ldd	r24, Z+2	; 0x02
    180c:	93 81       	ldd	r25, Z+3	; 0x03
    180e:	0c 5f       	subi	r16, 0xFC	; 252
    1810:	1f 4f       	sbci	r17, 0xFF	; 255
    1812:	06 c0       	rjmp	.+12     	; 0x1820 <__DATA_REGION_LENGTH__+0x20>
    1814:	60 81       	ld	r22, Z
    1816:	71 81       	ldd	r23, Z+1	; 0x01
    1818:	80 e0       	ldi	r24, 0x00	; 0
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	0e 5f       	subi	r16, 0xFE	; 254
    181e:	1f 4f       	sbci	r17, 0xFF	; 255
    1820:	a3 01       	movw	r20, r6
    1822:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__ultoa_invert>
    1826:	88 2e       	mov	r8, r24
    1828:	86 18       	sub	r8, r6
    182a:	fb 2d       	mov	r31, r11
    182c:	ff 77       	andi	r31, 0x7F	; 127
    182e:	3f 2e       	mov	r3, r31
    1830:	36 fe       	sbrs	r3, 6
    1832:	0d c0       	rjmp	.+26     	; 0x184e <__DATA_REGION_LENGTH__+0x4e>
    1834:	23 2d       	mov	r18, r3
    1836:	2e 7f       	andi	r18, 0xFE	; 254
    1838:	a2 2e       	mov	r10, r18
    183a:	89 14       	cp	r8, r9
    183c:	58 f4       	brcc	.+22     	; 0x1854 <__DATA_REGION_LENGTH__+0x54>
    183e:	34 fe       	sbrs	r3, 4
    1840:	0b c0       	rjmp	.+22     	; 0x1858 <__DATA_REGION_LENGTH__+0x58>
    1842:	32 fc       	sbrc	r3, 2
    1844:	09 c0       	rjmp	.+18     	; 0x1858 <__DATA_REGION_LENGTH__+0x58>
    1846:	83 2d       	mov	r24, r3
    1848:	8e 7e       	andi	r24, 0xEE	; 238
    184a:	a8 2e       	mov	r10, r24
    184c:	05 c0       	rjmp	.+10     	; 0x1858 <__DATA_REGION_LENGTH__+0x58>
    184e:	b8 2c       	mov	r11, r8
    1850:	a3 2c       	mov	r10, r3
    1852:	03 c0       	rjmp	.+6      	; 0x185a <__DATA_REGION_LENGTH__+0x5a>
    1854:	b8 2c       	mov	r11, r8
    1856:	01 c0       	rjmp	.+2      	; 0x185a <__DATA_REGION_LENGTH__+0x5a>
    1858:	b9 2c       	mov	r11, r9
    185a:	a4 fe       	sbrs	r10, 4
    185c:	0f c0       	rjmp	.+30     	; 0x187c <__DATA_REGION_LENGTH__+0x7c>
    185e:	fe 01       	movw	r30, r28
    1860:	e8 0d       	add	r30, r8
    1862:	f1 1d       	adc	r31, r1
    1864:	80 81       	ld	r24, Z
    1866:	80 33       	cpi	r24, 0x30	; 48
    1868:	21 f4       	brne	.+8      	; 0x1872 <__DATA_REGION_LENGTH__+0x72>
    186a:	9a 2d       	mov	r25, r10
    186c:	99 7e       	andi	r25, 0xE9	; 233
    186e:	a9 2e       	mov	r10, r25
    1870:	09 c0       	rjmp	.+18     	; 0x1884 <__DATA_REGION_LENGTH__+0x84>
    1872:	a2 fe       	sbrs	r10, 2
    1874:	06 c0       	rjmp	.+12     	; 0x1882 <__DATA_REGION_LENGTH__+0x82>
    1876:	b3 94       	inc	r11
    1878:	b3 94       	inc	r11
    187a:	04 c0       	rjmp	.+8      	; 0x1884 <__DATA_REGION_LENGTH__+0x84>
    187c:	8a 2d       	mov	r24, r10
    187e:	86 78       	andi	r24, 0x86	; 134
    1880:	09 f0       	breq	.+2      	; 0x1884 <__DATA_REGION_LENGTH__+0x84>
    1882:	b3 94       	inc	r11
    1884:	a3 fc       	sbrc	r10, 3
    1886:	11 c0       	rjmp	.+34     	; 0x18aa <__DATA_REGION_LENGTH__+0xaa>
    1888:	a0 fe       	sbrs	r10, 0
    188a:	06 c0       	rjmp	.+12     	; 0x1898 <__DATA_REGION_LENGTH__+0x98>
    188c:	b2 14       	cp	r11, r2
    188e:	88 f4       	brcc	.+34     	; 0x18b2 <__DATA_REGION_LENGTH__+0xb2>
    1890:	28 0c       	add	r2, r8
    1892:	92 2c       	mov	r9, r2
    1894:	9b 18       	sub	r9, r11
    1896:	0e c0       	rjmp	.+28     	; 0x18b4 <__DATA_REGION_LENGTH__+0xb4>
    1898:	b2 14       	cp	r11, r2
    189a:	60 f4       	brcc	.+24     	; 0x18b4 <__DATA_REGION_LENGTH__+0xb4>
    189c:	b6 01       	movw	r22, r12
    189e:	80 e2       	ldi	r24, 0x20	; 32
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    18a6:	b3 94       	inc	r11
    18a8:	f7 cf       	rjmp	.-18     	; 0x1898 <__DATA_REGION_LENGTH__+0x98>
    18aa:	b2 14       	cp	r11, r2
    18ac:	18 f4       	brcc	.+6      	; 0x18b4 <__DATA_REGION_LENGTH__+0xb4>
    18ae:	2b 18       	sub	r2, r11
    18b0:	02 c0       	rjmp	.+4      	; 0x18b6 <__DATA_REGION_LENGTH__+0xb6>
    18b2:	98 2c       	mov	r9, r8
    18b4:	21 2c       	mov	r2, r1
    18b6:	a4 fe       	sbrs	r10, 4
    18b8:	10 c0       	rjmp	.+32     	; 0x18da <__DATA_REGION_LENGTH__+0xda>
    18ba:	b6 01       	movw	r22, r12
    18bc:	80 e3       	ldi	r24, 0x30	; 48
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    18c4:	a2 fe       	sbrs	r10, 2
    18c6:	17 c0       	rjmp	.+46     	; 0x18f6 <__DATA_REGION_LENGTH__+0xf6>
    18c8:	a1 fc       	sbrc	r10, 1
    18ca:	03 c0       	rjmp	.+6      	; 0x18d2 <__DATA_REGION_LENGTH__+0xd2>
    18cc:	88 e7       	ldi	r24, 0x78	; 120
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	02 c0       	rjmp	.+4      	; 0x18d6 <__DATA_REGION_LENGTH__+0xd6>
    18d2:	88 e5       	ldi	r24, 0x58	; 88
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	b6 01       	movw	r22, r12
    18d8:	0c c0       	rjmp	.+24     	; 0x18f2 <__DATA_REGION_LENGTH__+0xf2>
    18da:	8a 2d       	mov	r24, r10
    18dc:	86 78       	andi	r24, 0x86	; 134
    18de:	59 f0       	breq	.+22     	; 0x18f6 <__DATA_REGION_LENGTH__+0xf6>
    18e0:	a1 fe       	sbrs	r10, 1
    18e2:	02 c0       	rjmp	.+4      	; 0x18e8 <__DATA_REGION_LENGTH__+0xe8>
    18e4:	8b e2       	ldi	r24, 0x2B	; 43
    18e6:	01 c0       	rjmp	.+2      	; 0x18ea <__DATA_REGION_LENGTH__+0xea>
    18e8:	80 e2       	ldi	r24, 0x20	; 32
    18ea:	a7 fc       	sbrc	r10, 7
    18ec:	8d e2       	ldi	r24, 0x2D	; 45
    18ee:	b6 01       	movw	r22, r12
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    18f6:	89 14       	cp	r8, r9
    18f8:	38 f4       	brcc	.+14     	; 0x1908 <__DATA_REGION_LENGTH__+0x108>
    18fa:	b6 01       	movw	r22, r12
    18fc:	80 e3       	ldi	r24, 0x30	; 48
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    1904:	9a 94       	dec	r9
    1906:	f7 cf       	rjmp	.-18     	; 0x18f6 <__DATA_REGION_LENGTH__+0xf6>
    1908:	8a 94       	dec	r8
    190a:	f3 01       	movw	r30, r6
    190c:	e8 0d       	add	r30, r8
    190e:	f1 1d       	adc	r31, r1
    1910:	80 81       	ld	r24, Z
    1912:	b6 01       	movw	r22, r12
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    191a:	81 10       	cpse	r8, r1
    191c:	f5 cf       	rjmp	.-22     	; 0x1908 <__DATA_REGION_LENGTH__+0x108>
    191e:	22 20       	and	r2, r2
    1920:	09 f4       	brne	.+2      	; 0x1924 <__DATA_REGION_LENGTH__+0x124>
    1922:	42 ce       	rjmp	.-892    	; 0x15a8 <vfprintf+0x24>
    1924:	b6 01       	movw	r22, r12
    1926:	80 e2       	ldi	r24, 0x20	; 32
    1928:	90 e0       	ldi	r25, 0x00	; 0
    192a:	0e 94 bc 0c 	call	0x1978	; 0x1978 <fputc>
    192e:	2a 94       	dec	r2
    1930:	f6 cf       	rjmp	.-20     	; 0x191e <__DATA_REGION_LENGTH__+0x11e>
    1932:	f6 01       	movw	r30, r12
    1934:	86 81       	ldd	r24, Z+6	; 0x06
    1936:	97 81       	ldd	r25, Z+7	; 0x07
    1938:	02 c0       	rjmp	.+4      	; 0x193e <__DATA_REGION_LENGTH__+0x13e>
    193a:	8f ef       	ldi	r24, 0xFF	; 255
    193c:	9f ef       	ldi	r25, 0xFF	; 255
    193e:	2b 96       	adiw	r28, 0x0b	; 11
    1940:	e2 e1       	ldi	r30, 0x12	; 18
    1942:	0c 94 ac 0d 	jmp	0x1b58	; 0x1b58 <__epilogue_restores__>

00001946 <__ctype_isfalse>:
    1946:	99 27       	eor	r25, r25
    1948:	88 27       	eor	r24, r24

0000194a <__ctype_istrue>:
    194a:	08 95       	ret

0000194c <strnlen_P>:
    194c:	fc 01       	movw	r30, r24
    194e:	05 90       	lpm	r0, Z+
    1950:	61 50       	subi	r22, 0x01	; 1
    1952:	70 40       	sbci	r23, 0x00	; 0
    1954:	01 10       	cpse	r0, r1
    1956:	d8 f7       	brcc	.-10     	; 0x194e <strnlen_P+0x2>
    1958:	80 95       	com	r24
    195a:	90 95       	com	r25
    195c:	8e 0f       	add	r24, r30
    195e:	9f 1f       	adc	r25, r31
    1960:	08 95       	ret

00001962 <strnlen>:
    1962:	fc 01       	movw	r30, r24
    1964:	61 50       	subi	r22, 0x01	; 1
    1966:	70 40       	sbci	r23, 0x00	; 0
    1968:	01 90       	ld	r0, Z+
    196a:	01 10       	cpse	r0, r1
    196c:	d8 f7       	brcc	.-10     	; 0x1964 <strnlen+0x2>
    196e:	80 95       	com	r24
    1970:	90 95       	com	r25
    1972:	8e 0f       	add	r24, r30
    1974:	9f 1f       	adc	r25, r31
    1976:	08 95       	ret

00001978 <fputc>:
    1978:	0f 93       	push	r16
    197a:	1f 93       	push	r17
    197c:	cf 93       	push	r28
    197e:	df 93       	push	r29
    1980:	fb 01       	movw	r30, r22
    1982:	23 81       	ldd	r18, Z+3	; 0x03
    1984:	21 fd       	sbrc	r18, 1
    1986:	03 c0       	rjmp	.+6      	; 0x198e <fputc+0x16>
    1988:	8f ef       	ldi	r24, 0xFF	; 255
    198a:	9f ef       	ldi	r25, 0xFF	; 255
    198c:	2c c0       	rjmp	.+88     	; 0x19e6 <fputc+0x6e>
    198e:	22 ff       	sbrs	r18, 2
    1990:	16 c0       	rjmp	.+44     	; 0x19be <fputc+0x46>
    1992:	46 81       	ldd	r20, Z+6	; 0x06
    1994:	57 81       	ldd	r21, Z+7	; 0x07
    1996:	24 81       	ldd	r18, Z+4	; 0x04
    1998:	35 81       	ldd	r19, Z+5	; 0x05
    199a:	42 17       	cp	r20, r18
    199c:	53 07       	cpc	r21, r19
    199e:	44 f4       	brge	.+16     	; 0x19b0 <fputc+0x38>
    19a0:	a0 81       	ld	r26, Z
    19a2:	b1 81       	ldd	r27, Z+1	; 0x01
    19a4:	9d 01       	movw	r18, r26
    19a6:	2f 5f       	subi	r18, 0xFF	; 255
    19a8:	3f 4f       	sbci	r19, 0xFF	; 255
    19aa:	20 83       	st	Z, r18
    19ac:	31 83       	std	Z+1, r19	; 0x01
    19ae:	8c 93       	st	X, r24
    19b0:	26 81       	ldd	r18, Z+6	; 0x06
    19b2:	37 81       	ldd	r19, Z+7	; 0x07
    19b4:	2f 5f       	subi	r18, 0xFF	; 255
    19b6:	3f 4f       	sbci	r19, 0xFF	; 255
    19b8:	26 83       	std	Z+6, r18	; 0x06
    19ba:	37 83       	std	Z+7, r19	; 0x07
    19bc:	14 c0       	rjmp	.+40     	; 0x19e6 <fputc+0x6e>
    19be:	8b 01       	movw	r16, r22
    19c0:	ec 01       	movw	r28, r24
    19c2:	fb 01       	movw	r30, r22
    19c4:	00 84       	ldd	r0, Z+8	; 0x08
    19c6:	f1 85       	ldd	r31, Z+9	; 0x09
    19c8:	e0 2d       	mov	r30, r0
    19ca:	09 95       	icall
    19cc:	89 2b       	or	r24, r25
    19ce:	e1 f6       	brne	.-72     	; 0x1988 <fputc+0x10>
    19d0:	d8 01       	movw	r26, r16
    19d2:	16 96       	adiw	r26, 0x06	; 6
    19d4:	8d 91       	ld	r24, X+
    19d6:	9c 91       	ld	r25, X
    19d8:	17 97       	sbiw	r26, 0x07	; 7
    19da:	01 96       	adiw	r24, 0x01	; 1
    19dc:	16 96       	adiw	r26, 0x06	; 6
    19de:	8d 93       	st	X+, r24
    19e0:	9c 93       	st	X, r25
    19e2:	17 97       	sbiw	r26, 0x07	; 7
    19e4:	ce 01       	movw	r24, r28
    19e6:	df 91       	pop	r29
    19e8:	cf 91       	pop	r28
    19ea:	1f 91       	pop	r17
    19ec:	0f 91       	pop	r16
    19ee:	08 95       	ret

000019f0 <__ultoa_invert>:
    19f0:	fa 01       	movw	r30, r20
    19f2:	aa 27       	eor	r26, r26
    19f4:	28 30       	cpi	r18, 0x08	; 8
    19f6:	51 f1       	breq	.+84     	; 0x1a4c <__ultoa_invert+0x5c>
    19f8:	20 31       	cpi	r18, 0x10	; 16
    19fa:	81 f1       	breq	.+96     	; 0x1a5c <__ultoa_invert+0x6c>
    19fc:	e8 94       	clt
    19fe:	6f 93       	push	r22
    1a00:	6e 7f       	andi	r22, 0xFE	; 254
    1a02:	6e 5f       	subi	r22, 0xFE	; 254
    1a04:	7f 4f       	sbci	r23, 0xFF	; 255
    1a06:	8f 4f       	sbci	r24, 0xFF	; 255
    1a08:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0a:	af 4f       	sbci	r26, 0xFF	; 255
    1a0c:	b1 e0       	ldi	r27, 0x01	; 1
    1a0e:	3e d0       	rcall	.+124    	; 0x1a8c <__ultoa_invert+0x9c>
    1a10:	b4 e0       	ldi	r27, 0x04	; 4
    1a12:	3c d0       	rcall	.+120    	; 0x1a8c <__ultoa_invert+0x9c>
    1a14:	67 0f       	add	r22, r23
    1a16:	78 1f       	adc	r23, r24
    1a18:	89 1f       	adc	r24, r25
    1a1a:	9a 1f       	adc	r25, r26
    1a1c:	a1 1d       	adc	r26, r1
    1a1e:	68 0f       	add	r22, r24
    1a20:	79 1f       	adc	r23, r25
    1a22:	8a 1f       	adc	r24, r26
    1a24:	91 1d       	adc	r25, r1
    1a26:	a1 1d       	adc	r26, r1
    1a28:	6a 0f       	add	r22, r26
    1a2a:	71 1d       	adc	r23, r1
    1a2c:	81 1d       	adc	r24, r1
    1a2e:	91 1d       	adc	r25, r1
    1a30:	a1 1d       	adc	r26, r1
    1a32:	20 d0       	rcall	.+64     	; 0x1a74 <__ultoa_invert+0x84>
    1a34:	09 f4       	brne	.+2      	; 0x1a38 <__ultoa_invert+0x48>
    1a36:	68 94       	set
    1a38:	3f 91       	pop	r19
    1a3a:	2a e0       	ldi	r18, 0x0A	; 10
    1a3c:	26 9f       	mul	r18, r22
    1a3e:	11 24       	eor	r1, r1
    1a40:	30 19       	sub	r19, r0
    1a42:	30 5d       	subi	r19, 0xD0	; 208
    1a44:	31 93       	st	Z+, r19
    1a46:	de f6       	brtc	.-74     	; 0x19fe <__ultoa_invert+0xe>
    1a48:	cf 01       	movw	r24, r30
    1a4a:	08 95       	ret
    1a4c:	46 2f       	mov	r20, r22
    1a4e:	47 70       	andi	r20, 0x07	; 7
    1a50:	40 5d       	subi	r20, 0xD0	; 208
    1a52:	41 93       	st	Z+, r20
    1a54:	b3 e0       	ldi	r27, 0x03	; 3
    1a56:	0f d0       	rcall	.+30     	; 0x1a76 <__ultoa_invert+0x86>
    1a58:	c9 f7       	brne	.-14     	; 0x1a4c <__ultoa_invert+0x5c>
    1a5a:	f6 cf       	rjmp	.-20     	; 0x1a48 <__ultoa_invert+0x58>
    1a5c:	46 2f       	mov	r20, r22
    1a5e:	4f 70       	andi	r20, 0x0F	; 15
    1a60:	40 5d       	subi	r20, 0xD0	; 208
    1a62:	4a 33       	cpi	r20, 0x3A	; 58
    1a64:	18 f0       	brcs	.+6      	; 0x1a6c <__ultoa_invert+0x7c>
    1a66:	49 5d       	subi	r20, 0xD9	; 217
    1a68:	31 fd       	sbrc	r19, 1
    1a6a:	40 52       	subi	r20, 0x20	; 32
    1a6c:	41 93       	st	Z+, r20
    1a6e:	02 d0       	rcall	.+4      	; 0x1a74 <__ultoa_invert+0x84>
    1a70:	a9 f7       	brne	.-22     	; 0x1a5c <__ultoa_invert+0x6c>
    1a72:	ea cf       	rjmp	.-44     	; 0x1a48 <__ultoa_invert+0x58>
    1a74:	b4 e0       	ldi	r27, 0x04	; 4
    1a76:	a6 95       	lsr	r26
    1a78:	97 95       	ror	r25
    1a7a:	87 95       	ror	r24
    1a7c:	77 95       	ror	r23
    1a7e:	67 95       	ror	r22
    1a80:	ba 95       	dec	r27
    1a82:	c9 f7       	brne	.-14     	; 0x1a76 <__ultoa_invert+0x86>
    1a84:	00 97       	sbiw	r24, 0x00	; 0
    1a86:	61 05       	cpc	r22, r1
    1a88:	71 05       	cpc	r23, r1
    1a8a:	08 95       	ret
    1a8c:	9b 01       	movw	r18, r22
    1a8e:	ac 01       	movw	r20, r24
    1a90:	0a 2e       	mov	r0, r26
    1a92:	06 94       	lsr	r0
    1a94:	57 95       	ror	r21
    1a96:	47 95       	ror	r20
    1a98:	37 95       	ror	r19
    1a9a:	27 95       	ror	r18
    1a9c:	ba 95       	dec	r27
    1a9e:	c9 f7       	brne	.-14     	; 0x1a92 <__ultoa_invert+0xa2>
    1aa0:	62 0f       	add	r22, r18
    1aa2:	73 1f       	adc	r23, r19
    1aa4:	84 1f       	adc	r24, r20
    1aa6:	95 1f       	adc	r25, r21
    1aa8:	a0 1d       	adc	r26, r0
    1aaa:	08 95       	ret

00001aac <__mulsi3>:
    1aac:	db 01       	movw	r26, r22
    1aae:	8f 93       	push	r24
    1ab0:	9f 93       	push	r25
    1ab2:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__muluhisi3>
    1ab6:	bf 91       	pop	r27
    1ab8:	af 91       	pop	r26
    1aba:	a2 9f       	mul	r26, r18
    1abc:	80 0d       	add	r24, r0
    1abe:	91 1d       	adc	r25, r1
    1ac0:	a3 9f       	mul	r26, r19
    1ac2:	90 0d       	add	r25, r0
    1ac4:	b2 9f       	mul	r27, r18
    1ac6:	90 0d       	add	r25, r0
    1ac8:	11 24       	eor	r1, r1
    1aca:	08 95       	ret

00001acc <__udivmodsi4>:
    1acc:	a1 e2       	ldi	r26, 0x21	; 33
    1ace:	1a 2e       	mov	r1, r26
    1ad0:	aa 1b       	sub	r26, r26
    1ad2:	bb 1b       	sub	r27, r27
    1ad4:	fd 01       	movw	r30, r26
    1ad6:	0d c0       	rjmp	.+26     	; 0x1af2 <__udivmodsi4_ep>

00001ad8 <__udivmodsi4_loop>:
    1ad8:	aa 1f       	adc	r26, r26
    1ada:	bb 1f       	adc	r27, r27
    1adc:	ee 1f       	adc	r30, r30
    1ade:	ff 1f       	adc	r31, r31
    1ae0:	a2 17       	cp	r26, r18
    1ae2:	b3 07       	cpc	r27, r19
    1ae4:	e4 07       	cpc	r30, r20
    1ae6:	f5 07       	cpc	r31, r21
    1ae8:	20 f0       	brcs	.+8      	; 0x1af2 <__udivmodsi4_ep>
    1aea:	a2 1b       	sub	r26, r18
    1aec:	b3 0b       	sbc	r27, r19
    1aee:	e4 0b       	sbc	r30, r20
    1af0:	f5 0b       	sbc	r31, r21

00001af2 <__udivmodsi4_ep>:
    1af2:	66 1f       	adc	r22, r22
    1af4:	77 1f       	adc	r23, r23
    1af6:	88 1f       	adc	r24, r24
    1af8:	99 1f       	adc	r25, r25
    1afa:	1a 94       	dec	r1
    1afc:	69 f7       	brne	.-38     	; 0x1ad8 <__udivmodsi4_loop>
    1afe:	60 95       	com	r22
    1b00:	70 95       	com	r23
    1b02:	80 95       	com	r24
    1b04:	90 95       	com	r25
    1b06:	9b 01       	movw	r18, r22
    1b08:	ac 01       	movw	r20, r24
    1b0a:	bd 01       	movw	r22, r26
    1b0c:	cf 01       	movw	r24, r30
    1b0e:	08 95       	ret

00001b10 <__muluhisi3>:
    1b10:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__umulhisi3>
    1b14:	a5 9f       	mul	r26, r21
    1b16:	90 0d       	add	r25, r0
    1b18:	b4 9f       	mul	r27, r20
    1b1a:	90 0d       	add	r25, r0
    1b1c:	a4 9f       	mul	r26, r20
    1b1e:	80 0d       	add	r24, r0
    1b20:	91 1d       	adc	r25, r1
    1b22:	11 24       	eor	r1, r1
    1b24:	08 95       	ret

00001b26 <__prologue_saves__>:
    1b26:	2f 92       	push	r2
    1b28:	3f 92       	push	r3
    1b2a:	4f 92       	push	r4
    1b2c:	5f 92       	push	r5
    1b2e:	6f 92       	push	r6
    1b30:	7f 92       	push	r7
    1b32:	8f 92       	push	r8
    1b34:	9f 92       	push	r9
    1b36:	af 92       	push	r10
    1b38:	bf 92       	push	r11
    1b3a:	cf 92       	push	r12
    1b3c:	df 92       	push	r13
    1b3e:	ef 92       	push	r14
    1b40:	ff 92       	push	r15
    1b42:	0f 93       	push	r16
    1b44:	1f 93       	push	r17
    1b46:	cf 93       	push	r28
    1b48:	df 93       	push	r29
    1b4a:	cd b7       	in	r28, 0x3d	; 61
    1b4c:	de b7       	in	r29, 0x3e	; 62
    1b4e:	ca 1b       	sub	r28, r26
    1b50:	db 0b       	sbc	r29, r27
    1b52:	cd bf       	out	0x3d, r28	; 61
    1b54:	de bf       	out	0x3e, r29	; 62
    1b56:	09 94       	ijmp

00001b58 <__epilogue_restores__>:
    1b58:	2a 88       	ldd	r2, Y+18	; 0x12
    1b5a:	39 88       	ldd	r3, Y+17	; 0x11
    1b5c:	48 88       	ldd	r4, Y+16	; 0x10
    1b5e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b60:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b62:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b64:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b66:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b68:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b6a:	b9 84       	ldd	r11, Y+9	; 0x09
    1b6c:	c8 84       	ldd	r12, Y+8	; 0x08
    1b6e:	df 80       	ldd	r13, Y+7	; 0x07
    1b70:	ee 80       	ldd	r14, Y+6	; 0x06
    1b72:	fd 80       	ldd	r15, Y+5	; 0x05
    1b74:	0c 81       	ldd	r16, Y+4	; 0x04
    1b76:	1b 81       	ldd	r17, Y+3	; 0x03
    1b78:	aa 81       	ldd	r26, Y+2	; 0x02
    1b7a:	b9 81       	ldd	r27, Y+1	; 0x01
    1b7c:	ce 0f       	add	r28, r30
    1b7e:	d1 1d       	adc	r29, r1
    1b80:	cd bf       	out	0x3d, r28	; 61
    1b82:	de bf       	out	0x3e, r29	; 62
    1b84:	ed 01       	movw	r28, r26
    1b86:	08 95       	ret

00001b88 <_exit>:
    1b88:	f8 94       	cli

00001b8a <__stop_program>:
    1b8a:	ff cf       	rjmp	.-2      	; 0x1b8a <__stop_program>
