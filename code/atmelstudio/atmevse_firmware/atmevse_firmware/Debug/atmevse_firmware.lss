
atmevse_firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00802800  00001ccf  00001b83  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001792  00000200  00000200  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000033d  00005992  00001992  00001846  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000f4  00802922  00802922  00001ca5  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001ca5  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d04  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000178  00000000  00000000  00001d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004a13  00000000  00000000  00001ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000028ad  00000000  00000000  000068cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001030  00000000  00000000  0000917c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003e0  00000000  00000000  0000a1ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000021ff  00000000  00000000  0000a58c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000c3a  00000000  00000000  0000c78b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000148  00000000  00000000  0000d3c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000200 <__vectors>:
     200:	0c 94 48 01 	jmp	0x290	; 0x290 <__ctors_end>
     204:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     208:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     20c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     210:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     214:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     218:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     21c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     220:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     224:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     228:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     22c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     230:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     234:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     238:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     23c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     240:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     244:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     248:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     24c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     250:	0c 94 c0 03 	jmp	0x780	; 0x780 <__vector_20>
     254:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     258:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     25c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     260:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     264:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     268:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     26c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     270:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     274:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     278:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     27c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     280:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     284:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     288:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
     28c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>

00000290 <__ctors_end>:
     290:	11 24       	eor	r1, r1
     292:	1f be       	out	0x3f, r1	; 63
     294:	cf ef       	ldi	r28, 0xFF	; 255
     296:	cd bf       	out	0x3d, r28	; 61
     298:	df e3       	ldi	r29, 0x3F	; 63
     29a:	de bf       	out	0x3e, r29	; 62

0000029c <__do_copy_data>:
     29c:	19 e2       	ldi	r17, 0x29	; 41
     29e:	a0 e0       	ldi	r26, 0x00	; 0
     2a0:	b8 e2       	ldi	r27, 0x28	; 40
     2a2:	ef ec       	ldi	r30, 0xCF	; 207
     2a4:	fc e1       	ldi	r31, 0x1C	; 28
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x10>
     2a8:	05 90       	lpm	r0, Z+
     2aa:	0d 92       	st	X+, r0
     2ac:	a2 32       	cpi	r26, 0x22	; 34
     2ae:	b1 07       	cpc	r27, r17
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0xc>

000002b2 <__do_clear_bss>:
     2b2:	2a e2       	ldi	r18, 0x2A	; 42
     2b4:	a2 e2       	ldi	r26, 0x22	; 34
     2b6:	b9 e2       	ldi	r27, 0x29	; 41
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
     2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
     2bc:	a6 31       	cpi	r26, 0x16	; 22
     2be:	b2 07       	cpc	r27, r18
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
     2c2:	0e 94 d7 03 	call	0x7ae	; 0x7ae <main>
     2c6:	0c 94 c7 0c 	jmp	0x198e	; 0x198e <_exit>

000002ca <__bad_interrupt>:
     2ca:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

000002ce <led_toggle>:
        return 0;        
    } 
    else {
        return -1;
    }
}
     2ce:	88 e0       	ldi	r24, 0x08	; 8
     2d0:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x7f4467>
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	08 95       	ret

000002d8 <led_on>:
     2d8:	88 e0       	ldi	r24, 0x08	; 8
     2da:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__TEXT_REGION_LENGTH__+0x7f4465>
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	08 95       	ret

000002e2 <led_off>:
     2e2:	88 e0       	ldi	r24, 0x08	; 8
     2e4:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x7f4466>
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	08 95       	ret

000002ec <pwm_on>:
     2ec:	e0 e0       	ldi	r30, 0x00	; 0
     2ee:	fa e0       	ldi	r31, 0x0A	; 10
     2f0:	81 81       	ldd	r24, Z+1	; 0x01
     2f2:	80 64       	ori	r24, 0x40	; 64
     2f4:	81 83       	std	Z+1, r24	; 0x01
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	08 95       	ret

000002fa <pwm_off>:
     2fa:	e0 e0       	ldi	r30, 0x00	; 0
     2fc:	fa e0       	ldi	r31, 0x0A	; 10
     2fe:	81 81       	ldd	r24, Z+1	; 0x01
     300:	8f 7b       	andi	r24, 0xBF	; 191
     302:	81 83       	std	Z+1, r24	; 0x01
     304:	84 e0       	ldi	r24, 0x04	; 4
     306:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	08 95       	ret

0000030e <ssr1_on>:
     30e:	80 e4       	ldi	r24, 0x40	; 64
     310:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	08 95       	ret

00000318 <ssr1_off>:
     318:	80 e4       	ldi	r24, 0x40	; 64
     31a:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	08 95       	ret

00000322 <ssr2_on>:
     322:	80 e2       	ldi	r24, 0x20	; 32
     324:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	08 95       	ret

0000032c <ssr2_off>:
     32c:	80 e2       	ldi	r24, 0x20	; 32
     32e:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	08 95       	ret

00000336 <ssr3_on>:
     336:	80 e1       	ldi	r24, 0x10	; 16
     338:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	08 95       	ret

00000340 <ssr3_off>:
     340:	80 e1       	ldi	r24, 0x10	; 16
     342:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     346:	80 e0       	ldi	r24, 0x00	; 0
     348:	08 95       	ret

0000034a <lock_off>:
     34a:	80 e8       	ldi	r24, 0x80	; 128
     34c:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     350:	84 e0       	ldi	r24, 0x04	; 4
     352:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	08 95       	ret

0000035a <relay_on>:
     35a:	88 e0       	ldi	r24, 0x08	; 8
     35c:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	08 95       	ret

00000364 <relay_off>:
     364:	88 e0       	ldi	r24, 0x08	; 8
     366:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	08 95       	ret

0000036e <readCP>:
     36e:	e0 e0       	ldi	r30, 0x00	; 0
     370:	f6 e0       	ldi	r31, 0x06	; 6
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	86 83       	std	Z+6, r24	; 0x06
     376:	80 87       	std	Z+8, r24	; 0x08
     378:	83 85       	ldd	r24, Z+11	; 0x0b
     37a:	80 ff       	sbrs	r24, 0
     37c:	fd cf       	rjmp	.-6      	; 0x378 <readCP+0xa>
     37e:	e0 e0       	ldi	r30, 0x00	; 0
     380:	f6 e0       	ldi	r31, 0x06	; 6
     382:	80 89       	ldd	r24, Z+16	; 0x10
     384:	91 89       	ldd	r25, Z+17	; 0x11
     386:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <cpVal>
     38a:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <cpVal+0x1>
     38e:	21 e0       	ldi	r18, 0x01	; 1
     390:	23 87       	std	Z+11, r18	; 0x0b
     392:	85 3d       	cpi	r24, 0xD5	; 213
     394:	23 e0       	ldi	r18, 0x03	; 3
     396:	92 07       	cpc	r25, r18
     398:	20 f0       	brcs	.+8      	; 0x3a2 <readCP+0x34>
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3a0:	1e c0       	rjmp	.+60     	; 0x3de <readCP+0x70>
     3a2:	9c 01       	movw	r18, r24
     3a4:	2d 55       	subi	r18, 0x5D	; 93
     3a6:	33 40       	sbci	r19, 0x03	; 3
     3a8:	26 33       	cpi	r18, 0x36	; 54
     3aa:	31 05       	cpc	r19, r1
     3ac:	20 f4       	brcc	.+8      	; 0x3b6 <readCP+0x48>
     3ae:	82 e0       	ldi	r24, 0x02	; 2
     3b0:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3b4:	14 c0       	rjmp	.+40     	; 0x3de <readCP+0x70>
     3b6:	9c 01       	movw	r18, r24
     3b8:	21 5d       	subi	r18, 0xD1	; 209
     3ba:	32 40       	sbci	r19, 0x02	; 2
     3bc:	2f 34       	cpi	r18, 0x4F	; 79
     3be:	31 05       	cpc	r19, r1
     3c0:	20 f4       	brcc	.+8      	; 0x3ca <readCP+0x5c>
     3c2:	83 e0       	ldi	r24, 0x03	; 3
     3c4:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3c8:	0a c0       	rjmp	.+20     	; 0x3de <readCP+0x70>
     3ca:	4a 97       	sbiw	r24, 0x1a	; 26
     3cc:	85 34       	cpi	r24, 0x45	; 69
     3ce:	91 05       	cpc	r25, r1
     3d0:	20 f4       	brcc	.+8      	; 0x3da <readCP+0x6c>
     3d2:	84 e0       	ldi	r24, 0x04	; 4
     3d4:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <pilot>
     3d8:	02 c0       	rjmp	.+4      	; 0x3de <readCP+0x70>
     3da:	10 92 3b 29 	sts	0x293B, r1	; 0x80293b <pilot>
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	08 95       	ret

000003e2 <readPP>:
     3e2:	e0 e0       	ldi	r30, 0x00	; 0
     3e4:	f6 e0       	ldi	r31, 0x06	; 6
     3e6:	16 82       	std	Z+6, r1	; 0x06
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	80 87       	std	Z+8, r24	; 0x08
     3ec:	83 85       	ldd	r24, Z+11	; 0x0b
     3ee:	80 ff       	sbrs	r24, 0
     3f0:	fd cf       	rjmp	.-6      	; 0x3ec <readPP+0xa>
     3f2:	e0 e0       	ldi	r30, 0x00	; 0
     3f4:	f6 e0       	ldi	r31, 0x06	; 6
     3f6:	80 89       	ldd	r24, Z+16	; 0x10
     3f8:	91 89       	ldd	r25, Z+17	; 0x11
     3fa:	80 93 3e 29 	sts	0x293E, r24	; 0x80293e <ppVal>
     3fe:	90 93 3f 29 	sts	0x293F, r25	; 0x80293f <ppVal+0x1>
     402:	21 e0       	ldi	r18, 0x01	; 1
     404:	23 87       	std	Z+11, r18	; 0x0b
     406:	9c 01       	movw	r18, r24
     408:	2b 58       	subi	r18, 0x8B	; 139
     40a:	31 40       	sbci	r19, 0x01	; 1
     40c:	27 32       	cpi	r18, 0x27	; 39
     40e:	31 05       	cpc	r19, r1
     410:	20 f4       	brcc	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     412:	80 e1       	ldi	r24, 0x10	; 16
     414:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     418:	15 c0       	rjmp	.+42     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     41a:	9c 01       	movw	r18, r24
     41c:	20 5b       	subi	r18, 0xB0	; 176
     41e:	31 09       	sbc	r19, r1
     420:	21 31       	cpi	r18, 0x11	; 17
     422:	31 05       	cpc	r19, r1
     424:	20 f4       	brcc	.+8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     426:	80 e2       	ldi	r24, 0x20	; 32
     428:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     42c:	0b c0       	rjmp	.+22     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     42e:	89 55       	subi	r24, 0x59	; 89
     430:	91 09       	sbc	r25, r1
     432:	09 97       	sbiw	r24, 0x09	; 9
     434:	20 f0       	brcs	.+8      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     436:	8d e0       	ldi	r24, 0x0D	; 13
     438:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     43c:	03 c0       	rjmp	.+6      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     43e:	8f e3       	ldi	r24, 0x3F	; 63
     440:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     444:	80 91 2d 29 	lds	r24, 0x292D	; 0x80292d <cableConf>
     448:	88 23       	and	r24, r24
     44a:	21 f0       	breq	.+8      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     44c:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <maxCurrent>
     450:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <maxCapacity>
     454:	80 e0       	ldi	r24, 0x00	; 0
     456:	08 95       	ret

00000458 <readCT>:
     458:	e0 e0       	ldi	r30, 0x00	; 0
     45a:	f6 e0       	ldi	r31, 0x06	; 6
     45c:	85 e0       	ldi	r24, 0x05	; 5
     45e:	86 83       	std	Z+6, r24	; 0x06
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	80 87       	std	Z+8, r24	; 0x08
     464:	83 85       	ldd	r24, Z+11	; 0x0b
     466:	80 ff       	sbrs	r24, 0
     468:	fd cf       	rjmp	.-6      	; 0x464 <readCT+0xc>
     46a:	e0 e0       	ldi	r30, 0x00	; 0
     46c:	f6 e0       	ldi	r31, 0x06	; 6
     46e:	80 89       	ldd	r24, Z+16	; 0x10
     470:	91 89       	ldd	r25, Z+17	; 0x11
     472:	80 93 46 29 	sts	0x2946, r24	; 0x802946 <ctVal>
     476:	90 93 47 29 	sts	0x2947, r25	; 0x802947 <ctVal+0x1>
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	83 87       	std	Z+11, r24	; 0x0b
     47e:	96 e0       	ldi	r25, 0x06	; 6
     480:	96 83       	std	Z+6, r25	; 0x06
     482:	80 87       	std	Z+8, r24	; 0x08
     484:	83 85       	ldd	r24, Z+11	; 0x0b
     486:	80 ff       	sbrs	r24, 0
     488:	fd cf       	rjmp	.-6      	; 0x484 <readCT+0x2c>
     48a:	e0 e0       	ldi	r30, 0x00	; 0
     48c:	f6 e0       	ldi	r31, 0x06	; 6
     48e:	80 89       	ldd	r24, Z+16	; 0x10
     490:	91 89       	ldd	r25, Z+17	; 0x11
     492:	80 93 48 29 	sts	0x2948, r24	; 0x802948 <ctVal+0x2>
     496:	90 93 49 29 	sts	0x2949, r25	; 0x802949 <ctVal+0x3>
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	83 87       	std	Z+11, r24	; 0x0b
     49e:	97 e0       	ldi	r25, 0x07	; 7
     4a0:	96 83       	std	Z+6, r25	; 0x06
     4a2:	80 87       	std	Z+8, r24	; 0x08
     4a4:	83 85       	ldd	r24, Z+11	; 0x0b
     4a6:	80 ff       	sbrs	r24, 0
     4a8:	fd cf       	rjmp	.-6      	; 0x4a4 <readCT+0x4c>
     4aa:	e0 e0       	ldi	r30, 0x00	; 0
     4ac:	f6 e0       	ldi	r31, 0x06	; 6
     4ae:	80 89       	ldd	r24, Z+16	; 0x10
     4b0:	91 89       	ldd	r25, Z+17	; 0x11
     4b2:	80 93 4a 29 	sts	0x294A, r24	; 0x80294a <ctVal+0x4>
     4b6:	90 93 4b 29 	sts	0x294B, r25	; 0x80294b <ctVal+0x5>
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	83 87       	std	Z+11, r24	; 0x0b
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	08 95       	ret

000004c2 <lock_cable>:
     4c2:	80 e8       	ldi	r24, 0x80	; 128
     4c4:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
     4c8:	84 e0       	ldi	r24, 0x04	; 4
     4ca:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
     4ce:	2f eb       	ldi	r18, 0xBF	; 191
     4d0:	87 e2       	ldi	r24, 0x27	; 39
     4d2:	99 e0       	ldi	r25, 0x09	; 9
     4d4:	21 50       	subi	r18, 0x01	; 1
     4d6:	80 40       	sbci	r24, 0x00	; 0
     4d8:	90 40       	sbci	r25, 0x00	; 0
     4da:	e1 f7       	brne	.-8      	; 0x4d4 <lock_cable+0x12>
     4dc:	00 c0       	rjmp	.+0      	; 0x4de <lock_cable+0x1c>
     4de:	00 00       	nop
     4e0:	0e 94 a5 01 	call	0x34a	; 0x34a <lock_off>
     4e4:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     4e8:	91 e0       	ldi	r25, 0x01	; 1
     4ea:	28 2f       	mov	r18, r24
     4ec:	24 70       	andi	r18, 0x04	; 4
     4ee:	82 ff       	sbrs	r24, 2
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     4f6:	21 11       	cpse	r18, r1
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <lock_cable+0x3c>
     4fa:	8e ef       	ldi	r24, 0xFE	; 254
     4fc:	08 95       	ret
     4fe:	80 e0       	ldi	r24, 0x00	; 0
     500:	08 95       	ret

00000502 <unlock_cable>:
     502:	80 e8       	ldi	r24, 0x80	; 128
     504:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
     508:	84 e0       	ldi	r24, 0x04	; 4
     50a:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
     50e:	2f eb       	ldi	r18, 0xBF	; 191
     510:	87 e2       	ldi	r24, 0x27	; 39
     512:	99 e0       	ldi	r25, 0x09	; 9
     514:	21 50       	subi	r18, 0x01	; 1
     516:	80 40       	sbci	r24, 0x00	; 0
     518:	90 40       	sbci	r25, 0x00	; 0
     51a:	e1 f7       	brne	.-8      	; 0x514 <unlock_cable+0x12>
     51c:	00 c0       	rjmp	.+0      	; 0x51e <unlock_cable+0x1c>
     51e:	00 00       	nop
     520:	0e 94 a5 01 	call	0x34a	; 0x34a <lock_off>
     524:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__TEXT_REGION_LENGTH__+0x7f4468>
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	28 2f       	mov	r18, r24
     52c:	24 70       	andi	r18, 0x04	; 4
     52e:	82 ff       	sbrs	r24, 2
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <lockstate>
     536:	22 23       	and	r18, r18
     538:	11 f0       	breq	.+4      	; 0x53e <unlock_cable+0x3c>
     53a:	8e ef       	ldi	r24, 0xFE	; 254
     53c:	08 95       	ret
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	08 95       	ret

00000542 <readTemp>:
     542:	e0 e0       	ldi	r30, 0x00	; 0
     544:	f6 e0       	ldi	r31, 0x06	; 6
     546:	80 81       	ld	r24, Z
     548:	8e 7f       	andi	r24, 0xFE	; 254
     54a:	80 83       	st	Z, r24
     54c:	82 81       	ldd	r24, Z+2	; 0x02
     54e:	82 83       	std	Z+2, r24	; 0x02
     550:	8e e1       	ldi	r24, 0x1E	; 30
     552:	86 83       	std	Z+6, r24	; 0x06
     554:	83 81       	ldd	r24, Z+3	; 0x03
     556:	80 62       	ori	r24, 0x20	; 32
     558:	83 83       	std	Z+3, r24	; 0x03
     55a:	80 81       	ld	r24, Z
     55c:	81 60       	ori	r24, 0x01	; 1
     55e:	80 83       	st	Z, r24
     560:	89 ef       	ldi	r24, 0xF9	; 249
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	01 97       	sbiw	r24, 0x01	; 1
     566:	f1 f7       	brne	.-4      	; 0x564 <readTemp+0x22>
     568:	00 c0       	rjmp	.+0      	; 0x56a <readTemp+0x28>
     56a:	00 00       	nop
     56c:	81 e0       	ldi	r24, 0x01	; 1
     56e:	80 87       	std	Z+8, r24	; 0x08
     570:	83 85       	ldd	r24, Z+11	; 0x0b
     572:	80 ff       	sbrs	r24, 0
     574:	fd cf       	rjmp	.-6      	; 0x570 <readTemp+0x2e>
     576:	e0 e0       	ldi	r30, 0x00	; 0
     578:	f6 e0       	ldi	r31, 0x06	; 6
     57a:	20 89       	ldd	r18, Z+16	; 0x10
     57c:	31 89       	ldd	r19, Z+17	; 0x11
     57e:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <sigrow_offset>
     582:	28 1b       	sub	r18, r24
     584:	31 09       	sbc	r19, r1
     586:	87 fd       	sbrc	r24, 7
     588:	33 95       	inc	r19
     58a:	a0 91 24 29 	lds	r26, 0x2924	; 0x802924 <sigrow_gain>
     58e:	b0 e0       	ldi	r27, 0x00	; 0
     590:	0e 94 02 08 	call	0x1004	; 0x1004 <__umulhisi3>
     594:	dc 01       	movw	r26, r24
     596:	cb 01       	movw	r24, r22
     598:	80 58       	subi	r24, 0x80	; 128
     59a:	9f 4f       	sbci	r25, 0xFF	; 255
     59c:	af 4f       	sbci	r26, 0xFF	; 255
     59e:	bf 4f       	sbci	r27, 0xFF	; 255
     5a0:	89 2f       	mov	r24, r25
     5a2:	9a 2f       	mov	r25, r26
     5a4:	ab 2f       	mov	r26, r27
     5a6:	bb 27       	eor	r27, r27
     5a8:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <temperature>
     5ac:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <temperature+0x1>
     5b0:	80 81       	ld	r24, Z
     5b2:	8e 7f       	andi	r24, 0xFE	; 254
     5b4:	80 83       	st	Z, r24
     5b6:	82 81       	ldd	r24, Z+2	; 0x02
     5b8:	80 61       	ori	r24, 0x10	; 16
     5ba:	82 83       	std	Z+2, r24	; 0x02
     5bc:	83 81       	ldd	r24, Z+3	; 0x03
     5be:	83 83       	std	Z+3, r24	; 0x03
     5c0:	80 81       	ld	r24, Z
     5c2:	81 60       	ori	r24, 0x01	; 1
     5c4:	80 83       	st	Z, r24
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	83 87       	std	Z+11, r24	; 0x0b
     5ca:	80 e0       	ldi	r24, 0x00	; 0
     5cc:	08 95       	ret

000005ce <all_ssr_off>:
     5ce:	e0 e0       	ldi	r30, 0x00	; 0
     5d0:	f4 e0       	ldi	r31, 0x04	; 4
     5d2:	80 e4       	ldi	r24, 0x40	; 64
     5d4:	86 83       	std	Z+6, r24	; 0x06
     5d6:	80 e2       	ldi	r24, 0x20	; 32
     5d8:	86 83       	std	Z+6, r24	; 0x06
     5da:	80 e1       	ldi	r24, 0x10	; 16
     5dc:	86 83       	std	Z+6, r24	; 0x06
     5de:	80 e0       	ldi	r24, 0x00	; 0
     5e0:	08 95       	ret

000005e2 <all_ssr_on>:
     5e2:	e0 e0       	ldi	r30, 0x00	; 0
     5e4:	f4 e0       	ldi	r31, 0x04	; 4
     5e6:	80 e4       	ldi	r24, 0x40	; 64
     5e8:	85 83       	std	Z+5, r24	; 0x05
     5ea:	80 e2       	ldi	r24, 0x20	; 32
     5ec:	85 83       	std	Z+5, r24	; 0x05
     5ee:	80 e1       	ldi	r24, 0x10	; 16
     5f0:	85 83       	std	Z+5, r24	; 0x05
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	08 95       	ret

000005f6 <init>:
     5f6:	cf 93       	push	r28
     5f8:	df 93       	push	r29
     5fa:	98 ed       	ldi	r25, 0xD8	; 216
     5fc:	94 bf       	out	0x34, r25	; 52
     5fe:	e0 e1       	ldi	r30, 0x10	; 16
     600:	f1 e0       	ldi	r31, 0x01	; 1
     602:	80 81       	ld	r24, Z
     604:	8f 7b       	andi	r24, 0xBF	; 191
     606:	80 83       	st	Z, r24
     608:	94 bf       	out	0x34, r25	; 52
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
     610:	8f ef       	ldi	r24, 0xFF	; 255
     612:	9f ef       	ldi	r25, 0xFF	; 255
     614:	01 97       	sbiw	r24, 0x01	; 1
     616:	f1 f7       	brne	.-4      	; 0x614 <init+0x1e>
     618:	e0 e6       	ldi	r30, 0x60	; 96
     61a:	f4 e0       	ldi	r31, 0x04	; 4
     61c:	88 e0       	ldi	r24, 0x08	; 8
     61e:	81 83       	std	Z+1, r24	; 0x01
     620:	90 e1       	ldi	r25, 0x10	; 16
     622:	92 83       	std	Z+2, r25	; 0x02
     624:	94 89       	ldd	r25, Z+20	; 0x14
     626:	92 60       	ori	r25, 0x02	; 2
     628:	94 8b       	std	Z+20, r25	; 0x14
     62a:	94 89       	ldd	r25, Z+20	; 0x14
     62c:	97 7f       	andi	r25, 0xF7	; 247
     62e:	94 8b       	std	Z+20, r25	; 0x14
     630:	a0 e0       	ldi	r26, 0x00	; 0
     632:	b4 e0       	ldi	r27, 0x04	; 4
     634:	90 e7       	ldi	r25, 0x70	; 112
     636:	11 96       	adiw	r26, 0x01	; 1
     638:	9c 93       	st	X, r25
     63a:	11 97       	sbiw	r26, 0x01	; 1
     63c:	16 96       	adiw	r26, 0x06	; 6
     63e:	9c 93       	st	X, r25
     640:	16 97       	sbiw	r26, 0x06	; 6
     642:	11 96       	adiw	r26, 0x01	; 1
     644:	8c 93       	st	X, r24
     646:	11 97       	sbiw	r26, 0x01	; 1
     648:	16 96       	adiw	r26, 0x06	; 6
     64a:	8c 93       	st	X, r24
     64c:	16 97       	sbiw	r26, 0x06	; 6
     64e:	90 e8       	ldi	r25, 0x80	; 128
     650:	11 96       	adiw	r26, 0x01	; 1
     652:	9c 93       	st	X, r25
     654:	11 97       	sbiw	r26, 0x01	; 1
     656:	15 96       	adiw	r26, 0x05	; 5
     658:	9c 93       	st	X, r25
     65a:	15 97       	sbiw	r26, 0x05	; 5
     65c:	c0 e4       	ldi	r28, 0x40	; 64
     65e:	d4 e0       	ldi	r29, 0x04	; 4
     660:	84 e0       	ldi	r24, 0x04	; 4
     662:	89 83       	std	Y+1, r24	; 0x01
     664:	8d 83       	std	Y+5, r24	; 0x05
     666:	82 83       	std	Z+2, r24	; 0x02
     668:	22 89       	ldd	r18, Z+18	; 0x12
     66a:	22 8b       	std	Z+18, r18	; 0x12
     66c:	20 e2       	ldi	r18, 0x20	; 32
     66e:	22 83       	std	Z+2, r18	; 0x02
     670:	25 89       	ldd	r18, Z+21	; 0x15
     672:	28 7f       	andi	r18, 0xF8	; 248
     674:	25 8b       	std	Z+21, r18	; 0x15
     676:	25 89       	ldd	r18, Z+21	; 0x15
     678:	24 60       	ori	r18, 0x04	; 4
     67a:	25 8b       	std	Z+21, r18	; 0x15
     67c:	25 89       	ldd	r18, Z+21	; 0x15
     67e:	27 7f       	andi	r18, 0xF7	; 247
     680:	25 8b       	std	Z+21, r18	; 0x15
     682:	20 e4       	ldi	r18, 0x40	; 64
     684:	22 83       	std	Z+2, r18	; 0x02
     686:	26 89       	ldd	r18, Z+22	; 0x16
     688:	28 7f       	andi	r18, 0xF8	; 248
     68a:	26 8b       	std	Z+22, r18	; 0x16
     68c:	26 89       	ldd	r18, Z+22	; 0x16
     68e:	24 60       	ori	r18, 0x04	; 4
     690:	26 8b       	std	Z+22, r18	; 0x16
     692:	26 89       	ldd	r18, Z+22	; 0x16
     694:	27 7f       	andi	r18, 0xF7	; 247
     696:	26 8b       	std	Z+22, r18	; 0x16
     698:	92 83       	std	Z+2, r25	; 0x02
     69a:	97 89       	ldd	r25, Z+23	; 0x17
     69c:	98 7f       	andi	r25, 0xF8	; 248
     69e:	97 8b       	std	Z+23, r25	; 0x17
     6a0:	97 89       	ldd	r25, Z+23	; 0x17
     6a2:	94 60       	ori	r25, 0x04	; 4
     6a4:	97 8b       	std	Z+23, r25	; 0x17
     6a6:	97 89       	ldd	r25, Z+23	; 0x17
     6a8:	97 7f       	andi	r25, 0xF7	; 247
     6aa:	97 8b       	std	Z+23, r25	; 0x17
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	92 83       	std	Z+2, r25	; 0x02
     6b0:	90 89       	ldd	r25, Z+16	; 0x10
     6b2:	98 7f       	andi	r25, 0xF8	; 248
     6b4:	90 8b       	std	Z+16, r25	; 0x10
     6b6:	90 89       	ldd	r25, Z+16	; 0x10
     6b8:	94 60       	ori	r25, 0x04	; 4
     6ba:	90 8b       	std	Z+16, r25	; 0x10
     6bc:	90 89       	ldd	r25, Z+16	; 0x10
     6be:	97 7f       	andi	r25, 0xF7	; 247
     6c0:	90 8b       	std	Z+16, r25	; 0x10
     6c2:	92 e0       	ldi	r25, 0x02	; 2
     6c4:	92 83       	std	Z+2, r25	; 0x02
     6c6:	91 89       	ldd	r25, Z+17	; 0x11
     6c8:	98 7f       	andi	r25, 0xF8	; 248
     6ca:	91 8b       	std	Z+17, r25	; 0x11
     6cc:	91 89       	ldd	r25, Z+17	; 0x11
     6ce:	94 60       	ori	r25, 0x04	; 4
     6d0:	91 8b       	std	Z+17, r25	; 0x11
     6d2:	91 89       	ldd	r25, Z+17	; 0x11
     6d4:	97 7f       	andi	r25, 0xF7	; 247
     6d6:	91 8b       	std	Z+17, r25	; 0x11
     6d8:	10 92 e4 05 	sts	0x05E4, r1	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
     6dc:	11 96       	adiw	r26, 0x01	; 1
     6de:	8c 93       	st	X, r24
     6e0:	11 97       	sbiw	r26, 0x01	; 1
     6e2:	15 96       	adiw	r26, 0x05	; 5
     6e4:	8c 93       	st	X, r24
     6e6:	c0 e0       	ldi	r28, 0x00	; 0
     6e8:	da e0       	ldi	r29, 0x0A	; 10
     6ea:	88 81       	ld	r24, Y
     6ec:	87 60       	ori	r24, 0x07	; 7
     6ee:	88 83       	st	Y, r24
     6f0:	89 81       	ldd	r24, Y+1	; 0x01
     6f2:	87 60       	ori	r24, 0x07	; 7
     6f4:	89 83       	std	Y+1, r24	; 0x01
     6f6:	89 85       	ldd	r24, Y+9	; 0x09
     6f8:	8e 7f       	andi	r24, 0xFE	; 254
     6fa:	89 87       	std	Y+9, r24	; 0x09
     6fc:	81 e7       	ldi	r24, 0x71	; 113
     6fe:	92 e0       	ldi	r25, 0x02	; 2
     700:	8e ab       	std	Y+54, r24	; 0x36
     702:	9f ab       	std	Y+55, r25	; 0x37
     704:	60 91 13 29 	lds	r22, 0x2913	; 0x802913 <dutyCycle>
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	0e 94 09 07 	call	0xe12	; 0xe12 <__floatsisf>
     712:	2a e0       	ldi	r18, 0x0A	; 10
     714:	37 ed       	ldi	r19, 0xD7	; 215
     716:	43 e2       	ldi	r20, 0x23	; 35
     718:	5c e3       	ldi	r21, 0x3C	; 60
     71a:	0e 94 6d 07 	call	0xeda	; 0xeda <__mulsf3>
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e4       	ldi	r19, 0x40	; 64
     722:	4c e1       	ldi	r20, 0x1C	; 28
     724:	54 e4       	ldi	r21, 0x44	; 68
     726:	0e 94 6d 07 	call	0xeda	; 0xeda <__mulsf3>
     72a:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fixunssfsi>
     72e:	6c af       	std	Y+60, r22	; 0x3c
     730:	7d af       	std	Y+61, r23	; 0x3d
     732:	89 81       	ldd	r24, Y+1	; 0x01
     734:	8f 7b       	andi	r24, 0xBF	; 191
     736:	89 83       	std	Y+1, r24	; 0x01
     738:	e0 e0       	ldi	r30, 0x00	; 0
     73a:	f1 e1       	ldi	r31, 0x11	; 17
     73c:	81 a1       	ldd	r24, Z+33	; 0x21
     73e:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <sigrow_offset>
     742:	80 a1       	ldd	r24, Z+32	; 0x20
     744:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <sigrow_gain>
     748:	e0 ea       	ldi	r30, 0xA0	; 160
     74a:	f0 e0       	ldi	r31, 0x00	; 0
     74c:	80 81       	ld	r24, Z
     74e:	80 61       	ori	r24, 0x10	; 16
     750:	80 83       	st	Z, r24
     752:	81 81       	ldd	r24, Z+1	; 0x01
     754:	82 60       	ori	r24, 0x02	; 2
     756:	81 83       	std	Z+1, r24	; 0x01
     758:	e0 e0       	ldi	r30, 0x00	; 0
     75a:	f6 e0       	ldi	r31, 0x06	; 6
     75c:	82 81       	ldd	r24, Z+2	; 0x02
     75e:	85 61       	ori	r24, 0x15	; 21
     760:	82 83       	std	Z+2, r24	; 0x02
     762:	83 81       	ldd	r24, Z+3	; 0x03
     764:	83 83       	std	Z+3, r24	; 0x03
     766:	85 e0       	ldi	r24, 0x05	; 5
     768:	85 83       	std	Z+5, r24	; 0x05
     76a:	82 81       	ldd	r24, Z+2	; 0x02
     76c:	80 64       	ori	r24, 0x40	; 64
     76e:	82 83       	std	Z+2, r24	; 0x02
     770:	80 81       	ld	r24, Z
     772:	81 60       	ori	r24, 0x01	; 1
     774:	80 83       	st	Z, r24
     776:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <uart_init>
     77a:	df 91       	pop	r29
     77c:	cf 91       	pop	r28
     77e:	08 95       	ret

00000780 <__vector_20>:
    ADC0.INTFLAGS = ADC_RESRDY_bm;
    return 0;
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
     780:	1f 92       	push	r1
     782:	0f 92       	push	r0
     784:	0f b6       	in	r0, 0x3f	; 63
     786:	0f 92       	push	r0
     788:	11 24       	eor	r1, r1
     78a:	8f 93       	push	r24
     78c:	ef 93       	push	r30
     78e:	ff 93       	push	r31
        uart_init();
    #endif
}

int8_t led_toggle() {
    PORTD.OUTTGL = LED;
     790:	e0 e6       	ldi	r30, 0x60	; 96
     792:	f4 e0       	ldi	r31, 0x04	; 4
     794:	88 e0       	ldi	r24, 0x08	; 8
     796:	87 83       	std	Z+7, r24	; 0x07
}            

/* ISR */
ISR(PORTD_PORT_vect) {    
    led_toggle();
    PORTD.INTFLAGS |= PORT_INT4_bm;
     798:	81 85       	ldd	r24, Z+9	; 0x09
     79a:	80 61       	ori	r24, 0x10	; 16
     79c:	81 87       	std	Z+9, r24	; 0x09
}
     79e:	ff 91       	pop	r31
     7a0:	ef 91       	pop	r30
     7a2:	8f 91       	pop	r24
     7a4:	0f 90       	pop	r0
     7a6:	0f be       	out	0x3f, r0	; 63
     7a8:	0f 90       	pop	r0
     7aa:	1f 90       	pop	r1
     7ac:	18 95       	reti

000007ae <main>:

/*
    Application
    *************************************************/
int main(void) {
    init();
     7ae:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <init>
    sei();
     7b2:	78 94       	sei
#ifdef TESTING
//     pwm_on();
//     pwm_set_duty_cycle(10);
    while (1) {
/*        pwm_count = TCA0.SINGLE.CNT;*/
        input = uart0_readLine();
     7b4:	0e 94 a7 06 	call	0xd4e	; 0xd4e <uart0_readLine>
        cmd_parse(input);
     7b8:	0e 94 e7 04 	call	0x9ce	; 0x9ce <cmd_parse>
     7bc:	fb cf       	rjmp	.-10     	; 0x7b4 <main+0x6>

000007be <cmd_exec>:
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
     7be:	24 e0       	ldi	r18, 0x04	; 4
     7c0:	82 9f       	mul	r24, r18
     7c2:	c0 01       	movw	r24, r0
     7c4:	11 24       	eor	r1, r1
     7c6:	fc 01       	movw	r30, r24
     7c8:	eb 55       	subi	r30, 0x5B	; 91
     7ca:	f7 4d       	sbci	r31, 0xD7	; 215
     7cc:	02 80       	ldd	r0, Z+2	; 0x02
     7ce:	f3 81       	ldd	r31, Z+3	; 0x03
     7d0:	e0 2d       	mov	r30, r0
     7d2:	30 97       	sbiw	r30, 0x00	; 0
     7d4:	11 f0       	breq	.+4      	; 0x7da <cmd_exec+0x1c>
        retval = cmd_table[index].cmd_func_ptr();
     7d6:	09 95       	icall
     7d8:	08 95       	ret
                int8_t cmd_func();
                Excepted are system commands, which are used to deal with parameter get/set operations and status reports.
 */

int8_t cmd_exec(uint8_t index) {
    int8_t retval = -2;                                 // set inital return value to -2 -> general failure
     7da:	8e ef       	ldi	r24, 0xFE	; 254
    /* Find and execute command from cmd table */
    if (cmd_table[index].cmd_func_ptr != NULL) {       
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}
     7dc:	08 95       	ret

000007de <param_get>:
        return retval;
    }
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
     7de:	af 92       	push	r10
     7e0:	bf 92       	push	r11
     7e2:	cf 92       	push	r12
     7e4:	df 92       	push	r13
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	5c 01       	movw	r10, r24
     7f4:	8b 01       	movw	r16, r22
     7f6:	0f 2e       	mov	r0, r31
     7f8:	f0 e0       	ldi	r31, 0x00	; 0
     7fa:	cf 2e       	mov	r12, r31
     7fc:	f8 e2       	ldi	r31, 0x28	; 40
     7fe:	df 2e       	mov	r13, r31
     800:	f0 2d       	mov	r31, r0
     802:	e1 2c       	mov	r14, r1
     804:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp((const char *)param_string, (const char *)param_table[i].param) == 0) {
     806:	e7 01       	movw	r28, r14
     808:	f6 01       	movw	r30, r12
     80a:	60 81       	ld	r22, Z
     80c:	71 81       	ldd	r23, Z+1	; 0x01
     80e:	c5 01       	movw	r24, r10
     810:	0e 94 1f 09 	call	0x123e	; 0x123e <strcmp>
     814:	89 2b       	or	r24, r25
     816:	09 f0       	breq	.+2      	; 0x81a <param_get+0x3c>
     818:	4a c0       	rjmp	.+148    	; 0x8ae <param_get+0xd0>
            cli();
     81a:	f8 94       	cli
            switch (param_table[i].size) {                      // cast pointer to the correct data type according to param table size info
     81c:	f7 01       	movw	r30, r14
     81e:	ee 0f       	add	r30, r30
     820:	ff 1f       	adc	r31, r31
     822:	ee 0f       	add	r30, r30
     824:	ff 1f       	adc	r31, r31
     826:	ee 0d       	add	r30, r14
     828:	ff 1d       	adc	r31, r15
     82a:	e0 50       	subi	r30, 0x00	; 0
     82c:	f8 4d       	sbci	r31, 0xD8	; 216
     82e:	84 81       	ldd	r24, Z+4	; 0x04
     830:	80 31       	cpi	r24, 0x10	; 16
     832:	89 f0       	breq	.+34     	; 0x856 <param_get+0x78>
     834:	80 32       	cpi	r24, 0x20	; 32
     836:	21 f1       	breq	.+72     	; 0x880 <param_get+0xa2>
     838:	88 30       	cpi	r24, 0x08	; 8
     83a:	b1 f5       	brne	.+108    	; 0x8a8 <param_get+0xca>
            case 8:
                *param_value = *(uint8_t *)param_table[i].value;
     83c:	02 80       	ldd	r0, Z+2	; 0x02
     83e:	f3 81       	ldd	r31, Z+3	; 0x03
     840:	e0 2d       	mov	r30, r0
     842:	80 81       	ld	r24, Z
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	a0 e0       	ldi	r26, 0x00	; 0
     848:	b0 e0       	ldi	r27, 0x00	; 0
     84a:	f8 01       	movw	r30, r16
     84c:	80 83       	st	Z, r24
     84e:	91 83       	std	Z+1, r25	; 0x01
     850:	a2 83       	std	Z+2, r26	; 0x02
     852:	b3 83       	std	Z+3, r27	; 0x03
            	break;
     854:	29 c0       	rjmp	.+82     	; 0x8a8 <param_get+0xca>
            case 16:
                *param_value = *(uint16_t *)param_table[i].value;
     856:	c7 01       	movw	r24, r14
     858:	88 0f       	add	r24, r24
     85a:	99 1f       	adc	r25, r25
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	c8 0f       	add	r28, r24
     862:	d9 1f       	adc	r29, r25
     864:	c0 50       	subi	r28, 0x00	; 0
     866:	d8 4d       	sbci	r29, 0xD8	; 216
     868:	ea 81       	ldd	r30, Y+2	; 0x02
     86a:	fb 81       	ldd	r31, Y+3	; 0x03
     86c:	80 81       	ld	r24, Z
     86e:	91 81       	ldd	r25, Z+1	; 0x01
     870:	a0 e0       	ldi	r26, 0x00	; 0
     872:	b0 e0       	ldi	r27, 0x00	; 0
     874:	f8 01       	movw	r30, r16
     876:	80 83       	st	Z, r24
     878:	91 83       	std	Z+1, r25	; 0x01
     87a:	a2 83       	std	Z+2, r26	; 0x02
     87c:	b3 83       	std	Z+3, r27	; 0x03
                break;
     87e:	14 c0       	rjmp	.+40     	; 0x8a8 <param_get+0xca>
            case 32:
                *param_value = *(uint32_t *)param_table[i].value;
     880:	c7 01       	movw	r24, r14
     882:	88 0f       	add	r24, r24
     884:	99 1f       	adc	r25, r25
     886:	88 0f       	add	r24, r24
     888:	99 1f       	adc	r25, r25
     88a:	c8 0f       	add	r28, r24
     88c:	d9 1f       	adc	r29, r25
     88e:	c0 50       	subi	r28, 0x00	; 0
     890:	d8 4d       	sbci	r29, 0xD8	; 216
     892:	ea 81       	ldd	r30, Y+2	; 0x02
     894:	fb 81       	ldd	r31, Y+3	; 0x03
     896:	80 81       	ld	r24, Z
     898:	91 81       	ldd	r25, Z+1	; 0x01
     89a:	a2 81       	ldd	r26, Z+2	; 0x02
     89c:	b3 81       	ldd	r27, Z+3	; 0x03
     89e:	f8 01       	movw	r30, r16
     8a0:	80 83       	st	Z, r24
     8a2:	91 83       	std	Z+1, r25	; 0x01
     8a4:	a2 83       	std	Z+2, r26	; 0x02
     8a6:	b3 83       	std	Z+3, r27	; 0x03
                break;               
            }
            sei();
     8a8:	78 94       	sei
            i = NO_PARAM;                                   // exit loop
            retval = 0;
     8aa:	80 e0       	ldi	r24, 0x00	; 0
     8ac:	0c c0       	rjmp	.+24     	; 0x8c6 <param_get+0xe8>
     8ae:	ff ef       	ldi	r31, 0xFF	; 255
     8b0:	ef 1a       	sub	r14, r31
     8b2:	ff 0a       	sbc	r15, r31
     8b4:	85 e0       	ldi	r24, 0x05	; 5
     8b6:	c8 0e       	add	r12, r24
     8b8:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_get(char *param_string, uint32_t *param_value) {
    int8_t retval = -4;                                         // default return value -4 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     8ba:	e1 e2       	ldi	r30, 0x21	; 33
     8bc:	ee 16       	cp	r14, r30
     8be:	f1 04       	cpc	r15, r1
     8c0:	09 f0       	breq	.+2      	; 0x8c4 <param_get+0xe6>
     8c2:	a1 cf       	rjmp	.-190    	; 0x806 <param_get+0x28>
     8c4:	8c ef       	ldi	r24, 0xFC	; 252
            i = NO_PARAM;                                   // exit loop
            retval = 0;
        }
    }
    return retval;
}
     8c6:	df 91       	pop	r29
     8c8:	cf 91       	pop	r28
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	ff 90       	pop	r15
     8d0:	ef 90       	pop	r14
     8d2:	df 90       	pop	r13
     8d4:	cf 90       	pop	r12
     8d6:	bf 90       	pop	r11
     8d8:	af 90       	pop	r10
     8da:	08 95       	ret

000008dc <param_set>:

int8_t param_set(char *param_string, void *param_new_val_ptr) {
     8dc:	af 92       	push	r10
     8de:	bf 92       	push	r11
     8e0:	cf 92       	push	r12
     8e2:	df 92       	push	r13
     8e4:	ef 92       	push	r14
     8e6:	ff 92       	push	r15
     8e8:	0f 93       	push	r16
     8ea:	1f 93       	push	r17
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	5c 01       	movw	r10, r24
     8f2:	8b 01       	movw	r16, r22
     8f4:	0f 2e       	mov	r0, r31
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	cf 2e       	mov	r12, r31
     8fa:	f8 e2       	ldi	r31, 0x28	; 40
     8fc:	df 2e       	mov	r13, r31
     8fe:	f0 2d       	mov	r31, r0
     900:	e1 2c       	mov	r14, r1
     902:	f1 2c       	mov	r15, r1
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        if (strcmp(param_string, param_table[i].param) == 0) {
     904:	e7 01       	movw	r28, r14
     906:	d6 01       	movw	r26, r12
     908:	6d 91       	ld	r22, X+
     90a:	7c 91       	ld	r23, X
     90c:	c5 01       	movw	r24, r10
     90e:	0e 94 1f 09 	call	0x123e	; 0x123e <strcmp>
     912:	89 2b       	or	r24, r25
     914:	09 f0       	breq	.+2      	; 0x918 <param_set+0x3c>
     916:	44 c0       	rjmp	.+136    	; 0x9a0 <param_set+0xc4>
            cli();
     918:	f8 94       	cli
            switch (param_table[i].size) {                                           // cast pointer to the correct data type according to param table size info
     91a:	f7 01       	movw	r30, r14
     91c:	ee 0f       	add	r30, r30
     91e:	ff 1f       	adc	r31, r31
     920:	ee 0f       	add	r30, r30
     922:	ff 1f       	adc	r31, r31
     924:	ee 0d       	add	r30, r14
     926:	ff 1d       	adc	r31, r15
     928:	e0 50       	subi	r30, 0x00	; 0
     92a:	f8 4d       	sbci	r31, 0xD8	; 216
     92c:	84 81       	ldd	r24, Z+4	; 0x04
     92e:	80 31       	cpi	r24, 0x10	; 16
     930:	61 f0       	breq	.+24     	; 0x94a <param_set+0x6e>
     932:	80 32       	cpi	r24, 0x20	; 32
     934:	e1 f0       	breq	.+56     	; 0x96e <param_set+0x92>
     936:	88 30       	cpi	r24, 0x08	; 8
     938:	81 f5       	brne	.+96     	; 0x99a <param_set+0xbe>
            case 8:
                *(uint8_t *)param_table[i].value = *(uint8_t *)param_new_val_ptr;
     93a:	02 80       	ldd	r0, Z+2	; 0x02
     93c:	f3 81       	ldd	r31, Z+3	; 0x03
     93e:	e0 2d       	mov	r30, r0
     940:	e8 01       	movw	r28, r16
     942:	88 81       	ld	r24, Y
     944:	80 83       	st	Z, r24
                retval = 0;
     946:	80 e0       	ldi	r24, 0x00	; 0
            	break;
     948:	29 c0       	rjmp	.+82     	; 0x99c <param_set+0xc0>
            case 16:
                *(uint16_t *)param_table[i].value = *(uint16_t *)param_new_val_ptr;
     94a:	c7 01       	movw	r24, r14
     94c:	88 0f       	add	r24, r24
     94e:	99 1f       	adc	r25, r25
     950:	88 0f       	add	r24, r24
     952:	99 1f       	adc	r25, r25
     954:	c8 0f       	add	r28, r24
     956:	d9 1f       	adc	r29, r25
     958:	c0 50       	subi	r28, 0x00	; 0
     95a:	d8 4d       	sbci	r29, 0xD8	; 216
     95c:	ea 81       	ldd	r30, Y+2	; 0x02
     95e:	fb 81       	ldd	r31, Y+3	; 0x03
     960:	d8 01       	movw	r26, r16
     962:	8d 91       	ld	r24, X+
     964:	9c 91       	ld	r25, X
     966:	80 83       	st	Z, r24
     968:	91 83       	std	Z+1, r25	; 0x01
                retval = 0;
     96a:	80 e0       	ldi	r24, 0x00	; 0
                break;
     96c:	17 c0       	rjmp	.+46     	; 0x99c <param_set+0xc0>
            case 32:
                *(uint32_t *)param_table[i].value = *(uint32_t *)param_new_val_ptr;
     96e:	c7 01       	movw	r24, r14
     970:	88 0f       	add	r24, r24
     972:	99 1f       	adc	r25, r25
     974:	88 0f       	add	r24, r24
     976:	99 1f       	adc	r25, r25
     978:	c8 0f       	add	r28, r24
     97a:	d9 1f       	adc	r29, r25
     97c:	c0 50       	subi	r28, 0x00	; 0
     97e:	d8 4d       	sbci	r29, 0xD8	; 216
     980:	ea 81       	ldd	r30, Y+2	; 0x02
     982:	fb 81       	ldd	r31, Y+3	; 0x03
     984:	e8 01       	movw	r28, r16
     986:	88 81       	ld	r24, Y
     988:	99 81       	ldd	r25, Y+1	; 0x01
     98a:	aa 81       	ldd	r26, Y+2	; 0x02
     98c:	bb 81       	ldd	r27, Y+3	; 0x03
     98e:	80 83       	st	Z, r24
     990:	91 83       	std	Z+1, r25	; 0x01
     992:	a2 83       	std	Z+2, r26	; 0x02
     994:	b3 83       	std	Z+3, r27	; 0x03
                retval = 0;
     996:	80 e0       	ldi	r24, 0x00	; 0
                break; 
     998:	01 c0       	rjmp	.+2      	; 0x99c <param_set+0xc0>
            default:
                retval = -3;                                                // default return value -3 -> invalid value size               
     99a:	8d ef       	ldi	r24, 0xFD	; 253
            }
            sei();
     99c:	78 94       	sei
     99e:	0c c0       	rjmp	.+24     	; 0x9b8 <param_set+0xdc>
     9a0:	df ef       	ldi	r29, 0xFF	; 255
     9a2:	ed 1a       	sub	r14, r29
     9a4:	fd 0a       	sbc	r15, r29
     9a6:	e5 e0       	ldi	r30, 0x05	; 5
     9a8:	ce 0e       	add	r12, r30
     9aa:	d1 1c       	adc	r13, r1
    return retval;
}

int8_t param_set(char *param_string, void *param_new_val_ptr) {
    int8_t retval = -4;                                                     // default return value -2 -> parameter not found
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     9ac:	f1 e2       	ldi	r31, 0x21	; 33
     9ae:	ef 16       	cp	r14, r31
     9b0:	f1 04       	cpc	r15, r1
     9b2:	09 f0       	breq	.+2      	; 0x9b6 <param_set+0xda>
     9b4:	a7 cf       	rjmp	.-178    	; 0x904 <param_set+0x28>
     9b6:	8c ef       	ldi	r24, 0xFC	; 252
            sei();
            i = NO_PARAM;                                               // exit loop
        }
    }
    return retval;
}
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	1f 91       	pop	r17
     9be:	0f 91       	pop	r16
     9c0:	ff 90       	pop	r15
     9c2:	ef 90       	pop	r14
     9c4:	df 90       	pop	r13
     9c6:	cf 90       	pop	r12
     9c8:	bf 90       	pop	r11
     9ca:	af 90       	pop	r10
     9cc:	08 95       	ret

000009ce <cmd_parse>:
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     9ce:	cf 92       	push	r12
     9d0:	df 92       	push	r13
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	28 97       	sbiw	r28, 0x08	; 8
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	de bf       	out	0x3e, r29	; 62
     9e6:	6c 01       	movw	r12, r24
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
     9e8:	6b e7       	ldi	r22, 0x7B	; 123
     9ea:	7b e5       	ldi	r23, 0x5B	; 91
     9ec:	0e 94 1f 09 	call	0x123e	; 0x123e <strcmp>
     9f0:	89 2b       	or	r24, r25
     9f2:	09 f4       	brne	.+2      	; 0x9f6 <cmd_parse+0x28>
     9f4:	dd c0       	rjmp	.+442    	; 0xbb0 <cmd_parse+0x1e2>
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
     9f6:	6f e3       	ldi	r22, 0x3F	; 63
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	c6 01       	movw	r24, r12
     9fc:	0e 94 14 09 	call	0x1228	; 0x1228 <strchr>
     a00:	89 2b       	or	r24, r25
     a02:	61 f1       	breq	.+88     	; 0xa5c <cmd_parse+0x8e>
        command = "param_get";                      
        param = strtok(string, "?");
     a04:	6c e7       	ldi	r22, 0x7C	; 124
     a06:	7b e5       	ldi	r23, 0x5B	; 91
     a08:	c6 01       	movw	r24, r12
     a0a:	0e 94 0f 09 	call	0x121e	; 0x121e <strtok>
     a0e:	08 2f       	mov	r16, r24
     a10:	f9 2e       	mov	r15, r25
        is_param_op = 1;
        uint32_t param_val = 0;
     a12:	19 82       	std	Y+1, r1	; 0x01
     a14:	1a 82       	std	Y+2, r1	; 0x02
     a16:	1b 82       	std	Y+3, r1	; 0x03
     a18:	1c 82       	std	Y+4, r1	; 0x04
        retval = param_get(param, &param_val);
     a1a:	be 01       	movw	r22, r28
     a1c:	6f 5f       	subi	r22, 0xFF	; 255
     a1e:	7f 4f       	sbci	r23, 0xFF	; 255
     a20:	0e 94 ef 03 	call	0x7de	; 0x7de <param_get>
     a24:	18 2f       	mov	r17, r24
        if (retval == 0) {
     a26:	81 11       	cpse	r24, r1
     a28:	12 c0       	rjmp	.+36     	; 0xa4e <cmd_parse+0x80>
            printf("%s = %"PRIu32"\r\n", param, param_val);               
     a2a:	8c 81       	ldd	r24, Y+4	; 0x04
     a2c:	8f 93       	push	r24
     a2e:	8b 81       	ldd	r24, Y+3	; 0x03
     a30:	8f 93       	push	r24
     a32:	8a 81       	ldd	r24, Y+2	; 0x02
     a34:	8f 93       	push	r24
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	8f 93       	push	r24
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	8b e7       	ldi	r24, 0x7B	; 123
     a40:	9c e5       	ldi	r25, 0x5C	; 92
     a42:	9f 93       	push	r25
     a44:	8f 93       	push	r24
     a46:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	de bf       	out	0x3e, r29	; 62
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
    }
    /* Command is GET ("<param>?")*/
    else if (strchr(string, CMD_GET) != NULL) {                                         
        command = "param_get";                      
     a4e:	0f 2e       	mov	r0, r31
     a50:	f9 ea       	ldi	r31, 0xA9	; 169
     a52:	cf 2e       	mov	r12, r31
     a54:	fa e5       	ldi	r31, 0x5A	; 90
     a56:	df 2e       	mov	r13, r31
     a58:	f0 2d       	mov	r31, r0
     a5a:	64 c0       	rjmp	.+200    	; 0xb24 <cmd_parse+0x156>
        if (retval == 0) {
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
     a5c:	6d e3       	ldi	r22, 0x3D	; 61
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	c6 01       	movw	r24, r12
     a62:	0e 94 14 09 	call	0x1228	; 0x1228 <strchr>
     a66:	89 2b       	or	r24, r25
     a68:	09 f4       	brne	.+2      	; 0xa6c <cmd_parse+0x9e>
     a6a:	a8 c0       	rjmp	.+336    	; 0xbbc <cmd_parse+0x1ee>
        command = "param_set";
        is_param_op = 1;
        param = strtok(string, "=");
     a6c:	6e e7       	ldi	r22, 0x7E	; 126
     a6e:	7b e5       	ldi	r23, 0x5B	; 91
     a70:	c6 01       	movw	r24, r12
     a72:	0e 94 0f 09 	call	0x121e	; 0x121e <strtok>
     a76:	08 2f       	mov	r16, r24
     a78:	f9 2e       	mov	r15, r25
        char *str_value = strtok(NULL, "=");
     a7a:	6e e7       	ldi	r22, 0x7E	; 126
     a7c:	7b e5       	ldi	r23, 0x5B	; 91
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	0e 94 0f 09 	call	0x121e	; 0x121e <strtok>
        uint32_t value = (uint32_t)strtoul(str_value, NULL, 0);
     a86:	40 e0       	ldi	r20, 0x00	; 0
     a88:	50 e0       	ldi	r21, 0x00	; 0
     a8a:	60 e0       	ldi	r22, 0x00	; 0
     a8c:	70 e0       	ldi	r23, 0x00	; 0
     a8e:	0e 94 11 08 	call	0x1022	; 0x1022 <strtoul>
     a92:	6d 83       	std	Y+5, r22	; 0x05
     a94:	7e 83       	std	Y+6, r23	; 0x06
     a96:	8f 83       	std	Y+7, r24	; 0x07
     a98:	98 87       	std	Y+8, r25	; 0x08
        retval = param_set(param, &value);
     a9a:	be 01       	movw	r22, r28
     a9c:	6b 5f       	subi	r22, 0xFB	; 251
     a9e:	7f 4f       	sbci	r23, 0xFF	; 255
     aa0:	80 2f       	mov	r24, r16
     aa2:	9f 2d       	mov	r25, r15
     aa4:	0e 94 6e 04 	call	0x8dc	; 0x8dc <param_set>
     aa8:	18 2f       	mov	r17, r24
        if (retval == 0) {
     aaa:	81 11       	cpse	r24, r1
     aac:	1d c0       	rjmp	.+58     	; 0xae8 <cmd_parse+0x11a>
            uint32_t param_val = 0;
     aae:	19 82       	std	Y+1, r1	; 0x01
     ab0:	1a 82       	std	Y+2, r1	; 0x02
     ab2:	1b 82       	std	Y+3, r1	; 0x03
     ab4:	1c 82       	std	Y+4, r1	; 0x04
            param_get(param, &param_val);        
     ab6:	be 01       	movw	r22, r28
     ab8:	6f 5f       	subi	r22, 0xFF	; 255
     aba:	7f 4f       	sbci	r23, 0xFF	; 255
     abc:	80 2f       	mov	r24, r16
     abe:	9f 2d       	mov	r25, r15
     ac0:	0e 94 ef 03 	call	0x7de	; 0x7de <param_get>
            printf("%s = %"PRIu32"\r\n", param, param_val);
     ac4:	8c 81       	ldd	r24, Y+4	; 0x04
     ac6:	8f 93       	push	r24
     ac8:	8b 81       	ldd	r24, Y+3	; 0x03
     aca:	8f 93       	push	r24
     acc:	8a 81       	ldd	r24, Y+2	; 0x02
     ace:	8f 93       	push	r24
     ad0:	89 81       	ldd	r24, Y+1	; 0x01
     ad2:	8f 93       	push	r24
     ad4:	ff 92       	push	r15
     ad6:	0f 93       	push	r16
     ad8:	8b e7       	ldi	r24, 0x7B	; 123
     ada:	9c e5       	ldi	r25, 0x5C	; 92
     adc:	9f 93       	push	r25
     ade:	8f 93       	push	r24
     ae0:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
     ae4:	cd bf       	out	0x3d, r28	; 61
     ae6:	de bf       	out	0x3e, r29	; 62
            printf("%s = %"PRIu32"\r\n", param, param_val);               
        }        
    } 
    /* Command is SET ("<param>=<new_value>") */
    else if (strchr(string, CMD_SET) != NULL) {
        command = "param_set";
     ae8:	0f 2e       	mov	r0, r31
     aea:	f3 eb       	ldi	r31, 0xB3	; 179
     aec:	cf 2e       	mov	r12, r31
     aee:	fa e5       	ldi	r31, 0x5A	; 90
     af0:	df 2e       	mov	r13, r31
     af2:	f0 2d       	mov	r31, r0
     af4:	17 c0       	rjmp	.+46     	; 0xb24 <cmd_parse+0x156>
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
            if (strcmp(command, cmd_table[i].cmd) == 0) {
     af6:	f8 01       	movw	r30, r16
     af8:	60 81       	ld	r22, Z
     afa:	71 81       	ldd	r23, Z+1	; 0x01
     afc:	c6 01       	movw	r24, r12
     afe:	0e 94 1f 09 	call	0x123e	; 0x123e <strcmp>
     b02:	89 2b       	or	r24, r25
     b04:	39 f4       	brne	.+14     	; 0xb14 <cmd_parse+0x146>
                retval = cmd_exec(i);
     b06:	8f 2d       	mov	r24, r15
     b08:	0e 94 df 03 	call	0x7be	; 0x7be <cmd_exec>
     b0c:	18 2f       	mov	r17, r24
     b0e:	00 e0       	ldi	r16, 0x00	; 0
     b10:	f1 2c       	mov	r15, r1
     b12:	08 c0       	rjmp	.+16     	; 0xb24 <cmd_parse+0x156>
            param_get(param, &param_val);        
            printf("%s = %"PRIu32"\r\n", param, param_val);
        }
    }
    if (is_param_op == 0) {        
	    for (uint8_t i = 0; i < NO_CMD; i++) {
     b14:	f3 94       	inc	r15
     b16:	0c 5f       	subi	r16, 0xFC	; 252
     b18:	1f 4f       	sbci	r17, 0xFF	; 255
     b1a:	f9 e1       	ldi	r31, 0x19	; 25
     b1c:	ff 12       	cpse	r15, r31
     b1e:	eb cf       	rjmp	.-42     	; 0xaf6 <cmd_parse+0x128>
     b20:	1f ef       	ldi	r17, 0xFF	; 255
     b22:	0d c0       	rjmp	.+26     	; 0xb3e <cmd_parse+0x170>
                i = NO_CMD;                             // exit loop
            }
	    } 
    }
    
    switch (retval) {                                   // select appropriate feedback to return
     b24:	1e 3f       	cpi	r17, 0xFE	; 254
     b26:	c1 f0       	breq	.+48     	; 0xb58 <cmd_parse+0x18a>
     b28:	2c f4       	brge	.+10     	; 0xb34 <cmd_parse+0x166>
     b2a:	1c 3f       	cpi	r17, 0xFC	; 252
     b2c:	79 f1       	breq	.+94     	; 0xb8c <cmd_parse+0x1be>
     b2e:	1d 3f       	cpi	r17, 0xFD	; 253
     b30:	01 f1       	breq	.+64     	; 0xb72 <cmd_parse+0x1a4>
     b32:	48 c0       	rjmp	.+144    	; 0xbc4 <cmd_parse+0x1f6>
     b34:	1f 3f       	cpi	r17, 0xFF	; 255
     b36:	19 f0       	breq	.+6      	; 0xb3e <cmd_parse+0x170>
     b38:	11 23       	and	r17, r17
     b3a:	a9 f1       	breq	.+106    	; 0xba6 <cmd_parse+0x1d8>
     b3c:	43 c0       	rjmp	.+134    	; 0xbc4 <cmd_parse+0x1f6>
    case -1:
        printf("FAIL. Command %s not found in command table!\r\n", command);
     b3e:	df 92       	push	r13
     b40:	cf 92       	push	r12
     b42:	80 e8       	ldi	r24, 0x80	; 128
     b44:	9b e5       	ldi	r25, 0x5B	; 91
     b46:	9f 93       	push	r25
     b48:	8f 93       	push	r24
     b4a:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
    	return retval;
     b4e:	0f 90       	pop	r0
     b50:	0f 90       	pop	r0
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	36 c0       	rjmp	.+108    	; 0xbc4 <cmd_parse+0x1f6>
    case -2:
        printf("FAIL. Failed to execute command %s!\r\n", command);
     b58:	df 92       	push	r13
     b5a:	cf 92       	push	r12
     b5c:	8f ea       	ldi	r24, 0xAF	; 175
     b5e:	9b e5       	ldi	r25, 0x5B	; 91
     b60:	9f 93       	push	r25
     b62:	8f 93       	push	r24
     b64:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
        return retval;
     b68:	0f 90       	pop	r0
     b6a:	0f 90       	pop	r0
     b6c:	0f 90       	pop	r0
     b6e:	0f 90       	pop	r0
     b70:	29 c0       	rjmp	.+82     	; 0xbc4 <cmd_parse+0x1f6>
    case -3:
        printf("FAIL. Invalid options/parameters for command %s!\r\n", command);
     b72:	df 92       	push	r13
     b74:	cf 92       	push	r12
     b76:	85 ed       	ldi	r24, 0xD5	; 213
     b78:	9b e5       	ldi	r25, 0x5B	; 91
     b7a:	9f 93       	push	r25
     b7c:	8f 93       	push	r24
     b7e:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
        return retval;
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	0f 90       	pop	r0
     b88:	0f 90       	pop	r0
     b8a:	1c c0       	rjmp	.+56     	; 0xbc4 <cmd_parse+0x1f6>
    case -4:
        printf("FAIL. Parameter %s not found in parameter table!\r\n", param);
     b8c:	ff 92       	push	r15
     b8e:	0f 93       	push	r16
     b90:	88 e0       	ldi	r24, 0x08	; 8
     b92:	9c e5       	ldi	r25, 0x5C	; 92
     b94:	9f 93       	push	r25
     b96:	8f 93       	push	r24
     b98:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
        return retval;
     b9c:	0f 90       	pop	r0
     b9e:	0f 90       	pop	r0
     ba0:	0f 90       	pop	r0
     ba2:	0f 90       	pop	r0
     ba4:	0f c0       	rjmp	.+30     	; 0xbc4 <cmd_parse+0x1f6>
    case 0:
        printf("OK.\r\n");
     ba6:	8b e3       	ldi	r24, 0x3B	; 59
     ba8:	9c e5       	ldi	r25, 0x5C	; 92
     baa:	0e 94 65 09 	call	0x12ca	; 0x12ca <puts>
        return retval;
     bae:	0a c0       	rjmp	.+20     	; 0xbc4 <cmd_parse+0x1f6>
    int8_t retval = -1;                                 // set initial return value to -1 -> no valid command
    char *command = string;
    char *param = NULL;
    uint8_t is_param_op = 0;
    if (strcmp((const char *)string, "??") == 0) {
        command = "status";
     bb0:	0f 2e       	mov	r0, r31
     bb2:	f2 ea       	ldi	r31, 0xA2	; 162
     bb4:	cf 2e       	mov	r12, r31
     bb6:	fa e5       	ldi	r31, 0x5A	; 90
     bb8:	df 2e       	mov	r13, r31
     bba:	f0 2d       	mov	r31, r0
     bbc:	05 ea       	ldi	r16, 0xA5	; 165
     bbe:	18 e2       	ldi	r17, 0x28	; 40
        retval = cmd_table[index].cmd_func_ptr();
    }
    return retval;
}

int8_t cmd_parse(char *string) {
     bc0:	f1 2c       	mov	r15, r1
     bc2:	99 cf       	rjmp	.-206    	; 0xaf6 <cmd_parse+0x128>
    case 0:
        printf("OK.\r\n");
        return retval;
    }
    return retval;
}
     bc4:	81 2f       	mov	r24, r17
     bc6:	28 96       	adiw	r28, 0x08	; 8
     bc8:	cd bf       	out	0x3d, r28	; 61
     bca:	de bf       	out	0x3e, r29	; 62
     bcc:	df 91       	pop	r29
     bce:	cf 91       	pop	r28
     bd0:	1f 91       	pop	r17
     bd2:	0f 91       	pop	r16
     bd4:	ff 90       	pop	r15
     bd6:	df 90       	pop	r13
     bd8:	cf 90       	pop	r12
     bda:	08 95       	ret

00000bdc <sys_status>:
        }
    }
    return retval;
}

int8_t sys_status() {
     bdc:	cf 92       	push	r12
     bde:	df 92       	push	r13
     be0:	ef 92       	push	r14
     be2:	ff 92       	push	r15
     be4:	0f 93       	push	r16
     be6:	1f 93       	push	r17
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
     bec:	00 d0       	rcall	.+0      	; 0xbee <sys_status+0x12>
     bee:	00 d0       	rcall	.+0      	; 0xbf0 <sys_status+0x14>
     bf0:	cd b7       	in	r28, 0x3d	; 61
     bf2:	de b7       	in	r29, 0x3e	; 62
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
     bf4:	80 e4       	ldi	r24, 0x40	; 64
     bf6:	9c e5       	ldi	r25, 0x5C	; 92
     bf8:	0e 94 65 09 	call	0x12ca	; 0x12ca <puts>
     bfc:	05 ea       	ldi	r16, 0xA5	; 165
     bfe:	18 e2       	ldi	r17, 0x28	; 40
     c00:	0f 2e       	mov	r0, r31
     c02:	f9 e0       	ldi	r31, 0x09	; 9
     c04:	ef 2e       	mov	r14, r31
     c06:	f9 e2       	ldi	r31, 0x29	; 41
     c08:	ff 2e       	mov	r15, r31
     c0a:	f0 2d       	mov	r31, r0
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
     c0c:	0f 2e       	mov	r0, r31
     c0e:	f7 e5       	ldi	r31, 0x57	; 87
     c10:	cf 2e       	mov	r12, r31
     c12:	fc e5       	ldi	r31, 0x5C	; 92
     c14:	df 2e       	mov	r13, r31
     c16:	f0 2d       	mov	r31, r0
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
        const char* cmd = (const char*)cmd_table[i].cmd;
     c18:	d8 01       	movw	r26, r16
     c1a:	ed 91       	ld	r30, X+
     c1c:	fc 91       	ld	r31, X
        if (strcmp(cmd, "\0") != 0) {
     c1e:	80 81       	ld	r24, Z
     c20:	88 23       	and	r24, r24
     c22:	51 f0       	breq	.+20     	; 0xc38 <sys_status+0x5c>
            printf("$ %s\r\n", cmd);
     c24:	ff 93       	push	r31
     c26:	ef 93       	push	r30
     c28:	df 92       	push	r13
     c2a:	cf 92       	push	r12
     c2c:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
     c30:	0f 90       	pop	r0
     c32:	0f 90       	pop	r0
     c34:	0f 90       	pop	r0
     c36:	0f 90       	pop	r0
     c38:	0c 5f       	subi	r16, 0xFC	; 252
     c3a:	1f 4f       	sbci	r17, 0xFF	; 255
    return retval;
}

int8_t sys_status() {
    printf("$ Available commands:\r\n");                      // print all defined commands in cmd table
    for (uint8_t i = 0; i < NO_CMD; i++) {
     c3c:	0e 15       	cp	r16, r14
     c3e:	1f 05       	cpc	r17, r15
     c40:	59 f7       	brne	.-42     	; 0xc18 <sys_status+0x3c>
        const char* cmd = (const char*)cmd_table[i].cmd;
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
     c42:	8e e5       	ldi	r24, 0x5E	; 94
     c44:	9c e5       	ldi	r25, 0x5C	; 92
     c46:	0e 94 65 09 	call	0x12ca	; 0x12ca <puts>
     c4a:	0f 2e       	mov	r0, r31
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	ef 2e       	mov	r14, r31
     c50:	f8 e2       	ldi	r31, 0x28	; 40
     c52:	ff 2e       	mov	r15, r31
     c54:	f0 2d       	mov	r31, r0
     c56:	00 e0       	ldi	r16, 0x00	; 0
     c58:	10 e0       	ldi	r17, 0x00	; 0
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     c5a:	0f 2e       	mov	r0, r31
     c5c:	f5 e7       	ldi	r31, 0x75	; 117
     c5e:	cf 2e       	mov	r12, r31
     c60:	fc e5       	ldi	r31, 0x5C	; 92
     c62:	df 2e       	mov	r13, r31
     c64:	f0 2d       	mov	r31, r0
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
        uint32_t param_value = 0;
     c66:	19 82       	std	Y+1, r1	; 0x01
     c68:	1a 82       	std	Y+2, r1	; 0x02
     c6a:	1b 82       	std	Y+3, r1	; 0x03
     c6c:	1c 82       	std	Y+4, r1	; 0x04
        if (strcmp((const char *)param_table[i].param, "\0") != 0) {
     c6e:	d7 01       	movw	r26, r14
     c70:	ed 91       	ld	r30, X+
     c72:	fc 91       	ld	r31, X
     c74:	80 81       	ld	r24, Z
     c76:	88 23       	and	r24, r24
     c78:	d9 f0       	breq	.+54     	; 0xcb0 <sys_status+0xd4>
            param_get(param_table[i].param, &param_value);
     c7a:	be 01       	movw	r22, r28
     c7c:	6f 5f       	subi	r22, 0xFF	; 255
     c7e:	7f 4f       	sbci	r23, 0xFF	; 255
     c80:	cf 01       	movw	r24, r30
     c82:	0e 94 ef 03 	call	0x7de	; 0x7de <param_get>
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
     c86:	8c 81       	ldd	r24, Y+4	; 0x04
     c88:	8f 93       	push	r24
     c8a:	8b 81       	ldd	r24, Y+3	; 0x03
     c8c:	8f 93       	push	r24
     c8e:	8a 81       	ldd	r24, Y+2	; 0x02
     c90:	8f 93       	push	r24
     c92:	89 81       	ldd	r24, Y+1	; 0x01
     c94:	8f 93       	push	r24
     c96:	f7 01       	movw	r30, r14
     c98:	81 81       	ldd	r24, Z+1	; 0x01
     c9a:	8f 93       	push	r24
     c9c:	80 81       	ld	r24, Z
     c9e:	8f 93       	push	r24
     ca0:	1f 93       	push	r17
     ca2:	0f 93       	push	r16
     ca4:	df 92       	push	r13
     ca6:	cf 92       	push	r12
     ca8:	0e 94 4f 09 	call	0x129e	; 0x129e <printf>
     cac:	cd bf       	out	0x3d, r28	; 61
     cae:	de bf       	out	0x3e, r29	; 62
     cb0:	0f 5f       	subi	r16, 0xFF	; 255
     cb2:	1f 4f       	sbci	r17, 0xFF	; 255
     cb4:	95 e0       	ldi	r25, 0x05	; 5
     cb6:	e9 0e       	add	r14, r25
     cb8:	f1 1c       	adc	r15, r1
        if (strcmp(cmd, "\0") != 0) {
            printf("$ %s\r\n", cmd);
        }
    }
    printf("$ Defined parameters:\r\n");                      // print all defined parameters in param table
    for (uint8_t i = 0; i < NO_PARAM; i++) {
     cba:	01 32       	cpi	r16, 0x21	; 33
     cbc:	11 05       	cpc	r17, r1
     cbe:	99 f6       	brne	.-90     	; 0xc66 <sys_status+0x8a>
            param_get(param_table[i].param, &param_value);
            printf("$ %d: %s = %"PRIu32"\r\n", i, param_table[i].param, param_value);
        }

    }
    printf("$ Status message end #\r\n");
     cc0:	86 e8       	ldi	r24, 0x86	; 134
     cc2:	9c e5       	ldi	r25, 0x5C	; 92
     cc4:	0e 94 65 09 	call	0x12ca	; 0x12ca <puts>
    return 0;
     cc8:	80 e0       	ldi	r24, 0x00	; 0
     cca:	24 96       	adiw	r28, 0x04	; 4
     ccc:	cd bf       	out	0x3d, r28	; 61
     cce:	de bf       	out	0x3e, r29	; 62
     cd0:	df 91       	pop	r29
     cd2:	cf 91       	pop	r28
     cd4:	1f 91       	pop	r17
     cd6:	0f 91       	pop	r16
     cd8:	ff 90       	pop	r15
     cda:	ef 90       	pop	r14
     cdc:	df 90       	pop	r13
     cde:	cf 90       	pop	r12
     ce0:	08 95       	ret

00000ce2 <uart0_printChar>:
    USART1.TXDATAL = c;
    while (!(USART1.STATUS & USART_DREIF_bm)) {     // Check for completed transmission
        ;
    }
    /* Return to receiver mode */
    PORTC.OUTCLR = PIN3_bm;
     ce2:	e0 e0       	ldi	r30, 0x00	; 0
     ce4:	f8 e0       	ldi	r31, 0x08	; 8
     ce6:	94 81       	ldd	r25, Z+4	; 0x04
     ce8:	95 ff       	sbrs	r25, 5
     cea:	fd cf       	rjmp	.-6      	; 0xce6 <uart0_printChar+0x4>
     cec:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f4802>
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	08 95       	ret

00000cf6 <uart_init>:
    Function definitions
    *************************************************/
void uart_init() {
    /* Setup stream for printf() */  
    #if USART_SEL == 0
        stdout = &uart0_stream;
     cf6:	84 e1       	ldi	r24, 0x14	; 20
     cf8:	99 e2       	ldi	r25, 0x29	; 41
     cfa:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <__iob+0x2>
     cfe:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <__iob+0x3>
        stdout = &uart1_stream;
    #endif
    
    /* USART0 Config (Main comms and debug interface) */
    /* Baud rate */
    USART0.BAUD = (uint16_t)USART_BAUD_RATE(BAUD0);
     d02:	e0 e0       	ldi	r30, 0x00	; 0
     d04:	f8 e0       	ldi	r31, 0x08	; 8
     d06:	8b e5       	ldi	r24, 0x5B	; 91
     d08:	91 e0       	ldi	r25, 0x01	; 1
     d0a:	80 87       	std	Z+8, r24	; 0x08
     d0c:	91 87       	std	Z+9, r25	; 0x09
    /* Enable interrupts */
    USART0.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm);
     d0e:	85 81       	ldd	r24, Z+5	; 0x05
     d10:	80 6e       	ori	r24, 0xE0	; 224
     d12:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */
    USART0.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);
     d14:	86 81       	ldd	r24, Z+6	; 0x06
     d16:	80 6c       	ori	r24, 0xC0	; 192
     d18:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PA0) to output, RX(PA1) to input */
    PORTA.DIRSET = PIN0_bm;
     d1a:	e0 e0       	ldi	r30, 0x00	; 0
     d1c:	f4 e0       	ldi	r31, 0x04	; 4
     d1e:	21 e0       	ldi	r18, 0x01	; 1
     d20:	21 83       	std	Z+1, r18	; 0x01
    PORTA.DIRCLR = PIN1_bm;
     d22:	92 e0       	ldi	r25, 0x02	; 2
     d24:	92 83       	std	Z+2, r25	; 0x02
                                               

    
    /* USART1 Config (RS485 interface) */
    /* Baud rate */
    USART1.BAUD = (uint16_t)USART_BAUD_RATE(BAUD1);
     d26:	e0 e2       	ldi	r30, 0x20	; 32
     d28:	f8 e0       	ldi	r31, 0x08	; 8
     d2a:	47 e4       	ldi	r20, 0x47	; 71
     d2c:	50 e1       	ldi	r21, 0x10	; 16
     d2e:	40 87       	std	Z+8, r20	; 0x08
     d30:	51 87       	std	Z+9, r21	; 0x09
    /* Enable interrupts */
    USART1.CTRLA |= (USART_RXCIE_bm | USART_TXCIE_bm | USART_DREIE_bm | USART_RS485_EXT_gc); 
     d32:	85 81       	ldd	r24, Z+5	; 0x05
     d34:	81 6e       	ori	r24, 0xE1	; 225
     d36:	85 83       	std	Z+5, r24	; 0x05
    /* Enable TX & RX */    
    USART1.CTRLB |= (USART_TXEN_bm | USART_RXEN_bm);   
     d38:	86 81       	ldd	r24, Z+6	; 0x06
     d3a:	80 6c       	ori	r24, 0xC0	; 192
     d3c:	86 83       	std	Z+6, r24	; 0x06
    /* Set TX(PC0) and XDIR(PC3) to output, RX(PC1) to input. XDIR low ->  Receiver mode */                     
    PORTC.DIRSET = PIN0_bm;                                              
     d3e:	e0 e4       	ldi	r30, 0x40	; 64
     d40:	f4 e0       	ldi	r31, 0x04	; 4
     d42:	21 83       	std	Z+1, r18	; 0x01
    PORTC.DIRCLR = PIN1_bm;                                                
     d44:	92 83       	std	Z+2, r25	; 0x02
    PORTC.DIRSET = PIN3_bm;                                                
     d46:	88 e0       	ldi	r24, 0x08	; 8
     d48:	81 83       	std	Z+1, r24	; 0x01
    PORTC.OUTCLR = PIN3_bm;
     d4a:	86 83       	std	Z+6, r24	; 0x06
     d4c:	08 95       	ret

00000d4e <uart0_readLine>:
    }
    return USART0.RXDATAL;
}

char * uart0_readLine() {                             // Read a single line from uart0 RX
    uint8_t index = 0;
     d4e:	a0 e0       	ldi	r26, 0x00	; 0
    uart0_sendChar(c);
    return 0;
}

static uint8_t uart0_readChar() {
    while (!(USART0.STATUS & USART_RXCIF_bm)) {
     d50:	e0 e0       	ldi	r30, 0x00	; 0
     d52:	f8 e0       	ldi	r31, 0x08	; 8
     d54:	84 81       	ldd	r24, Z+4	; 0x04
     d56:	88 23       	and	r24, r24
     d58:	ec f7       	brge	.-6      	; 0xd54 <uart0_readLine+0x6>
        ;
    }
    return USART0.RXDATAL;
     d5a:	80 81       	ld	r24, Z
    uint8_t index = 0;
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
     d5c:	8a 30       	cpi	r24, 0x0A	; 10
     d5e:	09 f1       	breq	.+66     	; 0xda2 <uart0_readLine+0x54>
     d60:	8d 30       	cpi	r24, 0x0D	; 13
     d62:	c1 f3       	breq	.-16     	; 0xd54 <uart0_readLine+0x6>
            buffer[index++] = c;
     d64:	91 e0       	ldi	r25, 0x01	; 1
     d66:	9a 0f       	add	r25, r26
     d68:	b0 e0       	ldi	r27, 0x00	; 0
     d6a:	a4 5b       	subi	r26, 0xB4	; 180
     d6c:	b6 4d       	sbci	r27, 0xD6	; 214
     d6e:	8c 93       	st	X, r24
            if (index > MAX_LINE_LEN) {
     d70:	9d 33       	cpi	r25, 0x3D	; 61
     d72:	a8 f0       	brcs	.+42     	; 0xd9e <uart0_readLine+0x50>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
     d74:	1f 92       	push	r1
     d76:	8c e3       	ldi	r24, 0x3C	; 60
     d78:	8f 93       	push	r24
     d7a:	2e e9       	ldi	r18, 0x9E	; 158
     d7c:	3c e5       	ldi	r19, 0x5C	; 92
     d7e:	3f 93       	push	r19
     d80:	2f 93       	push	r18
     d82:	1f 92       	push	r1
     d84:	8f 93       	push	r24
     d86:	8c e4       	ldi	r24, 0x4C	; 76
     d88:	99 e2       	ldi	r25, 0x29	; 41
     d8a:	9f 93       	push	r25
     d8c:	8f 93       	push	r24
     d8e:	0e 94 95 09 	call	0x132a	; 0x132a <snprintf>
                return buffer;
     d92:	8d b7       	in	r24, 0x3d	; 61
     d94:	9e b7       	in	r25, 0x3e	; 62
     d96:	08 96       	adiw	r24, 0x08	; 8
     d98:	8d bf       	out	0x3d, r24	; 61
     d9a:	9e bf       	out	0x3e, r25	; 62
     d9c:	06 c0       	rjmp	.+12     	; 0xdaa <uart0_readLine+0x5c>
    char c;
      
    while (1) {
        c = uart0_readChar();
        if ((c != '\n') && (c != '\r')) {
            buffer[index++] = c;
     d9e:	a9 2f       	mov	r26, r25
     da0:	d9 cf       	rjmp	.-78     	; 0xd54 <uart0_readLine+0x6>
                snprintf(buffer, sizeof(buffer), "Input too long, maximum no. of chars allowed: %d", MAX_LINE_LEN);
                return buffer;
            }
        }        
        if (c == '\n') {
            buffer[index] = '\0';
     da2:	b0 e0       	ldi	r27, 0x00	; 0
     da4:	a4 5b       	subi	r26, 0xB4	; 180
     da6:	b6 4d       	sbci	r27, 0xD6	; 214
     da8:	1c 92       	st	X, r1
            index = 0;
            return buffer;
        }
    }
}     
     daa:	8c e4       	ldi	r24, 0x4C	; 76
     dac:	99 e2       	ldi	r25, 0x29	; 41
     dae:	08 95       	ret

00000db0 <__fixunssfsi>:
     db0:	0e 94 4c 07 	call	0xe98	; 0xe98 <__fp_splitA>
     db4:	88 f0       	brcs	.+34     	; 0xdd8 <__fixunssfsi+0x28>
     db6:	9f 57       	subi	r25, 0x7F	; 127
     db8:	98 f0       	brcs	.+38     	; 0xde0 <__fixunssfsi+0x30>
     dba:	b9 2f       	mov	r27, r25
     dbc:	99 27       	eor	r25, r25
     dbe:	b7 51       	subi	r27, 0x17	; 23
     dc0:	b0 f0       	brcs	.+44     	; 0xdee <__fixunssfsi+0x3e>
     dc2:	e1 f0       	breq	.+56     	; 0xdfc <__fixunssfsi+0x4c>
     dc4:	66 0f       	add	r22, r22
     dc6:	77 1f       	adc	r23, r23
     dc8:	88 1f       	adc	r24, r24
     dca:	99 1f       	adc	r25, r25
     dcc:	1a f0       	brmi	.+6      	; 0xdd4 <__fixunssfsi+0x24>
     dce:	ba 95       	dec	r27
     dd0:	c9 f7       	brne	.-14     	; 0xdc4 <__fixunssfsi+0x14>
     dd2:	14 c0       	rjmp	.+40     	; 0xdfc <__fixunssfsi+0x4c>
     dd4:	b1 30       	cpi	r27, 0x01	; 1
     dd6:	91 f0       	breq	.+36     	; 0xdfc <__fixunssfsi+0x4c>
     dd8:	0e 94 66 07 	call	0xecc	; 0xecc <__fp_zero>
     ddc:	b1 e0       	ldi	r27, 0x01	; 1
     dde:	08 95       	ret
     de0:	0c 94 66 07 	jmp	0xecc	; 0xecc <__fp_zero>
     de4:	67 2f       	mov	r22, r23
     de6:	78 2f       	mov	r23, r24
     de8:	88 27       	eor	r24, r24
     dea:	b8 5f       	subi	r27, 0xF8	; 248
     dec:	39 f0       	breq	.+14     	; 0xdfc <__fixunssfsi+0x4c>
     dee:	b9 3f       	cpi	r27, 0xF9	; 249
     df0:	cc f3       	brlt	.-14     	; 0xde4 <__fixunssfsi+0x34>
     df2:	86 95       	lsr	r24
     df4:	77 95       	ror	r23
     df6:	67 95       	ror	r22
     df8:	b3 95       	inc	r27
     dfa:	d9 f7       	brne	.-10     	; 0xdf2 <__fixunssfsi+0x42>
     dfc:	3e f4       	brtc	.+14     	; 0xe0c <__fixunssfsi+0x5c>
     dfe:	90 95       	com	r25
     e00:	80 95       	com	r24
     e02:	70 95       	com	r23
     e04:	61 95       	neg	r22
     e06:	7f 4f       	sbci	r23, 0xFF	; 255
     e08:	8f 4f       	sbci	r24, 0xFF	; 255
     e0a:	9f 4f       	sbci	r25, 0xFF	; 255
     e0c:	08 95       	ret

00000e0e <__floatunsisf>:
     e0e:	e8 94       	clt
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <__floatsisf+0x12>

00000e12 <__floatsisf>:
     e12:	97 fb       	bst	r25, 7
     e14:	3e f4       	brtc	.+14     	; 0xe24 <__floatsisf+0x12>
     e16:	90 95       	com	r25
     e18:	80 95       	com	r24
     e1a:	70 95       	com	r23
     e1c:	61 95       	neg	r22
     e1e:	7f 4f       	sbci	r23, 0xFF	; 255
     e20:	8f 4f       	sbci	r24, 0xFF	; 255
     e22:	9f 4f       	sbci	r25, 0xFF	; 255
     e24:	99 23       	and	r25, r25
     e26:	a9 f0       	breq	.+42     	; 0xe52 <__floatsisf+0x40>
     e28:	f9 2f       	mov	r31, r25
     e2a:	96 e9       	ldi	r25, 0x96	; 150
     e2c:	bb 27       	eor	r27, r27
     e2e:	93 95       	inc	r25
     e30:	f6 95       	lsr	r31
     e32:	87 95       	ror	r24
     e34:	77 95       	ror	r23
     e36:	67 95       	ror	r22
     e38:	b7 95       	ror	r27
     e3a:	f1 11       	cpse	r31, r1
     e3c:	f8 cf       	rjmp	.-16     	; 0xe2e <__floatsisf+0x1c>
     e3e:	fa f4       	brpl	.+62     	; 0xe7e <__floatsisf+0x6c>
     e40:	bb 0f       	add	r27, r27
     e42:	11 f4       	brne	.+4      	; 0xe48 <__floatsisf+0x36>
     e44:	60 ff       	sbrs	r22, 0
     e46:	1b c0       	rjmp	.+54     	; 0xe7e <__floatsisf+0x6c>
     e48:	6f 5f       	subi	r22, 0xFF	; 255
     e4a:	7f 4f       	sbci	r23, 0xFF	; 255
     e4c:	8f 4f       	sbci	r24, 0xFF	; 255
     e4e:	9f 4f       	sbci	r25, 0xFF	; 255
     e50:	16 c0       	rjmp	.+44     	; 0xe7e <__floatsisf+0x6c>
     e52:	88 23       	and	r24, r24
     e54:	11 f0       	breq	.+4      	; 0xe5a <__floatsisf+0x48>
     e56:	96 e9       	ldi	r25, 0x96	; 150
     e58:	11 c0       	rjmp	.+34     	; 0xe7c <__floatsisf+0x6a>
     e5a:	77 23       	and	r23, r23
     e5c:	21 f0       	breq	.+8      	; 0xe66 <__floatsisf+0x54>
     e5e:	9e e8       	ldi	r25, 0x8E	; 142
     e60:	87 2f       	mov	r24, r23
     e62:	76 2f       	mov	r23, r22
     e64:	05 c0       	rjmp	.+10     	; 0xe70 <__floatsisf+0x5e>
     e66:	66 23       	and	r22, r22
     e68:	71 f0       	breq	.+28     	; 0xe86 <__floatsisf+0x74>
     e6a:	96 e8       	ldi	r25, 0x86	; 134
     e6c:	86 2f       	mov	r24, r22
     e6e:	70 e0       	ldi	r23, 0x00	; 0
     e70:	60 e0       	ldi	r22, 0x00	; 0
     e72:	2a f0       	brmi	.+10     	; 0xe7e <__floatsisf+0x6c>
     e74:	9a 95       	dec	r25
     e76:	66 0f       	add	r22, r22
     e78:	77 1f       	adc	r23, r23
     e7a:	88 1f       	adc	r24, r24
     e7c:	da f7       	brpl	.-10     	; 0xe74 <__floatsisf+0x62>
     e7e:	88 0f       	add	r24, r24
     e80:	96 95       	lsr	r25
     e82:	87 95       	ror	r24
     e84:	97 f9       	bld	r25, 7
     e86:	08 95       	ret

00000e88 <__fp_split3>:
     e88:	57 fd       	sbrc	r21, 7
     e8a:	90 58       	subi	r25, 0x80	; 128
     e8c:	44 0f       	add	r20, r20
     e8e:	55 1f       	adc	r21, r21
     e90:	59 f0       	breq	.+22     	; 0xea8 <__fp_splitA+0x10>
     e92:	5f 3f       	cpi	r21, 0xFF	; 255
     e94:	71 f0       	breq	.+28     	; 0xeb2 <__fp_splitA+0x1a>
     e96:	47 95       	ror	r20

00000e98 <__fp_splitA>:
     e98:	88 0f       	add	r24, r24
     e9a:	97 fb       	bst	r25, 7
     e9c:	99 1f       	adc	r25, r25
     e9e:	61 f0       	breq	.+24     	; 0xeb8 <__fp_splitA+0x20>
     ea0:	9f 3f       	cpi	r25, 0xFF	; 255
     ea2:	79 f0       	breq	.+30     	; 0xec2 <__fp_splitA+0x2a>
     ea4:	87 95       	ror	r24
     ea6:	08 95       	ret
     ea8:	12 16       	cp	r1, r18
     eaa:	13 06       	cpc	r1, r19
     eac:	14 06       	cpc	r1, r20
     eae:	55 1f       	adc	r21, r21
     eb0:	f2 cf       	rjmp	.-28     	; 0xe96 <__fp_split3+0xe>
     eb2:	46 95       	lsr	r20
     eb4:	f1 df       	rcall	.-30     	; 0xe98 <__fp_splitA>
     eb6:	08 c0       	rjmp	.+16     	; 0xec8 <__fp_splitA+0x30>
     eb8:	16 16       	cp	r1, r22
     eba:	17 06       	cpc	r1, r23
     ebc:	18 06       	cpc	r1, r24
     ebe:	99 1f       	adc	r25, r25
     ec0:	f1 cf       	rjmp	.-30     	; 0xea4 <__fp_splitA+0xc>
     ec2:	86 95       	lsr	r24
     ec4:	71 05       	cpc	r23, r1
     ec6:	61 05       	cpc	r22, r1
     ec8:	08 94       	sec
     eca:	08 95       	ret

00000ecc <__fp_zero>:
     ecc:	e8 94       	clt

00000ece <__fp_szero>:
     ece:	bb 27       	eor	r27, r27
     ed0:	66 27       	eor	r22, r22
     ed2:	77 27       	eor	r23, r23
     ed4:	cb 01       	movw	r24, r22
     ed6:	97 f9       	bld	r25, 7
     ed8:	08 95       	ret

00000eda <__mulsf3>:
     eda:	0e 94 80 07 	call	0xf00	; 0xf00 <__mulsf3x>
     ede:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__fp_round>
     ee2:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__fp_pscA>
     ee6:	38 f0       	brcs	.+14     	; 0xef6 <__mulsf3+0x1c>
     ee8:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__fp_pscB>
     eec:	20 f0       	brcs	.+8      	; 0xef6 <__mulsf3+0x1c>
     eee:	95 23       	and	r25, r21
     ef0:	11 f0       	breq	.+4      	; 0xef6 <__mulsf3+0x1c>
     ef2:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__fp_inf>
     ef6:	0c 94 e0 07 	jmp	0xfc0	; 0xfc0 <__fp_nan>
     efa:	11 24       	eor	r1, r1
     efc:	0c 94 67 07 	jmp	0xece	; 0xece <__fp_szero>

00000f00 <__mulsf3x>:
     f00:	0e 94 44 07 	call	0xe88	; 0xe88 <__fp_split3>
     f04:	70 f3       	brcs	.-36     	; 0xee2 <__mulsf3+0x8>

00000f06 <__mulsf3_pse>:
     f06:	95 9f       	mul	r25, r21
     f08:	c1 f3       	breq	.-16     	; 0xefa <__mulsf3+0x20>
     f0a:	95 0f       	add	r25, r21
     f0c:	50 e0       	ldi	r21, 0x00	; 0
     f0e:	55 1f       	adc	r21, r21
     f10:	62 9f       	mul	r22, r18
     f12:	f0 01       	movw	r30, r0
     f14:	72 9f       	mul	r23, r18
     f16:	bb 27       	eor	r27, r27
     f18:	f0 0d       	add	r31, r0
     f1a:	b1 1d       	adc	r27, r1
     f1c:	63 9f       	mul	r22, r19
     f1e:	aa 27       	eor	r26, r26
     f20:	f0 0d       	add	r31, r0
     f22:	b1 1d       	adc	r27, r1
     f24:	aa 1f       	adc	r26, r26
     f26:	64 9f       	mul	r22, r20
     f28:	66 27       	eor	r22, r22
     f2a:	b0 0d       	add	r27, r0
     f2c:	a1 1d       	adc	r26, r1
     f2e:	66 1f       	adc	r22, r22
     f30:	82 9f       	mul	r24, r18
     f32:	22 27       	eor	r18, r18
     f34:	b0 0d       	add	r27, r0
     f36:	a1 1d       	adc	r26, r1
     f38:	62 1f       	adc	r22, r18
     f3a:	73 9f       	mul	r23, r19
     f3c:	b0 0d       	add	r27, r0
     f3e:	a1 1d       	adc	r26, r1
     f40:	62 1f       	adc	r22, r18
     f42:	83 9f       	mul	r24, r19
     f44:	a0 0d       	add	r26, r0
     f46:	61 1d       	adc	r22, r1
     f48:	22 1f       	adc	r18, r18
     f4a:	74 9f       	mul	r23, r20
     f4c:	33 27       	eor	r19, r19
     f4e:	a0 0d       	add	r26, r0
     f50:	61 1d       	adc	r22, r1
     f52:	23 1f       	adc	r18, r19
     f54:	84 9f       	mul	r24, r20
     f56:	60 0d       	add	r22, r0
     f58:	21 1d       	adc	r18, r1
     f5a:	82 2f       	mov	r24, r18
     f5c:	76 2f       	mov	r23, r22
     f5e:	6a 2f       	mov	r22, r26
     f60:	11 24       	eor	r1, r1
     f62:	9f 57       	subi	r25, 0x7F	; 127
     f64:	50 40       	sbci	r21, 0x00	; 0
     f66:	9a f0       	brmi	.+38     	; 0xf8e <__mulsf3_pse+0x88>
     f68:	f1 f0       	breq	.+60     	; 0xfa6 <__mulsf3_pse+0xa0>
     f6a:	88 23       	and	r24, r24
     f6c:	4a f0       	brmi	.+18     	; 0xf80 <__mulsf3_pse+0x7a>
     f6e:	ee 0f       	add	r30, r30
     f70:	ff 1f       	adc	r31, r31
     f72:	bb 1f       	adc	r27, r27
     f74:	66 1f       	adc	r22, r22
     f76:	77 1f       	adc	r23, r23
     f78:	88 1f       	adc	r24, r24
     f7a:	91 50       	subi	r25, 0x01	; 1
     f7c:	50 40       	sbci	r21, 0x00	; 0
     f7e:	a9 f7       	brne	.-22     	; 0xf6a <__mulsf3_pse+0x64>
     f80:	9e 3f       	cpi	r25, 0xFE	; 254
     f82:	51 05       	cpc	r21, r1
     f84:	80 f0       	brcs	.+32     	; 0xfa6 <__mulsf3_pse+0xa0>
     f86:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__fp_inf>
     f8a:	0c 94 67 07 	jmp	0xece	; 0xece <__fp_szero>
     f8e:	5f 3f       	cpi	r21, 0xFF	; 255
     f90:	e4 f3       	brlt	.-8      	; 0xf8a <__mulsf3_pse+0x84>
     f92:	98 3e       	cpi	r25, 0xE8	; 232
     f94:	d4 f3       	brlt	.-12     	; 0xf8a <__mulsf3_pse+0x84>
     f96:	86 95       	lsr	r24
     f98:	77 95       	ror	r23
     f9a:	67 95       	ror	r22
     f9c:	b7 95       	ror	r27
     f9e:	f7 95       	ror	r31
     fa0:	e7 95       	ror	r30
     fa2:	9f 5f       	subi	r25, 0xFF	; 255
     fa4:	c1 f7       	brne	.-16     	; 0xf96 <__mulsf3_pse+0x90>
     fa6:	fe 2b       	or	r31, r30
     fa8:	88 0f       	add	r24, r24
     faa:	91 1d       	adc	r25, r1
     fac:	96 95       	lsr	r25
     fae:	87 95       	ror	r24
     fb0:	97 f9       	bld	r25, 7
     fb2:	08 95       	ret

00000fb4 <__fp_inf>:
     fb4:	97 f9       	bld	r25, 7
     fb6:	9f 67       	ori	r25, 0x7F	; 127
     fb8:	80 e8       	ldi	r24, 0x80	; 128
     fba:	70 e0       	ldi	r23, 0x00	; 0
     fbc:	60 e0       	ldi	r22, 0x00	; 0
     fbe:	08 95       	ret

00000fc0 <__fp_nan>:
     fc0:	9f ef       	ldi	r25, 0xFF	; 255
     fc2:	80 ec       	ldi	r24, 0xC0	; 192
     fc4:	08 95       	ret

00000fc6 <__fp_pscA>:
     fc6:	00 24       	eor	r0, r0
     fc8:	0a 94       	dec	r0
     fca:	16 16       	cp	r1, r22
     fcc:	17 06       	cpc	r1, r23
     fce:	18 06       	cpc	r1, r24
     fd0:	09 06       	cpc	r0, r25
     fd2:	08 95       	ret

00000fd4 <__fp_pscB>:
     fd4:	00 24       	eor	r0, r0
     fd6:	0a 94       	dec	r0
     fd8:	12 16       	cp	r1, r18
     fda:	13 06       	cpc	r1, r19
     fdc:	14 06       	cpc	r1, r20
     fde:	05 06       	cpc	r0, r21
     fe0:	08 95       	ret

00000fe2 <__fp_round>:
     fe2:	09 2e       	mov	r0, r25
     fe4:	03 94       	inc	r0
     fe6:	00 0c       	add	r0, r0
     fe8:	11 f4       	brne	.+4      	; 0xfee <__fp_round+0xc>
     fea:	88 23       	and	r24, r24
     fec:	52 f0       	brmi	.+20     	; 0x1002 <__fp_round+0x20>
     fee:	bb 0f       	add	r27, r27
     ff0:	40 f4       	brcc	.+16     	; 0x1002 <__fp_round+0x20>
     ff2:	bf 2b       	or	r27, r31
     ff4:	11 f4       	brne	.+4      	; 0xffa <__fp_round+0x18>
     ff6:	60 ff       	sbrs	r22, 0
     ff8:	04 c0       	rjmp	.+8      	; 0x1002 <__fp_round+0x20>
     ffa:	6f 5f       	subi	r22, 0xFF	; 255
     ffc:	7f 4f       	sbci	r23, 0xFF	; 255
     ffe:	8f 4f       	sbci	r24, 0xFF	; 255
    1000:	9f 4f       	sbci	r25, 0xFF	; 255
    1002:	08 95       	ret

00001004 <__umulhisi3>:
    1004:	a2 9f       	mul	r26, r18
    1006:	b0 01       	movw	r22, r0
    1008:	b3 9f       	mul	r27, r19
    100a:	c0 01       	movw	r24, r0
    100c:	a3 9f       	mul	r26, r19
    100e:	70 0d       	add	r23, r0
    1010:	81 1d       	adc	r24, r1
    1012:	11 24       	eor	r1, r1
    1014:	91 1d       	adc	r25, r1
    1016:	b2 9f       	mul	r27, r18
    1018:	70 0d       	add	r23, r0
    101a:	81 1d       	adc	r24, r1
    101c:	11 24       	eor	r1, r1
    101e:	91 1d       	adc	r25, r1
    1020:	08 95       	ret

00001022 <strtoul>:
    1022:	a0 e0       	ldi	r26, 0x00	; 0
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	e7 e1       	ldi	r30, 0x17	; 23
    1028:	f8 e0       	ldi	r31, 0x08	; 8
    102a:	0c 94 97 0c 	jmp	0x192e	; 0x192e <__prologue_saves__+0x2>
    102e:	5c 01       	movw	r10, r24
    1030:	6b 01       	movw	r12, r22
    1032:	7a 01       	movw	r14, r20
    1034:	61 15       	cp	r22, r1
    1036:	71 05       	cpc	r23, r1
    1038:	19 f0       	breq	.+6      	; 0x1040 <strtoul+0x1e>
    103a:	fb 01       	movw	r30, r22
    103c:	80 83       	st	Z, r24
    103e:	91 83       	std	Z+1, r25	; 0x01
    1040:	e1 14       	cp	r14, r1
    1042:	f1 04       	cpc	r15, r1
    1044:	29 f0       	breq	.+10     	; 0x1050 <strtoul+0x2e>
    1046:	c7 01       	movw	r24, r14
    1048:	02 97       	sbiw	r24, 0x02	; 2
    104a:	83 97       	sbiw	r24, 0x23	; 35
    104c:	08 f0       	brcs	.+2      	; 0x1050 <strtoul+0x2e>
    104e:	c9 c0       	rjmp	.+402    	; 0x11e2 <strtoul+0x1c0>
    1050:	e5 01       	movw	r28, r10
    1052:	21 96       	adiw	r28, 0x01	; 1
    1054:	f5 01       	movw	r30, r10
    1056:	10 81       	ld	r17, Z
    1058:	81 2f       	mov	r24, r17
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	0e 94 06 09 	call	0x120c	; 0x120c <isspace>
    1060:	89 2b       	or	r24, r25
    1062:	11 f0       	breq	.+4      	; 0x1068 <strtoul+0x46>
    1064:	5e 01       	movw	r10, r28
    1066:	f4 cf       	rjmp	.-24     	; 0x1050 <strtoul+0x2e>
    1068:	1d 32       	cpi	r17, 0x2D	; 45
    106a:	29 f4       	brne	.+10     	; 0x1076 <strtoul+0x54>
    106c:	21 96       	adiw	r28, 0x01	; 1
    106e:	f5 01       	movw	r30, r10
    1070:	11 81       	ldd	r17, Z+1	; 0x01
    1072:	01 e0       	ldi	r16, 0x01	; 1
    1074:	07 c0       	rjmp	.+14     	; 0x1084 <strtoul+0x62>
    1076:	1b 32       	cpi	r17, 0x2B	; 43
    1078:	21 f4       	brne	.+8      	; 0x1082 <strtoul+0x60>
    107a:	e5 01       	movw	r28, r10
    107c:	22 96       	adiw	r28, 0x02	; 2
    107e:	f5 01       	movw	r30, r10
    1080:	11 81       	ldd	r17, Z+1	; 0x01
    1082:	00 e0       	ldi	r16, 0x00	; 0
    1084:	e1 14       	cp	r14, r1
    1086:	f1 04       	cpc	r15, r1
    1088:	b1 f0       	breq	.+44     	; 0x10b6 <strtoul+0x94>
    108a:	f0 e1       	ldi	r31, 0x10	; 16
    108c:	ef 16       	cp	r14, r31
    108e:	f1 04       	cpc	r15, r1
    1090:	29 f4       	brne	.+10     	; 0x109c <strtoul+0x7a>
    1092:	b0 c0       	rjmp	.+352    	; 0x11f4 <strtoul+0x1d2>
    1094:	10 e3       	ldi	r17, 0x30	; 48
    1096:	e1 14       	cp	r14, r1
    1098:	f1 04       	cpc	r15, r1
    109a:	01 f1       	breq	.+64     	; 0x10dc <strtoul+0xba>
    109c:	2a e0       	ldi	r18, 0x0A	; 10
    109e:	e2 16       	cp	r14, r18
    10a0:	f1 04       	cpc	r15, r1
    10a2:	b1 f1       	breq	.+108    	; 0x1110 <strtoul+0xee>
    10a4:	80 e1       	ldi	r24, 0x10	; 16
    10a6:	e8 16       	cp	r14, r24
    10a8:	f1 04       	cpc	r15, r1
    10aa:	71 f0       	breq	.+28     	; 0x10c8 <strtoul+0xa6>
    10ac:	e8 e0       	ldi	r30, 0x08	; 8
    10ae:	ee 16       	cp	r14, r30
    10b0:	f1 04       	cpc	r15, r1
    10b2:	f1 f4       	brne	.+60     	; 0x10f0 <strtoul+0xce>
    10b4:	13 c0       	rjmp	.+38     	; 0x10dc <strtoul+0xba>
    10b6:	10 33       	cpi	r17, 0x30	; 48
    10b8:	41 f5       	brne	.+80     	; 0x110a <strtoul+0xe8>
    10ba:	88 81       	ld	r24, Y
    10bc:	8f 7d       	andi	r24, 0xDF	; 223
    10be:	88 35       	cpi	r24, 0x58	; 88
    10c0:	49 f7       	brne	.-46     	; 0x1094 <strtoul+0x72>
    10c2:	19 81       	ldd	r17, Y+1	; 0x01
    10c4:	22 96       	adiw	r28, 0x02	; 2
    10c6:	02 60       	ori	r16, 0x02	; 2
    10c8:	f0 e1       	ldi	r31, 0x10	; 16
    10ca:	ef 2e       	mov	r14, r31
    10cc:	f1 2c       	mov	r15, r1
    10ce:	88 24       	eor	r8, r8
    10d0:	8a 94       	dec	r8
    10d2:	98 2c       	mov	r9, r8
    10d4:	a8 2c       	mov	r10, r8
    10d6:	af e0       	ldi	r26, 0x0F	; 15
    10d8:	ba 2e       	mov	r11, r26
    10da:	20 c0       	rjmp	.+64     	; 0x111c <strtoul+0xfa>
    10dc:	78 e0       	ldi	r23, 0x08	; 8
    10de:	e7 2e       	mov	r14, r23
    10e0:	f1 2c       	mov	r15, r1
    10e2:	88 24       	eor	r8, r8
    10e4:	8a 94       	dec	r8
    10e6:	98 2c       	mov	r9, r8
    10e8:	a8 2c       	mov	r10, r8
    10ea:	ef e1       	ldi	r30, 0x1F	; 31
    10ec:	be 2e       	mov	r11, r30
    10ee:	16 c0       	rjmp	.+44     	; 0x111c <strtoul+0xfa>
    10f0:	6f ef       	ldi	r22, 0xFF	; 255
    10f2:	7f ef       	ldi	r23, 0xFF	; 255
    10f4:	cb 01       	movw	r24, r22
    10f6:	97 01       	movw	r18, r14
    10f8:	0f 2c       	mov	r0, r15
    10fa:	00 0c       	add	r0, r0
    10fc:	44 0b       	sbc	r20, r20
    10fe:	55 0b       	sbc	r21, r21
    1100:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <__udivmodsi4>
    1104:	49 01       	movw	r8, r18
    1106:	5a 01       	movw	r10, r20
    1108:	09 c0       	rjmp	.+18     	; 0x111c <strtoul+0xfa>
    110a:	8a e0       	ldi	r24, 0x0A	; 10
    110c:	e8 2e       	mov	r14, r24
    110e:	f1 2c       	mov	r15, r1
    1110:	69 e9       	ldi	r22, 0x99	; 153
    1112:	86 2e       	mov	r8, r22
    1114:	98 2c       	mov	r9, r8
    1116:	a8 2c       	mov	r10, r8
    1118:	69 e1       	ldi	r22, 0x19	; 25
    111a:	b6 2e       	mov	r11, r22
    111c:	40 e0       	ldi	r20, 0x00	; 0
    111e:	60 e0       	ldi	r22, 0x00	; 0
    1120:	70 e0       	ldi	r23, 0x00	; 0
    1122:	cb 01       	movw	r24, r22
    1124:	27 01       	movw	r4, r14
    1126:	0f 2c       	mov	r0, r15
    1128:	00 0c       	add	r0, r0
    112a:	66 08       	sbc	r6, r6
    112c:	77 08       	sbc	r7, r7
    112e:	fe 01       	movw	r30, r28
    1130:	50 ed       	ldi	r21, 0xD0	; 208
    1132:	35 2e       	mov	r3, r21
    1134:	31 0e       	add	r3, r17
    1136:	29 e0       	ldi	r18, 0x09	; 9
    1138:	23 15       	cp	r18, r3
    113a:	70 f4       	brcc	.+28     	; 0x1158 <strtoul+0x136>
    113c:	2f eb       	ldi	r18, 0xBF	; 191
    113e:	21 0f       	add	r18, r17
    1140:	2a 31       	cpi	r18, 0x1A	; 26
    1142:	18 f4       	brcc	.+6      	; 0x114a <strtoul+0x128>
    1144:	39 ec       	ldi	r19, 0xC9	; 201
    1146:	33 2e       	mov	r3, r19
    1148:	06 c0       	rjmp	.+12     	; 0x1156 <strtoul+0x134>
    114a:	2f e9       	ldi	r18, 0x9F	; 159
    114c:	21 0f       	add	r18, r17
    114e:	2a 31       	cpi	r18, 0x1A	; 26
    1150:	30 f5       	brcc	.+76     	; 0x119e <strtoul+0x17c>
    1152:	29 ea       	ldi	r18, 0xA9	; 169
    1154:	32 2e       	mov	r3, r18
    1156:	31 0e       	add	r3, r17
    1158:	23 2d       	mov	r18, r3
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	2e 15       	cp	r18, r14
    115e:	3f 05       	cpc	r19, r15
    1160:	f4 f4       	brge	.+60     	; 0x119e <strtoul+0x17c>
    1162:	4f 3f       	cpi	r20, 0xFF	; 255
    1164:	c9 f0       	breq	.+50     	; 0x1198 <strtoul+0x176>
    1166:	86 16       	cp	r8, r22
    1168:	97 06       	cpc	r9, r23
    116a:	a8 06       	cpc	r10, r24
    116c:	b9 06       	cpc	r11, r25
    116e:	88 f0       	brcs	.+34     	; 0x1192 <strtoul+0x170>
    1170:	a3 01       	movw	r20, r6
    1172:	92 01       	movw	r18, r4
    1174:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__mulsi3>
    1178:	23 2d       	mov	r18, r3
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	40 e0       	ldi	r20, 0x00	; 0
    117e:	50 e0       	ldi	r21, 0x00	; 0
    1180:	62 0f       	add	r22, r18
    1182:	73 1f       	adc	r23, r19
    1184:	84 1f       	adc	r24, r20
    1186:	95 1f       	adc	r25, r21
    1188:	62 17       	cp	r22, r18
    118a:	73 07       	cpc	r23, r19
    118c:	84 07       	cpc	r24, r20
    118e:	95 07       	cpc	r25, r21
    1190:	10 f4       	brcc	.+4      	; 0x1196 <strtoul+0x174>
    1192:	4f ef       	ldi	r20, 0xFF	; 255
    1194:	01 c0       	rjmp	.+2      	; 0x1198 <strtoul+0x176>
    1196:	41 e0       	ldi	r20, 0x01	; 1
    1198:	21 96       	adiw	r28, 0x01	; 1
    119a:	10 81       	ld	r17, Z
    119c:	c8 cf       	rjmp	.-112    	; 0x112e <strtoul+0x10c>
    119e:	c1 14       	cp	r12, r1
    11a0:	d1 04       	cpc	r13, r1
    11a2:	51 f0       	breq	.+20     	; 0x11b8 <strtoul+0x196>
    11a4:	44 23       	and	r20, r20
    11a6:	11 f0       	breq	.+4      	; 0x11ac <strtoul+0x18a>
    11a8:	21 97       	sbiw	r28, 0x01	; 1
    11aa:	03 c0       	rjmp	.+6      	; 0x11b2 <strtoul+0x190>
    11ac:	01 ff       	sbrs	r16, 1
    11ae:	04 c0       	rjmp	.+8      	; 0x11b8 <strtoul+0x196>
    11b0:	22 97       	sbiw	r28, 0x02	; 2
    11b2:	f6 01       	movw	r30, r12
    11b4:	c0 83       	st	Z, r28
    11b6:	d1 83       	std	Z+1, r29	; 0x01
    11b8:	00 ff       	sbrs	r16, 0
    11ba:	07 c0       	rjmp	.+14     	; 0x11ca <strtoul+0x1a8>
    11bc:	90 95       	com	r25
    11be:	80 95       	com	r24
    11c0:	70 95       	com	r23
    11c2:	61 95       	neg	r22
    11c4:	7f 4f       	sbci	r23, 0xFF	; 255
    11c6:	8f 4f       	sbci	r24, 0xFF	; 255
    11c8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ca:	4f 3f       	cpi	r20, 0xFF	; 255
    11cc:	79 f4       	brne	.+30     	; 0x11ec <strtoul+0x1ca>
    11ce:	82 e2       	ldi	r24, 0x22	; 34
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <errno>
    11d6:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <errno+0x1>
    11da:	3f ef       	ldi	r19, 0xFF	; 255
    11dc:	2f ef       	ldi	r18, 0xFF	; 255
    11de:	9f ef       	ldi	r25, 0xFF	; 255
    11e0:	0d c0       	rjmp	.+26     	; 0x11fc <strtoul+0x1da>
    11e2:	40 e0       	ldi	r20, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	20 e0       	ldi	r18, 0x00	; 0
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	08 c0       	rjmp	.+16     	; 0x11fc <strtoul+0x1da>
    11ec:	46 2f       	mov	r20, r22
    11ee:	37 2f       	mov	r19, r23
    11f0:	28 2f       	mov	r18, r24
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <strtoul+0x1da>
    11f4:	10 33       	cpi	r17, 0x30	; 48
    11f6:	09 f0       	breq	.+2      	; 0x11fa <strtoul+0x1d8>
    11f8:	67 cf       	rjmp	.-306    	; 0x10c8 <strtoul+0xa6>
    11fa:	5f cf       	rjmp	.-322    	; 0x10ba <strtoul+0x98>
    11fc:	64 2f       	mov	r22, r20
    11fe:	73 2f       	mov	r23, r19
    1200:	82 2f       	mov	r24, r18
    1202:	cd b7       	in	r28, 0x3d	; 61
    1204:	de b7       	in	r29, 0x3e	; 62
    1206:	e1 e1       	ldi	r30, 0x11	; 17
    1208:	0c 94 b0 0c 	jmp	0x1960	; 0x1960 <__epilogue_restores__+0x2>

0000120c <isspace>:
    120c:	91 11       	cpse	r25, r1
    120e:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__ctype_isfalse>
    1212:	80 32       	cpi	r24, 0x20	; 32
    1214:	19 f0       	breq	.+6      	; 0x121c <isspace+0x10>
    1216:	89 50       	subi	r24, 0x09	; 9
    1218:	85 50       	subi	r24, 0x05	; 5
    121a:	c8 f7       	brcc	.-14     	; 0x120e <isspace+0x2>
    121c:	08 95       	ret

0000121e <strtok>:
    121e:	42 e2       	ldi	r20, 0x22	; 34
    1220:	59 e2       	ldi	r21, 0x29	; 41
    1222:	0e 94 28 09 	call	0x1250	; 0x1250 <strtok_r>
    1226:	08 95       	ret

00001228 <strchr>:
    1228:	fc 01       	movw	r30, r24
    122a:	81 91       	ld	r24, Z+
    122c:	86 17       	cp	r24, r22
    122e:	21 f0       	breq	.+8      	; 0x1238 <strchr+0x10>
    1230:	88 23       	and	r24, r24
    1232:	d9 f7       	brne	.-10     	; 0x122a <strchr+0x2>
    1234:	99 27       	eor	r25, r25
    1236:	08 95       	ret
    1238:	31 97       	sbiw	r30, 0x01	; 1
    123a:	cf 01       	movw	r24, r30
    123c:	08 95       	ret

0000123e <strcmp>:
    123e:	fb 01       	movw	r30, r22
    1240:	dc 01       	movw	r26, r24
    1242:	8d 91       	ld	r24, X+
    1244:	01 90       	ld	r0, Z+
    1246:	80 19       	sub	r24, r0
    1248:	01 10       	cpse	r0, r1
    124a:	d9 f3       	breq	.-10     	; 0x1242 <strcmp+0x4>
    124c:	99 0b       	sbc	r25, r25
    124e:	08 95       	ret

00001250 <strtok_r>:
    1250:	fa 01       	movw	r30, r20
    1252:	a1 91       	ld	r26, Z+
    1254:	b0 81       	ld	r27, Z
    1256:	00 97       	sbiw	r24, 0x00	; 0
    1258:	19 f4       	brne	.+6      	; 0x1260 <strtok_r+0x10>
    125a:	10 97       	sbiw	r26, 0x00	; 0
    125c:	e1 f0       	breq	.+56     	; 0x1296 <strtok_r+0x46>
    125e:	cd 01       	movw	r24, r26
    1260:	dc 01       	movw	r26, r24
    1262:	cd 01       	movw	r24, r26
    1264:	0d 90       	ld	r0, X+
    1266:	00 20       	and	r0, r0
    1268:	11 f4       	brne	.+4      	; 0x126e <strtok_r+0x1e>
    126a:	c0 01       	movw	r24, r0
    126c:	13 c0       	rjmp	.+38     	; 0x1294 <strtok_r+0x44>
    126e:	fb 01       	movw	r30, r22
    1270:	21 91       	ld	r18, Z+
    1272:	22 23       	and	r18, r18
    1274:	19 f0       	breq	.+6      	; 0x127c <strtok_r+0x2c>
    1276:	20 15       	cp	r18, r0
    1278:	d9 f7       	brne	.-10     	; 0x1270 <strtok_r+0x20>
    127a:	f3 cf       	rjmp	.-26     	; 0x1262 <strtok_r+0x12>
    127c:	fb 01       	movw	r30, r22
    127e:	21 91       	ld	r18, Z+
    1280:	20 15       	cp	r18, r0
    1282:	19 f4       	brne	.+6      	; 0x128a <strtok_r+0x3a>
    1284:	1e 92       	st	-X, r1
    1286:	11 96       	adiw	r26, 0x01	; 1
    1288:	06 c0       	rjmp	.+12     	; 0x1296 <strtok_r+0x46>
    128a:	22 23       	and	r18, r18
    128c:	c1 f7       	brne	.-16     	; 0x127e <strtok_r+0x2e>
    128e:	0d 90       	ld	r0, X+
    1290:	00 20       	and	r0, r0
    1292:	a1 f7       	brne	.-24     	; 0x127c <strtok_r+0x2c>
    1294:	d0 01       	movw	r26, r0
    1296:	fa 01       	movw	r30, r20
    1298:	a1 93       	st	Z+, r26
    129a:	b0 83       	st	Z, r27
    129c:	08 95       	ret

0000129e <printf>:
    129e:	a0 e0       	ldi	r26, 0x00	; 0
    12a0:	b0 e0       	ldi	r27, 0x00	; 0
    12a2:	e5 e5       	ldi	r30, 0x55	; 85
    12a4:	f9 e0       	ldi	r31, 0x09	; 9
    12a6:	0c 94 a6 0c 	jmp	0x194c	; 0x194c <__prologue_saves__+0x20>
    12aa:	ae 01       	movw	r20, r28
    12ac:	4b 5f       	subi	r20, 0xFB	; 251
    12ae:	5f 4f       	sbci	r21, 0xFF	; 255
    12b0:	fa 01       	movw	r30, r20
    12b2:	61 91       	ld	r22, Z+
    12b4:	71 91       	ld	r23, Z+
    12b6:	af 01       	movw	r20, r30
    12b8:	80 91 10 2a 	lds	r24, 0x2A10	; 0x802a10 <__iob+0x2>
    12bc:	90 91 11 2a 	lds	r25, 0x2A11	; 0x802a11 <__iob+0x3>
    12c0:	0e 94 c5 09 	call	0x138a	; 0x138a <vfprintf>
    12c4:	e2 e0       	ldi	r30, 0x02	; 2
    12c6:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__epilogue_restores__+0x20>

000012ca <puts>:
    12ca:	0f 93       	push	r16
    12cc:	1f 93       	push	r17
    12ce:	cf 93       	push	r28
    12d0:	df 93       	push	r29
    12d2:	e0 91 10 2a 	lds	r30, 0x2A10	; 0x802a10 <__iob+0x2>
    12d6:	f0 91 11 2a 	lds	r31, 0x2A11	; 0x802a11 <__iob+0x3>
    12da:	23 81       	ldd	r18, Z+3	; 0x03
    12dc:	21 ff       	sbrs	r18, 1
    12de:	1b c0       	rjmp	.+54     	; 0x1316 <puts+0x4c>
    12e0:	8c 01       	movw	r16, r24
    12e2:	d0 e0       	ldi	r29, 0x00	; 0
    12e4:	c0 e0       	ldi	r28, 0x00	; 0
    12e6:	f8 01       	movw	r30, r16
    12e8:	81 91       	ld	r24, Z+
    12ea:	8f 01       	movw	r16, r30
    12ec:	60 91 10 2a 	lds	r22, 0x2A10	; 0x802a10 <__iob+0x2>
    12f0:	70 91 11 2a 	lds	r23, 0x2A11	; 0x802a11 <__iob+0x3>
    12f4:	db 01       	movw	r26, r22
    12f6:	18 96       	adiw	r26, 0x08	; 8
    12f8:	ed 91       	ld	r30, X+
    12fa:	fc 91       	ld	r31, X
    12fc:	19 97       	sbiw	r26, 0x09	; 9
    12fe:	88 23       	and	r24, r24
    1300:	31 f0       	breq	.+12     	; 0x130e <puts+0x44>
    1302:	09 95       	icall
    1304:	89 2b       	or	r24, r25
    1306:	79 f3       	breq	.-34     	; 0x12e6 <puts+0x1c>
    1308:	df ef       	ldi	r29, 0xFF	; 255
    130a:	cf ef       	ldi	r28, 0xFF	; 255
    130c:	ec cf       	rjmp	.-40     	; 0x12e6 <puts+0x1c>
    130e:	8a e0       	ldi	r24, 0x0A	; 10
    1310:	09 95       	icall
    1312:	89 2b       	or	r24, r25
    1314:	19 f0       	breq	.+6      	; 0x131c <puts+0x52>
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	9f ef       	ldi	r25, 0xFF	; 255
    131a:	02 c0       	rjmp	.+4      	; 0x1320 <puts+0x56>
    131c:	8d 2f       	mov	r24, r29
    131e:	9c 2f       	mov	r25, r28
    1320:	df 91       	pop	r29
    1322:	cf 91       	pop	r28
    1324:	1f 91       	pop	r17
    1326:	0f 91       	pop	r16
    1328:	08 95       	ret

0000132a <snprintf>:
    132a:	ae e0       	ldi	r26, 0x0E	; 14
    132c:	b0 e0       	ldi	r27, 0x00	; 0
    132e:	eb e9       	ldi	r30, 0x9B	; 155
    1330:	f9 e0       	ldi	r31, 0x09	; 9
    1332:	0c 94 a4 0c 	jmp	0x1948	; 0x1948 <__prologue_saves__+0x1c>
    1336:	0d 89       	ldd	r16, Y+21	; 0x15
    1338:	1e 89       	ldd	r17, Y+22	; 0x16
    133a:	8f 89       	ldd	r24, Y+23	; 0x17
    133c:	98 8d       	ldd	r25, Y+24	; 0x18
    133e:	26 e0       	ldi	r18, 0x06	; 6
    1340:	2c 83       	std	Y+4, r18	; 0x04
    1342:	09 83       	std	Y+1, r16	; 0x01
    1344:	1a 83       	std	Y+2, r17	; 0x02
    1346:	97 ff       	sbrs	r25, 7
    1348:	02 c0       	rjmp	.+4      	; 0x134e <snprintf+0x24>
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	90 e8       	ldi	r25, 0x80	; 128
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	8d 83       	std	Y+5, r24	; 0x05
    1352:	9e 83       	std	Y+6, r25	; 0x06
    1354:	ae 01       	movw	r20, r28
    1356:	45 5e       	subi	r20, 0xE5	; 229
    1358:	5f 4f       	sbci	r21, 0xFF	; 255
    135a:	69 8d       	ldd	r22, Y+25	; 0x19
    135c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    135e:	ce 01       	movw	r24, r28
    1360:	01 96       	adiw	r24, 0x01	; 1
    1362:	0e 94 c5 09 	call	0x138a	; 0x138a <vfprintf>
    1366:	4d 81       	ldd	r20, Y+5	; 0x05
    1368:	5e 81       	ldd	r21, Y+6	; 0x06
    136a:	57 fd       	sbrc	r21, 7
    136c:	0a c0       	rjmp	.+20     	; 0x1382 <snprintf+0x58>
    136e:	2f 81       	ldd	r18, Y+7	; 0x07
    1370:	38 85       	ldd	r19, Y+8	; 0x08
    1372:	42 17       	cp	r20, r18
    1374:	53 07       	cpc	r21, r19
    1376:	0c f4       	brge	.+2      	; 0x137a <snprintf+0x50>
    1378:	9a 01       	movw	r18, r20
    137a:	f8 01       	movw	r30, r16
    137c:	e2 0f       	add	r30, r18
    137e:	f3 1f       	adc	r31, r19
    1380:	10 82       	st	Z, r1
    1382:	2e 96       	adiw	r28, 0x0e	; 14
    1384:	e4 e0       	ldi	r30, 0x04	; 4
    1386:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__epilogue_restores__+0x1c>

0000138a <vfprintf>:
    138a:	ab e0       	ldi	r26, 0x0B	; 11
    138c:	b0 e0       	ldi	r27, 0x00	; 0
    138e:	eb ec       	ldi	r30, 0xCB	; 203
    1390:	f9 e0       	ldi	r31, 0x09	; 9
    1392:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__prologue_saves__>
    1396:	6c 01       	movw	r12, r24
    1398:	7b 01       	movw	r14, r22
    139a:	8a 01       	movw	r16, r20
    139c:	fc 01       	movw	r30, r24
    139e:	16 82       	std	Z+6, r1	; 0x06
    13a0:	17 82       	std	Z+7, r1	; 0x07
    13a2:	83 81       	ldd	r24, Z+3	; 0x03
    13a4:	81 ff       	sbrs	r24, 1
    13a6:	cc c1       	rjmp	.+920    	; 0x1740 <vfprintf+0x3b6>
    13a8:	ce 01       	movw	r24, r28
    13aa:	01 96       	adiw	r24, 0x01	; 1
    13ac:	3c 01       	movw	r6, r24
    13ae:	f6 01       	movw	r30, r12
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	f7 01       	movw	r30, r14
    13b4:	93 fd       	sbrc	r25, 3
    13b6:	85 91       	lpm	r24, Z+
    13b8:	93 ff       	sbrs	r25, 3
    13ba:	81 91       	ld	r24, Z+
    13bc:	7f 01       	movw	r14, r30
    13be:	88 23       	and	r24, r24
    13c0:	09 f4       	brne	.+2      	; 0x13c4 <vfprintf+0x3a>
    13c2:	ba c1       	rjmp	.+884    	; 0x1738 <vfprintf+0x3ae>
    13c4:	85 32       	cpi	r24, 0x25	; 37
    13c6:	39 f4       	brne	.+14     	; 0x13d6 <vfprintf+0x4c>
    13c8:	93 fd       	sbrc	r25, 3
    13ca:	85 91       	lpm	r24, Z+
    13cc:	93 ff       	sbrs	r25, 3
    13ce:	81 91       	ld	r24, Z+
    13d0:	7f 01       	movw	r14, r30
    13d2:	85 32       	cpi	r24, 0x25	; 37
    13d4:	29 f4       	brne	.+10     	; 0x13e0 <vfprintf+0x56>
    13d6:	b6 01       	movw	r22, r12
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    13de:	e7 cf       	rjmp	.-50     	; 0x13ae <vfprintf+0x24>
    13e0:	91 2c       	mov	r9, r1
    13e2:	21 2c       	mov	r2, r1
    13e4:	31 2c       	mov	r3, r1
    13e6:	ff e1       	ldi	r31, 0x1F	; 31
    13e8:	f3 15       	cp	r31, r3
    13ea:	d8 f0       	brcs	.+54     	; 0x1422 <vfprintf+0x98>
    13ec:	8b 32       	cpi	r24, 0x2B	; 43
    13ee:	79 f0       	breq	.+30     	; 0x140e <vfprintf+0x84>
    13f0:	38 f4       	brcc	.+14     	; 0x1400 <vfprintf+0x76>
    13f2:	80 32       	cpi	r24, 0x20	; 32
    13f4:	79 f0       	breq	.+30     	; 0x1414 <vfprintf+0x8a>
    13f6:	83 32       	cpi	r24, 0x23	; 35
    13f8:	a1 f4       	brne	.+40     	; 0x1422 <vfprintf+0x98>
    13fa:	23 2d       	mov	r18, r3
    13fc:	20 61       	ori	r18, 0x10	; 16
    13fe:	1d c0       	rjmp	.+58     	; 0x143a <vfprintf+0xb0>
    1400:	8d 32       	cpi	r24, 0x2D	; 45
    1402:	61 f0       	breq	.+24     	; 0x141c <vfprintf+0x92>
    1404:	80 33       	cpi	r24, 0x30	; 48
    1406:	69 f4       	brne	.+26     	; 0x1422 <vfprintf+0x98>
    1408:	23 2d       	mov	r18, r3
    140a:	21 60       	ori	r18, 0x01	; 1
    140c:	16 c0       	rjmp	.+44     	; 0x143a <vfprintf+0xb0>
    140e:	83 2d       	mov	r24, r3
    1410:	82 60       	ori	r24, 0x02	; 2
    1412:	38 2e       	mov	r3, r24
    1414:	e3 2d       	mov	r30, r3
    1416:	e4 60       	ori	r30, 0x04	; 4
    1418:	3e 2e       	mov	r3, r30
    141a:	2a c0       	rjmp	.+84     	; 0x1470 <vfprintf+0xe6>
    141c:	f3 2d       	mov	r31, r3
    141e:	f8 60       	ori	r31, 0x08	; 8
    1420:	1d c0       	rjmp	.+58     	; 0x145c <vfprintf+0xd2>
    1422:	37 fc       	sbrc	r3, 7
    1424:	2d c0       	rjmp	.+90     	; 0x1480 <vfprintf+0xf6>
    1426:	20 ed       	ldi	r18, 0xD0	; 208
    1428:	28 0f       	add	r18, r24
    142a:	2a 30       	cpi	r18, 0x0A	; 10
    142c:	40 f0       	brcs	.+16     	; 0x143e <vfprintf+0xb4>
    142e:	8e 32       	cpi	r24, 0x2E	; 46
    1430:	b9 f4       	brne	.+46     	; 0x1460 <vfprintf+0xd6>
    1432:	36 fc       	sbrc	r3, 6
    1434:	81 c1       	rjmp	.+770    	; 0x1738 <vfprintf+0x3ae>
    1436:	23 2d       	mov	r18, r3
    1438:	20 64       	ori	r18, 0x40	; 64
    143a:	32 2e       	mov	r3, r18
    143c:	19 c0       	rjmp	.+50     	; 0x1470 <vfprintf+0xe6>
    143e:	36 fe       	sbrs	r3, 6
    1440:	06 c0       	rjmp	.+12     	; 0x144e <vfprintf+0xc4>
    1442:	8a e0       	ldi	r24, 0x0A	; 10
    1444:	98 9e       	mul	r9, r24
    1446:	20 0d       	add	r18, r0
    1448:	11 24       	eor	r1, r1
    144a:	92 2e       	mov	r9, r18
    144c:	11 c0       	rjmp	.+34     	; 0x1470 <vfprintf+0xe6>
    144e:	ea e0       	ldi	r30, 0x0A	; 10
    1450:	2e 9e       	mul	r2, r30
    1452:	20 0d       	add	r18, r0
    1454:	11 24       	eor	r1, r1
    1456:	22 2e       	mov	r2, r18
    1458:	f3 2d       	mov	r31, r3
    145a:	f0 62       	ori	r31, 0x20	; 32
    145c:	3f 2e       	mov	r3, r31
    145e:	08 c0       	rjmp	.+16     	; 0x1470 <vfprintf+0xe6>
    1460:	8c 36       	cpi	r24, 0x6C	; 108
    1462:	21 f4       	brne	.+8      	; 0x146c <vfprintf+0xe2>
    1464:	83 2d       	mov	r24, r3
    1466:	80 68       	ori	r24, 0x80	; 128
    1468:	38 2e       	mov	r3, r24
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <vfprintf+0xe6>
    146c:	88 36       	cpi	r24, 0x68	; 104
    146e:	41 f4       	brne	.+16     	; 0x1480 <vfprintf+0xf6>
    1470:	f7 01       	movw	r30, r14
    1472:	93 fd       	sbrc	r25, 3
    1474:	85 91       	lpm	r24, Z+
    1476:	93 ff       	sbrs	r25, 3
    1478:	81 91       	ld	r24, Z+
    147a:	7f 01       	movw	r14, r30
    147c:	81 11       	cpse	r24, r1
    147e:	b3 cf       	rjmp	.-154    	; 0x13e6 <vfprintf+0x5c>
    1480:	98 2f       	mov	r25, r24
    1482:	9f 7d       	andi	r25, 0xDF	; 223
    1484:	95 54       	subi	r25, 0x45	; 69
    1486:	93 30       	cpi	r25, 0x03	; 3
    1488:	28 f4       	brcc	.+10     	; 0x1494 <vfprintf+0x10a>
    148a:	0c 5f       	subi	r16, 0xFC	; 252
    148c:	1f 4f       	sbci	r17, 0xFF	; 255
    148e:	9f e3       	ldi	r25, 0x3F	; 63
    1490:	99 83       	std	Y+1, r25	; 0x01
    1492:	0d c0       	rjmp	.+26     	; 0x14ae <vfprintf+0x124>
    1494:	83 36       	cpi	r24, 0x63	; 99
    1496:	31 f0       	breq	.+12     	; 0x14a4 <vfprintf+0x11a>
    1498:	83 37       	cpi	r24, 0x73	; 115
    149a:	71 f0       	breq	.+28     	; 0x14b8 <vfprintf+0x12e>
    149c:	83 35       	cpi	r24, 0x53	; 83
    149e:	09 f0       	breq	.+2      	; 0x14a2 <vfprintf+0x118>
    14a0:	59 c0       	rjmp	.+178    	; 0x1554 <vfprintf+0x1ca>
    14a2:	21 c0       	rjmp	.+66     	; 0x14e6 <vfprintf+0x15c>
    14a4:	f8 01       	movw	r30, r16
    14a6:	80 81       	ld	r24, Z
    14a8:	89 83       	std	Y+1, r24	; 0x01
    14aa:	0e 5f       	subi	r16, 0xFE	; 254
    14ac:	1f 4f       	sbci	r17, 0xFF	; 255
    14ae:	88 24       	eor	r8, r8
    14b0:	83 94       	inc	r8
    14b2:	91 2c       	mov	r9, r1
    14b4:	53 01       	movw	r10, r6
    14b6:	13 c0       	rjmp	.+38     	; 0x14de <vfprintf+0x154>
    14b8:	28 01       	movw	r4, r16
    14ba:	f2 e0       	ldi	r31, 0x02	; 2
    14bc:	4f 0e       	add	r4, r31
    14be:	51 1c       	adc	r5, r1
    14c0:	f8 01       	movw	r30, r16
    14c2:	a0 80       	ld	r10, Z
    14c4:	b1 80       	ldd	r11, Z+1	; 0x01
    14c6:	36 fe       	sbrs	r3, 6
    14c8:	03 c0       	rjmp	.+6      	; 0x14d0 <vfprintf+0x146>
    14ca:	69 2d       	mov	r22, r9
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	02 c0       	rjmp	.+4      	; 0x14d4 <vfprintf+0x14a>
    14d0:	6f ef       	ldi	r22, 0xFF	; 255
    14d2:	7f ef       	ldi	r23, 0xFF	; 255
    14d4:	c5 01       	movw	r24, r10
    14d6:	0e 94 b4 0b 	call	0x1768	; 0x1768 <strnlen>
    14da:	4c 01       	movw	r8, r24
    14dc:	82 01       	movw	r16, r4
    14de:	f3 2d       	mov	r31, r3
    14e0:	ff 77       	andi	r31, 0x7F	; 127
    14e2:	3f 2e       	mov	r3, r31
    14e4:	16 c0       	rjmp	.+44     	; 0x1512 <vfprintf+0x188>
    14e6:	28 01       	movw	r4, r16
    14e8:	22 e0       	ldi	r18, 0x02	; 2
    14ea:	42 0e       	add	r4, r18
    14ec:	51 1c       	adc	r5, r1
    14ee:	f8 01       	movw	r30, r16
    14f0:	a0 80       	ld	r10, Z
    14f2:	b1 80       	ldd	r11, Z+1	; 0x01
    14f4:	36 fe       	sbrs	r3, 6
    14f6:	03 c0       	rjmp	.+6      	; 0x14fe <vfprintf+0x174>
    14f8:	69 2d       	mov	r22, r9
    14fa:	70 e0       	ldi	r23, 0x00	; 0
    14fc:	02 c0       	rjmp	.+4      	; 0x1502 <vfprintf+0x178>
    14fe:	6f ef       	ldi	r22, 0xFF	; 255
    1500:	7f ef       	ldi	r23, 0xFF	; 255
    1502:	c5 01       	movw	r24, r10
    1504:	0e 94 a9 0b 	call	0x1752	; 0x1752 <strnlen_P>
    1508:	4c 01       	movw	r8, r24
    150a:	f3 2d       	mov	r31, r3
    150c:	f0 68       	ori	r31, 0x80	; 128
    150e:	3f 2e       	mov	r3, r31
    1510:	82 01       	movw	r16, r4
    1512:	33 fc       	sbrc	r3, 3
    1514:	1b c0       	rjmp	.+54     	; 0x154c <vfprintf+0x1c2>
    1516:	82 2d       	mov	r24, r2
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	88 16       	cp	r8, r24
    151c:	99 06       	cpc	r9, r25
    151e:	b0 f4       	brcc	.+44     	; 0x154c <vfprintf+0x1c2>
    1520:	b6 01       	movw	r22, r12
    1522:	80 e2       	ldi	r24, 0x20	; 32
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    152a:	2a 94       	dec	r2
    152c:	f4 cf       	rjmp	.-24     	; 0x1516 <vfprintf+0x18c>
    152e:	f5 01       	movw	r30, r10
    1530:	37 fc       	sbrc	r3, 7
    1532:	85 91       	lpm	r24, Z+
    1534:	37 fe       	sbrs	r3, 7
    1536:	81 91       	ld	r24, Z+
    1538:	5f 01       	movw	r10, r30
    153a:	b6 01       	movw	r22, r12
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    1542:	21 10       	cpse	r2, r1
    1544:	2a 94       	dec	r2
    1546:	21 e0       	ldi	r18, 0x01	; 1
    1548:	82 1a       	sub	r8, r18
    154a:	91 08       	sbc	r9, r1
    154c:	81 14       	cp	r8, r1
    154e:	91 04       	cpc	r9, r1
    1550:	71 f7       	brne	.-36     	; 0x152e <vfprintf+0x1a4>
    1552:	e8 c0       	rjmp	.+464    	; 0x1724 <vfprintf+0x39a>
    1554:	84 36       	cpi	r24, 0x64	; 100
    1556:	11 f0       	breq	.+4      	; 0x155c <vfprintf+0x1d2>
    1558:	89 36       	cpi	r24, 0x69	; 105
    155a:	41 f5       	brne	.+80     	; 0x15ac <vfprintf+0x222>
    155c:	f8 01       	movw	r30, r16
    155e:	37 fe       	sbrs	r3, 7
    1560:	07 c0       	rjmp	.+14     	; 0x1570 <vfprintf+0x1e6>
    1562:	60 81       	ld	r22, Z
    1564:	71 81       	ldd	r23, Z+1	; 0x01
    1566:	82 81       	ldd	r24, Z+2	; 0x02
    1568:	93 81       	ldd	r25, Z+3	; 0x03
    156a:	0c 5f       	subi	r16, 0xFC	; 252
    156c:	1f 4f       	sbci	r17, 0xFF	; 255
    156e:	08 c0       	rjmp	.+16     	; 0x1580 <vfprintf+0x1f6>
    1570:	60 81       	ld	r22, Z
    1572:	71 81       	ldd	r23, Z+1	; 0x01
    1574:	07 2e       	mov	r0, r23
    1576:	00 0c       	add	r0, r0
    1578:	88 0b       	sbc	r24, r24
    157a:	99 0b       	sbc	r25, r25
    157c:	0e 5f       	subi	r16, 0xFE	; 254
    157e:	1f 4f       	sbci	r17, 0xFF	; 255
    1580:	f3 2d       	mov	r31, r3
    1582:	ff 76       	andi	r31, 0x6F	; 111
    1584:	3f 2e       	mov	r3, r31
    1586:	97 ff       	sbrs	r25, 7
    1588:	09 c0       	rjmp	.+18     	; 0x159c <vfprintf+0x212>
    158a:	90 95       	com	r25
    158c:	80 95       	com	r24
    158e:	70 95       	com	r23
    1590:	61 95       	neg	r22
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	8f 4f       	sbci	r24, 0xFF	; 255
    1596:	9f 4f       	sbci	r25, 0xFF	; 255
    1598:	f0 68       	ori	r31, 0x80	; 128
    159a:	3f 2e       	mov	r3, r31
    159c:	2a e0       	ldi	r18, 0x0A	; 10
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	a3 01       	movw	r20, r6
    15a2:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <__ultoa_invert>
    15a6:	88 2e       	mov	r8, r24
    15a8:	86 18       	sub	r8, r6
    15aa:	45 c0       	rjmp	.+138    	; 0x1636 <vfprintf+0x2ac>
    15ac:	85 37       	cpi	r24, 0x75	; 117
    15ae:	31 f4       	brne	.+12     	; 0x15bc <vfprintf+0x232>
    15b0:	23 2d       	mov	r18, r3
    15b2:	2f 7e       	andi	r18, 0xEF	; 239
    15b4:	b2 2e       	mov	r11, r18
    15b6:	2a e0       	ldi	r18, 0x0A	; 10
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	25 c0       	rjmp	.+74     	; 0x1606 <vfprintf+0x27c>
    15bc:	93 2d       	mov	r25, r3
    15be:	99 7f       	andi	r25, 0xF9	; 249
    15c0:	b9 2e       	mov	r11, r25
    15c2:	8f 36       	cpi	r24, 0x6F	; 111
    15c4:	c1 f0       	breq	.+48     	; 0x15f6 <vfprintf+0x26c>
    15c6:	18 f4       	brcc	.+6      	; 0x15ce <vfprintf+0x244>
    15c8:	88 35       	cpi	r24, 0x58	; 88
    15ca:	79 f0       	breq	.+30     	; 0x15ea <vfprintf+0x260>
    15cc:	b5 c0       	rjmp	.+362    	; 0x1738 <vfprintf+0x3ae>
    15ce:	80 37       	cpi	r24, 0x70	; 112
    15d0:	19 f0       	breq	.+6      	; 0x15d8 <vfprintf+0x24e>
    15d2:	88 37       	cpi	r24, 0x78	; 120
    15d4:	21 f0       	breq	.+8      	; 0x15de <vfprintf+0x254>
    15d6:	b0 c0       	rjmp	.+352    	; 0x1738 <vfprintf+0x3ae>
    15d8:	e9 2f       	mov	r30, r25
    15da:	e0 61       	ori	r30, 0x10	; 16
    15dc:	be 2e       	mov	r11, r30
    15de:	b4 fe       	sbrs	r11, 4
    15e0:	0d c0       	rjmp	.+26     	; 0x15fc <vfprintf+0x272>
    15e2:	fb 2d       	mov	r31, r11
    15e4:	f4 60       	ori	r31, 0x04	; 4
    15e6:	bf 2e       	mov	r11, r31
    15e8:	09 c0       	rjmp	.+18     	; 0x15fc <vfprintf+0x272>
    15ea:	34 fe       	sbrs	r3, 4
    15ec:	0a c0       	rjmp	.+20     	; 0x1602 <vfprintf+0x278>
    15ee:	29 2f       	mov	r18, r25
    15f0:	26 60       	ori	r18, 0x06	; 6
    15f2:	b2 2e       	mov	r11, r18
    15f4:	06 c0       	rjmp	.+12     	; 0x1602 <vfprintf+0x278>
    15f6:	28 e0       	ldi	r18, 0x08	; 8
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	05 c0       	rjmp	.+10     	; 0x1606 <vfprintf+0x27c>
    15fc:	20 e1       	ldi	r18, 0x10	; 16
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <vfprintf+0x27c>
    1602:	20 e1       	ldi	r18, 0x10	; 16
    1604:	32 e0       	ldi	r19, 0x02	; 2
    1606:	f8 01       	movw	r30, r16
    1608:	b7 fe       	sbrs	r11, 7
    160a:	07 c0       	rjmp	.+14     	; 0x161a <vfprintf+0x290>
    160c:	60 81       	ld	r22, Z
    160e:	71 81       	ldd	r23, Z+1	; 0x01
    1610:	82 81       	ldd	r24, Z+2	; 0x02
    1612:	93 81       	ldd	r25, Z+3	; 0x03
    1614:	0c 5f       	subi	r16, 0xFC	; 252
    1616:	1f 4f       	sbci	r17, 0xFF	; 255
    1618:	06 c0       	rjmp	.+12     	; 0x1626 <vfprintf+0x29c>
    161a:	60 81       	ld	r22, Z
    161c:	71 81       	ldd	r23, Z+1	; 0x01
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 5f       	subi	r16, 0xFE	; 254
    1624:	1f 4f       	sbci	r17, 0xFF	; 255
    1626:	a3 01       	movw	r20, r6
    1628:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <__ultoa_invert>
    162c:	88 2e       	mov	r8, r24
    162e:	86 18       	sub	r8, r6
    1630:	fb 2d       	mov	r31, r11
    1632:	ff 77       	andi	r31, 0x7F	; 127
    1634:	3f 2e       	mov	r3, r31
    1636:	36 fe       	sbrs	r3, 6
    1638:	0d c0       	rjmp	.+26     	; 0x1654 <vfprintf+0x2ca>
    163a:	23 2d       	mov	r18, r3
    163c:	2e 7f       	andi	r18, 0xFE	; 254
    163e:	a2 2e       	mov	r10, r18
    1640:	89 14       	cp	r8, r9
    1642:	58 f4       	brcc	.+22     	; 0x165a <vfprintf+0x2d0>
    1644:	34 fe       	sbrs	r3, 4
    1646:	0b c0       	rjmp	.+22     	; 0x165e <vfprintf+0x2d4>
    1648:	32 fc       	sbrc	r3, 2
    164a:	09 c0       	rjmp	.+18     	; 0x165e <vfprintf+0x2d4>
    164c:	83 2d       	mov	r24, r3
    164e:	8e 7e       	andi	r24, 0xEE	; 238
    1650:	a8 2e       	mov	r10, r24
    1652:	05 c0       	rjmp	.+10     	; 0x165e <vfprintf+0x2d4>
    1654:	b8 2c       	mov	r11, r8
    1656:	a3 2c       	mov	r10, r3
    1658:	03 c0       	rjmp	.+6      	; 0x1660 <vfprintf+0x2d6>
    165a:	b8 2c       	mov	r11, r8
    165c:	01 c0       	rjmp	.+2      	; 0x1660 <vfprintf+0x2d6>
    165e:	b9 2c       	mov	r11, r9
    1660:	a4 fe       	sbrs	r10, 4
    1662:	0f c0       	rjmp	.+30     	; 0x1682 <vfprintf+0x2f8>
    1664:	fe 01       	movw	r30, r28
    1666:	e8 0d       	add	r30, r8
    1668:	f1 1d       	adc	r31, r1
    166a:	80 81       	ld	r24, Z
    166c:	80 33       	cpi	r24, 0x30	; 48
    166e:	21 f4       	brne	.+8      	; 0x1678 <vfprintf+0x2ee>
    1670:	9a 2d       	mov	r25, r10
    1672:	99 7e       	andi	r25, 0xE9	; 233
    1674:	a9 2e       	mov	r10, r25
    1676:	09 c0       	rjmp	.+18     	; 0x168a <vfprintf+0x300>
    1678:	a2 fe       	sbrs	r10, 2
    167a:	06 c0       	rjmp	.+12     	; 0x1688 <vfprintf+0x2fe>
    167c:	b3 94       	inc	r11
    167e:	b3 94       	inc	r11
    1680:	04 c0       	rjmp	.+8      	; 0x168a <vfprintf+0x300>
    1682:	8a 2d       	mov	r24, r10
    1684:	86 78       	andi	r24, 0x86	; 134
    1686:	09 f0       	breq	.+2      	; 0x168a <vfprintf+0x300>
    1688:	b3 94       	inc	r11
    168a:	a3 fc       	sbrc	r10, 3
    168c:	11 c0       	rjmp	.+34     	; 0x16b0 <vfprintf+0x326>
    168e:	a0 fe       	sbrs	r10, 0
    1690:	06 c0       	rjmp	.+12     	; 0x169e <vfprintf+0x314>
    1692:	b2 14       	cp	r11, r2
    1694:	88 f4       	brcc	.+34     	; 0x16b8 <vfprintf+0x32e>
    1696:	28 0c       	add	r2, r8
    1698:	92 2c       	mov	r9, r2
    169a:	9b 18       	sub	r9, r11
    169c:	0e c0       	rjmp	.+28     	; 0x16ba <vfprintf+0x330>
    169e:	b2 14       	cp	r11, r2
    16a0:	60 f4       	brcc	.+24     	; 0x16ba <vfprintf+0x330>
    16a2:	b6 01       	movw	r22, r12
    16a4:	80 e2       	ldi	r24, 0x20	; 32
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    16ac:	b3 94       	inc	r11
    16ae:	f7 cf       	rjmp	.-18     	; 0x169e <vfprintf+0x314>
    16b0:	b2 14       	cp	r11, r2
    16b2:	18 f4       	brcc	.+6      	; 0x16ba <vfprintf+0x330>
    16b4:	2b 18       	sub	r2, r11
    16b6:	02 c0       	rjmp	.+4      	; 0x16bc <vfprintf+0x332>
    16b8:	98 2c       	mov	r9, r8
    16ba:	21 2c       	mov	r2, r1
    16bc:	a4 fe       	sbrs	r10, 4
    16be:	10 c0       	rjmp	.+32     	; 0x16e0 <vfprintf+0x356>
    16c0:	b6 01       	movw	r22, r12
    16c2:	80 e3       	ldi	r24, 0x30	; 48
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    16ca:	a2 fe       	sbrs	r10, 2
    16cc:	17 c0       	rjmp	.+46     	; 0x16fc <vfprintf+0x372>
    16ce:	a1 fc       	sbrc	r10, 1
    16d0:	03 c0       	rjmp	.+6      	; 0x16d8 <vfprintf+0x34e>
    16d2:	88 e7       	ldi	r24, 0x78	; 120
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	02 c0       	rjmp	.+4      	; 0x16dc <vfprintf+0x352>
    16d8:	88 e5       	ldi	r24, 0x58	; 88
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	b6 01       	movw	r22, r12
    16de:	0c c0       	rjmp	.+24     	; 0x16f8 <vfprintf+0x36e>
    16e0:	8a 2d       	mov	r24, r10
    16e2:	86 78       	andi	r24, 0x86	; 134
    16e4:	59 f0       	breq	.+22     	; 0x16fc <vfprintf+0x372>
    16e6:	a1 fe       	sbrs	r10, 1
    16e8:	02 c0       	rjmp	.+4      	; 0x16ee <vfprintf+0x364>
    16ea:	8b e2       	ldi	r24, 0x2B	; 43
    16ec:	01 c0       	rjmp	.+2      	; 0x16f0 <vfprintf+0x366>
    16ee:	80 e2       	ldi	r24, 0x20	; 32
    16f0:	a7 fc       	sbrc	r10, 7
    16f2:	8d e2       	ldi	r24, 0x2D	; 45
    16f4:	b6 01       	movw	r22, r12
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    16fc:	89 14       	cp	r8, r9
    16fe:	38 f4       	brcc	.+14     	; 0x170e <vfprintf+0x384>
    1700:	b6 01       	movw	r22, r12
    1702:	80 e3       	ldi	r24, 0x30	; 48
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    170a:	9a 94       	dec	r9
    170c:	f7 cf       	rjmp	.-18     	; 0x16fc <vfprintf+0x372>
    170e:	8a 94       	dec	r8
    1710:	f3 01       	movw	r30, r6
    1712:	e8 0d       	add	r30, r8
    1714:	f1 1d       	adc	r31, r1
    1716:	80 81       	ld	r24, Z
    1718:	b6 01       	movw	r22, r12
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    1720:	81 10       	cpse	r8, r1
    1722:	f5 cf       	rjmp	.-22     	; 0x170e <vfprintf+0x384>
    1724:	22 20       	and	r2, r2
    1726:	09 f4       	brne	.+2      	; 0x172a <vfprintf+0x3a0>
    1728:	42 ce       	rjmp	.-892    	; 0x13ae <vfprintf+0x24>
    172a:	b6 01       	movw	r22, r12
    172c:	80 e2       	ldi	r24, 0x20	; 32
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	0e 94 bf 0b 	call	0x177e	; 0x177e <fputc>
    1734:	2a 94       	dec	r2
    1736:	f6 cf       	rjmp	.-20     	; 0x1724 <vfprintf+0x39a>
    1738:	f6 01       	movw	r30, r12
    173a:	86 81       	ldd	r24, Z+6	; 0x06
    173c:	97 81       	ldd	r25, Z+7	; 0x07
    173e:	02 c0       	rjmp	.+4      	; 0x1744 <vfprintf+0x3ba>
    1740:	8f ef       	ldi	r24, 0xFF	; 255
    1742:	9f ef       	ldi	r25, 0xFF	; 255
    1744:	2b 96       	adiw	r28, 0x0b	; 11
    1746:	e2 e1       	ldi	r30, 0x12	; 18
    1748:	0c 94 af 0c 	jmp	0x195e	; 0x195e <__epilogue_restores__>

0000174c <__ctype_isfalse>:
    174c:	99 27       	eor	r25, r25
    174e:	88 27       	eor	r24, r24

00001750 <__ctype_istrue>:
    1750:	08 95       	ret

00001752 <strnlen_P>:
    1752:	fc 01       	movw	r30, r24
    1754:	05 90       	lpm	r0, Z+
    1756:	61 50       	subi	r22, 0x01	; 1
    1758:	70 40       	sbci	r23, 0x00	; 0
    175a:	01 10       	cpse	r0, r1
    175c:	d8 f7       	brcc	.-10     	; 0x1754 <strnlen_P+0x2>
    175e:	80 95       	com	r24
    1760:	90 95       	com	r25
    1762:	8e 0f       	add	r24, r30
    1764:	9f 1f       	adc	r25, r31
    1766:	08 95       	ret

00001768 <strnlen>:
    1768:	fc 01       	movw	r30, r24
    176a:	61 50       	subi	r22, 0x01	; 1
    176c:	70 40       	sbci	r23, 0x00	; 0
    176e:	01 90       	ld	r0, Z+
    1770:	01 10       	cpse	r0, r1
    1772:	d8 f7       	brcc	.-10     	; 0x176a <strnlen+0x2>
    1774:	80 95       	com	r24
    1776:	90 95       	com	r25
    1778:	8e 0f       	add	r24, r30
    177a:	9f 1f       	adc	r25, r31
    177c:	08 95       	ret

0000177e <fputc>:
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	cf 93       	push	r28
    1784:	df 93       	push	r29
    1786:	fb 01       	movw	r30, r22
    1788:	23 81       	ldd	r18, Z+3	; 0x03
    178a:	21 fd       	sbrc	r18, 1
    178c:	03 c0       	rjmp	.+6      	; 0x1794 <fputc+0x16>
    178e:	8f ef       	ldi	r24, 0xFF	; 255
    1790:	9f ef       	ldi	r25, 0xFF	; 255
    1792:	2c c0       	rjmp	.+88     	; 0x17ec <fputc+0x6e>
    1794:	22 ff       	sbrs	r18, 2
    1796:	16 c0       	rjmp	.+44     	; 0x17c4 <fputc+0x46>
    1798:	46 81       	ldd	r20, Z+6	; 0x06
    179a:	57 81       	ldd	r21, Z+7	; 0x07
    179c:	24 81       	ldd	r18, Z+4	; 0x04
    179e:	35 81       	ldd	r19, Z+5	; 0x05
    17a0:	42 17       	cp	r20, r18
    17a2:	53 07       	cpc	r21, r19
    17a4:	44 f4       	brge	.+16     	; 0x17b6 <fputc+0x38>
    17a6:	a0 81       	ld	r26, Z
    17a8:	b1 81       	ldd	r27, Z+1	; 0x01
    17aa:	9d 01       	movw	r18, r26
    17ac:	2f 5f       	subi	r18, 0xFF	; 255
    17ae:	3f 4f       	sbci	r19, 0xFF	; 255
    17b0:	20 83       	st	Z, r18
    17b2:	31 83       	std	Z+1, r19	; 0x01
    17b4:	8c 93       	st	X, r24
    17b6:	26 81       	ldd	r18, Z+6	; 0x06
    17b8:	37 81       	ldd	r19, Z+7	; 0x07
    17ba:	2f 5f       	subi	r18, 0xFF	; 255
    17bc:	3f 4f       	sbci	r19, 0xFF	; 255
    17be:	26 83       	std	Z+6, r18	; 0x06
    17c0:	37 83       	std	Z+7, r19	; 0x07
    17c2:	14 c0       	rjmp	.+40     	; 0x17ec <fputc+0x6e>
    17c4:	8b 01       	movw	r16, r22
    17c6:	ec 01       	movw	r28, r24
    17c8:	fb 01       	movw	r30, r22
    17ca:	00 84       	ldd	r0, Z+8	; 0x08
    17cc:	f1 85       	ldd	r31, Z+9	; 0x09
    17ce:	e0 2d       	mov	r30, r0
    17d0:	09 95       	icall
    17d2:	89 2b       	or	r24, r25
    17d4:	e1 f6       	brne	.-72     	; 0x178e <fputc+0x10>
    17d6:	d8 01       	movw	r26, r16
    17d8:	16 96       	adiw	r26, 0x06	; 6
    17da:	8d 91       	ld	r24, X+
    17dc:	9c 91       	ld	r25, X
    17de:	17 97       	sbiw	r26, 0x07	; 7
    17e0:	01 96       	adiw	r24, 0x01	; 1
    17e2:	16 96       	adiw	r26, 0x06	; 6
    17e4:	8d 93       	st	X+, r24
    17e6:	9c 93       	st	X, r25
    17e8:	17 97       	sbiw	r26, 0x07	; 7
    17ea:	ce 01       	movw	r24, r28
    17ec:	df 91       	pop	r29
    17ee:	cf 91       	pop	r28
    17f0:	1f 91       	pop	r17
    17f2:	0f 91       	pop	r16
    17f4:	08 95       	ret

000017f6 <__ultoa_invert>:
    17f6:	fa 01       	movw	r30, r20
    17f8:	aa 27       	eor	r26, r26
    17fa:	28 30       	cpi	r18, 0x08	; 8
    17fc:	51 f1       	breq	.+84     	; 0x1852 <__DATA_REGION_LENGTH__+0x52>
    17fe:	20 31       	cpi	r18, 0x10	; 16
    1800:	81 f1       	breq	.+96     	; 0x1862 <__DATA_REGION_LENGTH__+0x62>
    1802:	e8 94       	clt
    1804:	6f 93       	push	r22
    1806:	6e 7f       	andi	r22, 0xFE	; 254
    1808:	6e 5f       	subi	r22, 0xFE	; 254
    180a:	7f 4f       	sbci	r23, 0xFF	; 255
    180c:	8f 4f       	sbci	r24, 0xFF	; 255
    180e:	9f 4f       	sbci	r25, 0xFF	; 255
    1810:	af 4f       	sbci	r26, 0xFF	; 255
    1812:	b1 e0       	ldi	r27, 0x01	; 1
    1814:	3e d0       	rcall	.+124    	; 0x1892 <__DATA_REGION_LENGTH__+0x92>
    1816:	b4 e0       	ldi	r27, 0x04	; 4
    1818:	3c d0       	rcall	.+120    	; 0x1892 <__DATA_REGION_LENGTH__+0x92>
    181a:	67 0f       	add	r22, r23
    181c:	78 1f       	adc	r23, r24
    181e:	89 1f       	adc	r24, r25
    1820:	9a 1f       	adc	r25, r26
    1822:	a1 1d       	adc	r26, r1
    1824:	68 0f       	add	r22, r24
    1826:	79 1f       	adc	r23, r25
    1828:	8a 1f       	adc	r24, r26
    182a:	91 1d       	adc	r25, r1
    182c:	a1 1d       	adc	r26, r1
    182e:	6a 0f       	add	r22, r26
    1830:	71 1d       	adc	r23, r1
    1832:	81 1d       	adc	r24, r1
    1834:	91 1d       	adc	r25, r1
    1836:	a1 1d       	adc	r26, r1
    1838:	20 d0       	rcall	.+64     	; 0x187a <__DATA_REGION_LENGTH__+0x7a>
    183a:	09 f4       	brne	.+2      	; 0x183e <__DATA_REGION_LENGTH__+0x3e>
    183c:	68 94       	set
    183e:	3f 91       	pop	r19
    1840:	2a e0       	ldi	r18, 0x0A	; 10
    1842:	26 9f       	mul	r18, r22
    1844:	11 24       	eor	r1, r1
    1846:	30 19       	sub	r19, r0
    1848:	30 5d       	subi	r19, 0xD0	; 208
    184a:	31 93       	st	Z+, r19
    184c:	de f6       	brtc	.-74     	; 0x1804 <__DATA_REGION_LENGTH__+0x4>
    184e:	cf 01       	movw	r24, r30
    1850:	08 95       	ret
    1852:	46 2f       	mov	r20, r22
    1854:	47 70       	andi	r20, 0x07	; 7
    1856:	40 5d       	subi	r20, 0xD0	; 208
    1858:	41 93       	st	Z+, r20
    185a:	b3 e0       	ldi	r27, 0x03	; 3
    185c:	0f d0       	rcall	.+30     	; 0x187c <__DATA_REGION_LENGTH__+0x7c>
    185e:	c9 f7       	brne	.-14     	; 0x1852 <__DATA_REGION_LENGTH__+0x52>
    1860:	f6 cf       	rjmp	.-20     	; 0x184e <__DATA_REGION_LENGTH__+0x4e>
    1862:	46 2f       	mov	r20, r22
    1864:	4f 70       	andi	r20, 0x0F	; 15
    1866:	40 5d       	subi	r20, 0xD0	; 208
    1868:	4a 33       	cpi	r20, 0x3A	; 58
    186a:	18 f0       	brcs	.+6      	; 0x1872 <__DATA_REGION_LENGTH__+0x72>
    186c:	49 5d       	subi	r20, 0xD9	; 217
    186e:	31 fd       	sbrc	r19, 1
    1870:	40 52       	subi	r20, 0x20	; 32
    1872:	41 93       	st	Z+, r20
    1874:	02 d0       	rcall	.+4      	; 0x187a <__DATA_REGION_LENGTH__+0x7a>
    1876:	a9 f7       	brne	.-22     	; 0x1862 <__DATA_REGION_LENGTH__+0x62>
    1878:	ea cf       	rjmp	.-44     	; 0x184e <__DATA_REGION_LENGTH__+0x4e>
    187a:	b4 e0       	ldi	r27, 0x04	; 4
    187c:	a6 95       	lsr	r26
    187e:	97 95       	ror	r25
    1880:	87 95       	ror	r24
    1882:	77 95       	ror	r23
    1884:	67 95       	ror	r22
    1886:	ba 95       	dec	r27
    1888:	c9 f7       	brne	.-14     	; 0x187c <__DATA_REGION_LENGTH__+0x7c>
    188a:	00 97       	sbiw	r24, 0x00	; 0
    188c:	61 05       	cpc	r22, r1
    188e:	71 05       	cpc	r23, r1
    1890:	08 95       	ret
    1892:	9b 01       	movw	r18, r22
    1894:	ac 01       	movw	r20, r24
    1896:	0a 2e       	mov	r0, r26
    1898:	06 94       	lsr	r0
    189a:	57 95       	ror	r21
    189c:	47 95       	ror	r20
    189e:	37 95       	ror	r19
    18a0:	27 95       	ror	r18
    18a2:	ba 95       	dec	r27
    18a4:	c9 f7       	brne	.-14     	; 0x1898 <__DATA_REGION_LENGTH__+0x98>
    18a6:	62 0f       	add	r22, r18
    18a8:	73 1f       	adc	r23, r19
    18aa:	84 1f       	adc	r24, r20
    18ac:	95 1f       	adc	r25, r21
    18ae:	a0 1d       	adc	r26, r0
    18b0:	08 95       	ret

000018b2 <__mulsi3>:
    18b2:	db 01       	movw	r26, r22
    18b4:	8f 93       	push	r24
    18b6:	9f 93       	push	r25
    18b8:	0e 94 8b 0c 	call	0x1916	; 0x1916 <__muluhisi3>
    18bc:	bf 91       	pop	r27
    18be:	af 91       	pop	r26
    18c0:	a2 9f       	mul	r26, r18
    18c2:	80 0d       	add	r24, r0
    18c4:	91 1d       	adc	r25, r1
    18c6:	a3 9f       	mul	r26, r19
    18c8:	90 0d       	add	r25, r0
    18ca:	b2 9f       	mul	r27, r18
    18cc:	90 0d       	add	r25, r0
    18ce:	11 24       	eor	r1, r1
    18d0:	08 95       	ret

000018d2 <__udivmodsi4>:
    18d2:	a1 e2       	ldi	r26, 0x21	; 33
    18d4:	1a 2e       	mov	r1, r26
    18d6:	aa 1b       	sub	r26, r26
    18d8:	bb 1b       	sub	r27, r27
    18da:	fd 01       	movw	r30, r26
    18dc:	0d c0       	rjmp	.+26     	; 0x18f8 <__udivmodsi4_ep>

000018de <__udivmodsi4_loop>:
    18de:	aa 1f       	adc	r26, r26
    18e0:	bb 1f       	adc	r27, r27
    18e2:	ee 1f       	adc	r30, r30
    18e4:	ff 1f       	adc	r31, r31
    18e6:	a2 17       	cp	r26, r18
    18e8:	b3 07       	cpc	r27, r19
    18ea:	e4 07       	cpc	r30, r20
    18ec:	f5 07       	cpc	r31, r21
    18ee:	20 f0       	brcs	.+8      	; 0x18f8 <__udivmodsi4_ep>
    18f0:	a2 1b       	sub	r26, r18
    18f2:	b3 0b       	sbc	r27, r19
    18f4:	e4 0b       	sbc	r30, r20
    18f6:	f5 0b       	sbc	r31, r21

000018f8 <__udivmodsi4_ep>:
    18f8:	66 1f       	adc	r22, r22
    18fa:	77 1f       	adc	r23, r23
    18fc:	88 1f       	adc	r24, r24
    18fe:	99 1f       	adc	r25, r25
    1900:	1a 94       	dec	r1
    1902:	69 f7       	brne	.-38     	; 0x18de <__udivmodsi4_loop>
    1904:	60 95       	com	r22
    1906:	70 95       	com	r23
    1908:	80 95       	com	r24
    190a:	90 95       	com	r25
    190c:	9b 01       	movw	r18, r22
    190e:	ac 01       	movw	r20, r24
    1910:	bd 01       	movw	r22, r26
    1912:	cf 01       	movw	r24, r30
    1914:	08 95       	ret

00001916 <__muluhisi3>:
    1916:	0e 94 02 08 	call	0x1004	; 0x1004 <__umulhisi3>
    191a:	a5 9f       	mul	r26, r21
    191c:	90 0d       	add	r25, r0
    191e:	b4 9f       	mul	r27, r20
    1920:	90 0d       	add	r25, r0
    1922:	a4 9f       	mul	r26, r20
    1924:	80 0d       	add	r24, r0
    1926:	91 1d       	adc	r25, r1
    1928:	11 24       	eor	r1, r1
    192a:	08 95       	ret

0000192c <__prologue_saves__>:
    192c:	2f 92       	push	r2
    192e:	3f 92       	push	r3
    1930:	4f 92       	push	r4
    1932:	5f 92       	push	r5
    1934:	6f 92       	push	r6
    1936:	7f 92       	push	r7
    1938:	8f 92       	push	r8
    193a:	9f 92       	push	r9
    193c:	af 92       	push	r10
    193e:	bf 92       	push	r11
    1940:	cf 92       	push	r12
    1942:	df 92       	push	r13
    1944:	ef 92       	push	r14
    1946:	ff 92       	push	r15
    1948:	0f 93       	push	r16
    194a:	1f 93       	push	r17
    194c:	cf 93       	push	r28
    194e:	df 93       	push	r29
    1950:	cd b7       	in	r28, 0x3d	; 61
    1952:	de b7       	in	r29, 0x3e	; 62
    1954:	ca 1b       	sub	r28, r26
    1956:	db 0b       	sbc	r29, r27
    1958:	cd bf       	out	0x3d, r28	; 61
    195a:	de bf       	out	0x3e, r29	; 62
    195c:	09 94       	ijmp

0000195e <__epilogue_restores__>:
    195e:	2a 88       	ldd	r2, Y+18	; 0x12
    1960:	39 88       	ldd	r3, Y+17	; 0x11
    1962:	48 88       	ldd	r4, Y+16	; 0x10
    1964:	5f 84       	ldd	r5, Y+15	; 0x0f
    1966:	6e 84       	ldd	r6, Y+14	; 0x0e
    1968:	7d 84       	ldd	r7, Y+13	; 0x0d
    196a:	8c 84       	ldd	r8, Y+12	; 0x0c
    196c:	9b 84       	ldd	r9, Y+11	; 0x0b
    196e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1970:	b9 84       	ldd	r11, Y+9	; 0x09
    1972:	c8 84       	ldd	r12, Y+8	; 0x08
    1974:	df 80       	ldd	r13, Y+7	; 0x07
    1976:	ee 80       	ldd	r14, Y+6	; 0x06
    1978:	fd 80       	ldd	r15, Y+5	; 0x05
    197a:	0c 81       	ldd	r16, Y+4	; 0x04
    197c:	1b 81       	ldd	r17, Y+3	; 0x03
    197e:	aa 81       	ldd	r26, Y+2	; 0x02
    1980:	b9 81       	ldd	r27, Y+1	; 0x01
    1982:	ce 0f       	add	r28, r30
    1984:	d1 1d       	adc	r29, r1
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	de bf       	out	0x3e, r29	; 62
    198a:	ed 01       	movw	r28, r26
    198c:	08 95       	ret

0000198e <_exit>:
    198e:	f8 94       	cli

00001990 <__stop_program>:
    1990:	ff cf       	rjmp	.-2      	; 0x1990 <__stop_program>
