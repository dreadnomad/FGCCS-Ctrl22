
atm4808_blink_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  0000016a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000116  00000200  00000200  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002fcd  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002201  00000000  00000000  000031e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ec  00000000  00000000  000053e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  000056d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001752  00000000  00000000  00005740  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000056  00000000  00000000  00006e92  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00006ee8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000200 <__vectors>:
 200:	0c 94 48 01 	jmp	0x290	; 0x290 <__ctors_end>
 204:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 208:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 20c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 210:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 214:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 218:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 21c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 220:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 224:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 228:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 22c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 230:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 234:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 238:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 23c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 240:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 244:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 248:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 24c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 250:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__vector_20>
 254:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 258:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 25c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 260:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 264:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 268:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 26c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 270:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 274:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 278:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 27c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 280:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 284:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 288:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>
 28c:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__bad_interrupt>

00000290 <__ctors_end>:
 290:	11 24       	eor	r1, r1
 292:	1f be       	out	0x3f, r1	; 63
 294:	cf ef       	ldi	r28, 0xFF	; 255
 296:	cd bf       	out	0x3d, r28	; 61
 298:	df e3       	ldi	r29, 0x3F	; 63
 29a:	de bf       	out	0x3e, r29	; 62
 29c:	0e 94 83 01 	call	0x306	; 0x306 <main>
 2a0:	0c 94 89 01 	jmp	0x312	; 0x312 <_exit>

000002a4 <__bad_interrupt>:
 2a4:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

000002a8 <TCA0_init>:
void PORT_init(void);
void TCA0_init(void)
{
 
    /* enable overflow interrupt */
    TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
 2a8:	e0 e0       	ldi	r30, 0x00	; 0
 2aa:	fa e0       	ldi	r31, 0x0A	; 10
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	82 87       	std	Z+10, r24	; 0x0a
    /* set Normal mode */
    TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
 2b0:	11 82       	std	Z+1, r1	; 0x01
    /* disable event counting */
    TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
 2b2:	81 85       	ldd	r24, Z+9	; 0x09
 2b4:	8e 7f       	andi	r24, 0xFE	; 254
 2b6:	81 87       	std	Z+9, r24	; 0x09
    /* set the period */
    TCA0.SINGLE.PER = PERIOD_EXAMPLE_VALUE;
 2b8:	86 eb       	ldi	r24, 0xB6	; 182
 2ba:	9c e0       	ldi	r25, 0x0C	; 12
 2bc:	86 a3       	std	Z+38, r24	; 0x26
 2be:	97 a3       	std	Z+39, r25	; 0x27
    TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV256_gc /* set clock
 2c0:	8d e0       	ldi	r24, 0x0D	; 13
 2c2:	80 83       	st	Z, r24
 2c4:	08 95       	ret

000002c6 <PORT_init>:
    | TCA_SINGLE_ENABLE_bm; /* start timer */
}
void PORT_init(void)
{
    /* set pin 0 of PORT A as output */
    PORTD.DIRSET = PIN3_bm;
 2c6:	e0 e6       	ldi	r30, 0x60	; 96
 2c8:	f4 e0       	ldi	r31, 0x04	; 4
 2ca:	88 e0       	ldi	r24, 0x08	; 8
 2cc:	81 83       	std	Z+1, r24	; 0x01
    
    PORTD.DIRCLR = PIN4_bm;
 2ce:	80 e1       	ldi	r24, 0x10	; 16
 2d0:	82 83       	std	Z+2, r24	; 0x02
    PORTD.PIN4CTRL |= PORT_ISC_BOTHEDGES_gc;
 2d2:	84 89       	ldd	r24, Z+20	; 0x14
 2d4:	81 60       	ori	r24, 0x01	; 1
 2d6:	84 8b       	std	Z+20, r24	; 0x14
 2d8:	08 95       	ret

000002da <__vector_20>:
//     PORTD.OUTTGL = PIN3_bm;
//     /* The interrupt flag has to be cleared manually */
//     TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
// }

ISR(PORTD_PORT_vect) {
 2da:	1f 92       	push	r1
 2dc:	0f 92       	push	r0
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	0f 92       	push	r0
 2e2:	11 24       	eor	r1, r1
 2e4:	8f 93       	push	r24
 2e6:	ef 93       	push	r30
 2e8:	ff 93       	push	r31
    PORTD.OUTTGL = PIN3_bm;
 2ea:	e0 e6       	ldi	r30, 0x60	; 96
 2ec:	f4 e0       	ldi	r31, 0x04	; 4
 2ee:	88 e0       	ldi	r24, 0x08	; 8
 2f0:	87 83       	std	Z+7, r24	; 0x07
    PORTD.INTFLAGS = PORT_INT4_bm;
 2f2:	80 e1       	ldi	r24, 0x10	; 16
 2f4:	81 87       	std	Z+9, r24	; 0x09
}
 2f6:	ff 91       	pop	r31
 2f8:	ef 91       	pop	r30
 2fa:	8f 91       	pop	r24
 2fc:	0f 90       	pop	r0
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

00000306 <main>:

int main(void)
{
    PORT_init();
 306:	0e 94 63 01 	call	0x2c6	; 0x2c6 <PORT_init>
    TCA0_init();
 30a:	0e 94 54 01 	call	0x2a8	; 0x2a8 <TCA0_init>
    /* enable global interrupts */
    sei();
 30e:	78 94       	sei
 310:	ff cf       	rjmp	.-2      	; 0x310 <main+0xa>

00000312 <_exit>:
 312:	f8 94       	cli

00000314 <__stop_program>:
 314:	ff cf       	rjmp	.-2      	; 0x314 <__stop_program>
