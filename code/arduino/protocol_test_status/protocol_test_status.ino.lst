
C:\Users\ko07xiqa\AppData\Local\Temp\arduino_build_653747/protocol_test_status.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	0c 94 49 01 	jmp	0x292	; 0x292 <__ctors_end>
../../../../crt1/gcrt1.S:63
     204:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:64
     208:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:65
     20c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:66
     210:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:67
     214:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:68
     218:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:69
     21c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:70
     220:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:71
     224:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:72
     228:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:73
     22c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:74
     230:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:75
     234:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:76
     238:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:77
     23c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:78
     240:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:79
     244:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__vector_17>
../../../../crt1/gcrt1.S:80
     248:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__vector_18>
../../../../crt1/gcrt1.S:81
     24c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:82
     250:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:83
     254:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:84
     258:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:85
     25c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:86
     260:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:87
     264:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__vector_25>
../../../../crt1/gcrt1.S:88
     268:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:89
     26c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:90
     270:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:91
     274:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:92
     278:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:93
     27c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:94
     280:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:95
     284:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:96
     288:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
../../../../crt1/gcrt1.S:97
     28c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>

00000290 <__ctors_start>:
__trampolines_start():
     290:	40 0a       	sbc	r4, r16

00000292 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:226
     292:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:227
     294:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:228
     296:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:230
     298:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:232
     29a:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:233
     29c:	de bf       	out	0x3e, r29	; 62

0000029e <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     29e:	28 e2       	ldi	r18, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2a0:	aa e0       	ldi	r26, 0x0A	; 10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2a2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2a4:	01 c0       	rjmp	.+2      	; 0x2a8 <.do_clear_bss_start>

000002a6 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2a6:	1d 92       	st	X+, r1

000002a8 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2a8:	a7 3b       	cpi	r26, 0xB7	; 183
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2aa:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2ac:	e1 f7       	brne	.-8      	; 0x2a6 <.do_clear_bss_loop>

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	e6 e8       	ldi	r30, 0x86	; 134
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	fc e1       	ldi	r31, 0x1C	; 28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	aa 30       	cpi	r26, 0x0A	; 10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2c4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2c6:	c9 e4       	ldi	r28, 0x49	; 73
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2c8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2ca:	04 c0       	rjmp	.+8      	; 0x2d4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2cc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2ce:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2d0:	0e 94 c6 0b 	call	0x178c	; 0x178c <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2d4:	c8 34       	cpi	r28, 0x48	; 72
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2d6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2d8:	c9 f7       	brne	.-14     	; 0x2cc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:310
     2da:	0e 94 ca 06 	call	0xd94	; 0xd94 <main>
../../../../crt1/gcrt1.S:311
     2de:	0c 94 e1 0d 	jmp	0x1bc2	; 0x1bc2 <_exit>

000002e2 <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:205
     2e2:	0c 94 00 01 	jmp	0x200	; 0x200 <__vectors>

000002e6 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     2e6:	af 92       	push	r10
     2e8:	bf 92       	push	r11
     2ea:	cf 92       	push	r12
     2ec:	df 92       	push	r13
     2ee:	ef 92       	push	r14
     2f0:	ff 92       	push	r15
     2f2:	0f 93       	push	r16
     2f4:	1f 93       	push	r17
     2f6:	cf 93       	push	r28
     2f8:	df 93       	push	r29
     2fa:	6c 01       	movw	r12, r24
     2fc:	7b 01       	movw	r14, r22
     2fe:	8b 01       	movw	r16, r22
     300:	04 0f       	add	r16, r20
     302:	15 1f       	adc	r17, r21
     304:	eb 01       	movw	r28, r22
     306:	5e 01       	movw	r10, r28
     308:	ae 18       	sub	r10, r14
     30a:	bf 08       	sbc	r11, r15
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     30c:	c0 17       	cp	r28, r16
     30e:	d1 07       	cpc	r29, r17
     310:	59 f0       	breq	.+22     	; 0x328 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     312:	69 91       	ld	r22, Y+
     314:	d6 01       	movw	r26, r12
     316:	ed 91       	ld	r30, X+
     318:	fc 91       	ld	r31, X
     31a:	01 90       	ld	r0, Z+
     31c:	f0 81       	ld	r31, Z
     31e:	e0 2d       	mov	r30, r0
     320:	c6 01       	movw	r24, r12
     322:	09 95       	icall
     324:	89 2b       	or	r24, r25
     326:	79 f7       	brne	.-34     	; 0x306 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     328:	c5 01       	movw	r24, r10
     32a:	df 91       	pop	r29
     32c:	cf 91       	pop	r28
     32e:	1f 91       	pop	r17
     330:	0f 91       	pop	r16
     332:	ff 90       	pop	r15
     334:	ef 90       	pop	r14
     336:	df 90       	pop	r13
     338:	cf 90       	pop	r12
     33a:	bf 90       	pop	r11
     33c:	af 90       	pop	r10
     33e:	08 95       	ret

00000340 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     340:	fc 01       	movw	r30, r24
     342:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     344:	41 8d       	ldd	r20, Z+25	; 0x19
     346:	25 2f       	mov	r18, r21
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	84 2f       	mov	r24, r20
     34c:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     34e:	82 1b       	sub	r24, r18
     350:	93 0b       	sbc	r25, r19
     352:	54 17       	cp	r21, r20
     354:	10 f0       	brcs	.+4      	; 0x35a <UartClass::availableForWrite()+0x1a>
     356:	cf 96       	adiw	r24, 0x3f	; 63
     358:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     35a:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:300
}
     35c:	08 95       	ret

0000035e <UartClass::read()>:
read():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     35e:	fc 01       	movw	r30, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     360:	96 89       	ldd	r25, Z+22	; 0x16
     362:	87 89       	ldd	r24, Z+23	; 0x17
     364:	98 17       	cp	r25, r24
     366:	61 f0       	breq	.+24     	; 0x380 <UartClass::read()+0x22>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     368:	a7 89       	ldd	r26, Z+23	; 0x17
     36a:	ae 0f       	add	r26, r30
     36c:	bf 2f       	mov	r27, r31
     36e:	b1 1d       	adc	r27, r1
     370:	5d 96       	adiw	r26, 0x1d	; 29
     372:	8c 91       	ld	r24, X
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     374:	97 89       	ldd	r25, Z+23	; 0x17
     376:	9f 5f       	subi	r25, 0xFF	; 255
     378:	9f 73       	andi	r25, 0x3F	; 63
     37a:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:284
    return c;
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     380:	8f ef       	ldi	r24, 0xFF	; 255
     382:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     384:	08 95       	ret

00000386 <Stream::timedRead() [clone .constprop.4]>:
millis():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
     386:	2f b7       	in	r18, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:88
  cli();
     388:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
     38a:	80 91 12 28 	lds	r24, 0x2812	; 0x802812 <timer_millis>
     38e:	90 91 13 28 	lds	r25, 0x2813	; 0x802813 <timer_millis+0x1>
     392:	a0 91 14 28 	lds	r26, 0x2814	; 0x802814 <timer_millis+0x2>
     396:	b0 91 15 28 	lds	r27, 0x2815	; 0x802815 <timer_millis+0x3>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:92

  SREG = status;
     39a:	2f bf       	out	0x3f, r18	; 63
timedRead():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:34

// private method to read stream with timeout
int Stream::timedRead()
{
  int c;
  _startMillis = millis();
     39c:	80 93 1e 28 	sts	0x281E, r24	; 0x80281e <Serial+0x8>
     3a0:	90 93 1f 28 	sts	0x281F, r25	; 0x80281f <Serial+0x9>
     3a4:	a0 93 20 28 	sts	0x2820, r26	; 0x802820 <Serial+0xa>
     3a8:	b0 93 21 28 	sts	0x2821, r27	; 0x802821 <Serial+0xb>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:37
  do
  {
    c = read();
     3ac:	86 e1       	ldi	r24, 0x16	; 22
     3ae:	98 e2       	ldi	r25, 0x28	; 40
     3b0:	0e 94 af 01 	call	0x35e	; 0x35e <UartClass::read()>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:38
    if (c >= 0) return c;
     3b4:	97 ff       	sbrs	r25, 7
     3b6:	26 c0       	rjmp	.+76     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
millis():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
     3b8:	2f b7       	in	r18, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:88
  cli();
     3ba:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
     3bc:	80 91 12 28 	lds	r24, 0x2812	; 0x802812 <timer_millis>
     3c0:	90 91 13 28 	lds	r25, 0x2813	; 0x802813 <timer_millis+0x1>
     3c4:	a0 91 14 28 	lds	r26, 0x2814	; 0x802814 <timer_millis+0x2>
     3c8:	b0 91 15 28 	lds	r27, 0x2815	; 0x802815 <timer_millis+0x3>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:92

  SREG = status;
     3cc:	2f bf       	out	0x3f, r18	; 63
timedRead():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:39
  } while (millis() - _startMillis < _timeout);
     3ce:	40 91 1e 28 	lds	r20, 0x281E	; 0x80281e <Serial+0x8>
     3d2:	50 91 1f 28 	lds	r21, 0x281F	; 0x80281f <Serial+0x9>
     3d6:	60 91 20 28 	lds	r22, 0x2820	; 0x802820 <Serial+0xa>
     3da:	70 91 21 28 	lds	r23, 0x2821	; 0x802821 <Serial+0xb>
     3de:	84 1b       	sub	r24, r20
     3e0:	95 0b       	sbc	r25, r21
     3e2:	a6 0b       	sbc	r26, r22
     3e4:	b7 0b       	sbc	r27, r23
     3e6:	40 91 1a 28 	lds	r20, 0x281A	; 0x80281a <Serial+0x4>
     3ea:	50 91 1b 28 	lds	r21, 0x281B	; 0x80281b <Serial+0x5>
     3ee:	60 91 1c 28 	lds	r22, 0x281C	; 0x80281c <Serial+0x6>
     3f2:	70 91 1d 28 	lds	r23, 0x281D	; 0x80281d <Serial+0x7>
     3f6:	84 17       	cp	r24, r20
     3f8:	95 07       	cpc	r25, r21
     3fa:	a6 07       	cpc	r26, r22
     3fc:	b7 07       	cpc	r27, r23
     3fe:	b0 f2       	brcs	.-84     	; 0x3ac <Stream::timedRead() [clone .constprop.4]+0x26>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:40
  return -1; // -1 indicates timeout
     400:	8f ef       	ldi	r24, 0xFF	; 255
     402:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:41
}
     404:	08 95       	ret

00000406 <UartClass::peek()>:
peek():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     406:	fc 01       	movw	r30, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     408:	96 89       	ldd	r25, Z+22	; 0x16
     40a:	87 89       	ldd	r24, Z+23	; 0x17
     40c:	98 17       	cp	r25, r24
     40e:	31 f0       	breq	.+12     	; 0x41c <UartClass::peek()+0x16>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     410:	87 89       	ldd	r24, Z+23	; 0x17
     412:	e8 0f       	add	r30, r24
     414:	f1 1d       	adc	r31, r1
     416:	85 8d       	ldd	r24, Z+29	; 0x1d
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     41c:	8f ef       	ldi	r24, 0xFF	; 255
     41e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     420:	08 95       	ret

00000422 <UartClass::available()>:
available():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     422:	fc 01       	movw	r30, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     424:	96 89       	ldd	r25, Z+22	; 0x16
     426:	27 89       	ldd	r18, Z+23	; 0x17
     428:	89 2f       	mov	r24, r25
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	80 5c       	subi	r24, 0xC0	; 192
     42e:	9f 4f       	sbci	r25, 0xFF	; 255
     430:	82 1b       	sub	r24, r18
     432:	91 09       	sbc	r25, r1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:259
}
     434:	8f 73       	andi	r24, 0x3F	; 63
     436:	99 27       	eor	r25, r25
     438:	08 95       	ret

0000043a <Serial0_available()>:
Serial0_available():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available()
{
  return Serial.available();
     43a:	86 e1       	ldi	r24, 0x16	; 22
     43c:	98 e2       	ldi	r25, 0x28	; 40
     43e:	0e 94 11 02 	call	0x422	; 0x422 <UartClass::available()>
     442:	21 e0       	ldi	r18, 0x01	; 1
     444:	89 2b       	or	r24, r25
     446:	09 f4       	brne	.+2      	; 0x44a <Serial0_available()+0x10>
     448:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:66
}
     44a:	82 2f       	mov	r24, r18
     44c:	08 95       	ret

0000044e <UartClass::end()>:
end():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     454:	e8 81       	ld	r30, Y
     456:	f9 81       	ldd	r31, Y+1	; 0x01
     458:	06 80       	ldd	r0, Z+6	; 0x06
     45a:	f7 81       	ldd	r31, Z+7	; 0x07
     45c:	e0 2d       	mov	r30, r0
     45e:	09 95       	icall
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     460:	ec 85       	ldd	r30, Y+12	; 0x0c
     462:	fd 85       	ldd	r31, Y+13	; 0x0d
     464:	86 81       	ldd	r24, Z+6	; 0x06
     466:	8f 73       	andi	r24, 0x3F	; 63
     468:	86 83       	std	Z+6, r24	; 0x06
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     46a:	ec 85       	ldd	r30, Y+12	; 0x0c
     46c:	fd 85       	ldd	r31, Y+13	; 0x0d
     46e:	85 81       	ldd	r24, Z+5	; 0x05
     470:	8f 75       	andi	r24, 0x5F	; 95
     472:	85 83       	std	Z+5, r24	; 0x05
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     474:	8f 89       	ldd	r24, Y+23	; 0x17
     476:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     478:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:254
}
     47a:	df 91       	pop	r29
     47c:	cf 91       	pop	r28
     47e:	08 95       	ret

00000480 <UartClass::swap(unsigned char)>:
swap():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     480:	fc 01       	movw	r30, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     482:	61 30       	cpi	r22, 0x01	; 1
     484:	19 f4       	brne	.+6      	; 0x48c <UartClass::swap(unsigned char)+0xc>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     486:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     48c:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     48e:	66 23       	and	r22, r22
     490:	d9 f3       	breq	.-10     	; 0x488 <UartClass::swap(unsigned char)+0x8>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     492:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:177
  }
}
     494:	08 95       	ret

00000496 <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     496:	dc 01       	movw	r26, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     498:	54 96       	adiw	r26, 0x14	; 20
     49a:	1c 92       	st	X, r1
     49c:	54 97       	sbiw	r26, 0x14	; 20
     49e:	54 96       	adiw	r26, 0x14	; 20
     4a0:	8c 91       	ld	r24, X
     4a2:	54 97       	sbiw	r26, 0x14	; 20
     4a4:	82 30       	cpi	r24, 0x02	; 2
     4a6:	a0 f4       	brcc	.+40     	; 0x4d0 <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     4a8:	28 2f       	mov	r18, r24
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	f9 01       	movw	r30, r18
     4ae:	ee 0f       	add	r30, r30
     4b0:	ff 1f       	adc	r31, r31
     4b2:	e2 0f       	add	r30, r18
     4b4:	f3 1f       	adc	r31, r19
     4b6:	ea 0f       	add	r30, r26
     4b8:	fb 1f       	adc	r31, r27
     4ba:	97 85       	ldd	r25, Z+15	; 0x0f
     4bc:	96 13       	cpse	r25, r22
     4be:	03 c0       	rjmp	.+6      	; 0x4c6 <UartClass::pins(unsigned char, unsigned char)+0x30>
     4c0:	96 85       	ldd	r25, Z+14	; 0x0e
     4c2:	94 17       	cp	r25, r20
     4c4:	49 f0       	breq	.+18     	; 0x4d8 <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     4c6:	8f 5f       	subi	r24, 0xFF	; 255
     4c8:	54 96       	adiw	r26, 0x14	; 20
     4ca:	8c 93       	st	X, r24
     4cc:	54 97       	sbiw	r26, 0x14	; 20
     4ce:	e7 cf       	rjmp	.-50     	; 0x49e <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     4d0:	54 96       	adiw	r26, 0x14	; 20
     4d2:	1c 92       	st	X, r1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:157
  return false;
     4d4:	80 e0       	ldi	r24, 0x00	; 0
     4d6:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     4d8:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     4da:	08 95       	ret

000004dc <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	fc 01       	movw	r30, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     4e2:	90 8d       	ldd	r25, Z+24	; 0x18
     4e4:	81 8d       	ldd	r24, Z+25	; 0x19
     4e6:	c4 85       	ldd	r28, Z+12	; 0x0c
     4e8:	d5 85       	ldd	r29, Z+13	; 0x0d
     4ea:	98 13       	cpse	r25, r24
     4ec:	06 c0       	rjmp	.+12     	; 0x4fa <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     4ee:	8d 81       	ldd	r24, Y+5	; 0x05
     4f0:	8f 7d       	andi	r24, 0xDF	; 223
     4f2:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     4fa:	a1 8d       	ldd	r26, Z+25	; 0x19
     4fc:	ae 0f       	add	r26, r30
     4fe:	bf 2f       	mov	r27, r31
     500:	b1 1d       	adc	r27, r1
     502:	a3 5a       	subi	r26, 0xA3	; 163
     504:	bf 4f       	sbci	r27, 0xFF	; 255
     506:	2c 91       	ld	r18, X
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     508:	81 8d       	ldd	r24, Z+25	; 0x19
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	01 96       	adiw	r24, 0x01	; 1
     50e:	8f 73       	andi	r24, 0x3F	; 63
     510:	99 27       	eor	r25, r25
     512:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     514:	80 e4       	ldi	r24, 0x40	; 64
     516:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     518:	a4 85       	ldd	r26, Z+12	; 0x0c
     51a:	b5 85       	ldd	r27, Z+13	; 0x0d
     51c:	12 96       	adiw	r26, 0x02	; 2
     51e:	2c 93       	st	X, r18
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     520:	90 8d       	ldd	r25, Z+24	; 0x18
     522:	81 8d       	ldd	r24, Z+25	; 0x19
     524:	98 13       	cpse	r25, r24
     526:	e6 cf       	rjmp	.-52     	; 0x4f4 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     528:	a4 85       	ldd	r26, Z+12	; 0x0c
     52a:	b5 85       	ldd	r27, Z+13	; 0x0d
     52c:	15 96       	adiw	r26, 0x05	; 5
     52e:	8c 91       	ld	r24, X
     530:	15 97       	sbiw	r26, 0x05	; 5
     532:	8f 7d       	andi	r24, 0xDF	; 223
     534:	15 96       	adiw	r26, 0x05	; 5
     536:	8c 93       	st	X, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     538:	83 8d       	ldd	r24, Z+27	; 0x1b
     53a:	88 23       	and	r24, r24
     53c:	d9 f2       	breq	.-74     	; 0x4f4 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     53e:	84 8d       	ldd	r24, Z+28	; 0x1c
     540:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x700113>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     544:	13 8e       	std	Z+27, r1	; 0x1b
     546:	d6 cf       	rjmp	.-84     	; 0x4f4 <UartClass::_tx_data_empty_irq()+0x18>

00000548 <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     548:	dc 01       	movw	r26, r24
     54a:	1c 96       	adiw	r26, 0x0c	; 12
     54c:	ed 91       	ld	r30, X+
     54e:	fc 91       	ld	r31, X
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	07 fe       	sbrs	r0, 7
     554:	03 c0       	rjmp	.+6      	; 0x55c <UartClass::_poll_tx_data_empty()+0x14>
     556:	25 81       	ldd	r18, Z+5	; 0x05
     558:	25 fd       	sbrc	r18, 5
     55a:	04 c0       	rjmp	.+8      	; 0x564 <UartClass::_poll_tx_data_empty()+0x1c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     55c:	24 81       	ldd	r18, Z+4	; 0x04
     55e:	25 fd       	sbrc	r18, 5
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     560:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <UartClass::_tx_data_empty_irq()>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     564:	08 95       	ret

00000566 <UartClass::write(unsigned char)>:
write():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     566:	ef 92       	push	r14
     568:	ff 92       	push	r15
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     578:	98 8d       	ldd	r25, Y+24	; 0x18
     57a:	89 8d       	ldd	r24, Y+25	; 0x19
     57c:	98 13       	cpse	r25, r24
     57e:	1c c0       	rjmp	.+56     	; 0x5b8 <UartClass::write(unsigned char)+0x52>
     580:	ac 85       	ldd	r26, Y+12	; 0x0c
     582:	bd 85       	ldd	r27, Y+13	; 0x0d
     584:	14 96       	adiw	r26, 0x04	; 4
     586:	8c 91       	ld	r24, X
     588:	14 97       	sbiw	r26, 0x04	; 4
     58a:	85 ff       	sbrs	r24, 5
     58c:	15 c0       	rjmp	.+42     	; 0x5b8 <UartClass::write(unsigned char)+0x52>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     58e:	12 96       	adiw	r26, 0x02	; 2
     590:	6c 93       	st	X, r22
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     592:	ac 85       	ldd	r26, Y+12	; 0x0c
     594:	bd 85       	ldd	r27, Y+13	; 0x0d
     596:	80 e4       	ldi	r24, 0x40	; 64
     598:	14 96       	adiw	r26, 0x04	; 4
     59a:	8c 93       	st	X, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     59c:	ec 85       	ldd	r30, Y+12	; 0x0c
     59e:	fd 85       	ldd	r31, Y+13	; 0x0d
     5a0:	85 81       	ldd	r24, Z+5	; 0x05
     5a2:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     5a4:	85 83       	std	Z+5, r24	; 0x05
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	1f 91       	pop	r17
     5b0:	0f 91       	pop	r16
     5b2:	ff 90       	pop	r15
     5b4:	ef 90       	pop	r14
     5b6:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     5b8:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x700111>
     5bc:	80 ff       	sbrs	r24, 0
     5be:	08 c0       	rjmp	.+16     	; 0x5d0 <UartClass::write(unsigned char)+0x6a>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     5c0:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x700113>
     5c4:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     5c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     5c8:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x700113>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	8b 8f       	std	Y+27, r24	; 0x1b
     5d0:	f6 2e       	mov	r15, r22
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     5d2:	08 8d       	ldd	r16, Y+24	; 0x18
     5d4:	10 e0       	ldi	r17, 0x00	; 0
     5d6:	0f 5f       	subi	r16, 0xFF	; 255
     5d8:	1f 4f       	sbci	r17, 0xFF	; 255
     5da:	0f 73       	andi	r16, 0x3F	; 63
     5dc:	11 27       	eor	r17, r17
     5de:	e0 2e       	mov	r14, r16
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     5e0:	89 8d       	ldd	r24, Y+25	; 0x19
     5e2:	8e 11       	cpse	r24, r14
     5e4:	04 c0       	rjmp	.+8      	; 0x5ee <UartClass::write(unsigned char)+0x88>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     5e6:	ce 01       	movw	r24, r28
     5e8:	0e 94 a4 02 	call	0x548	; 0x548 <UartClass::_poll_tx_data_empty()>
     5ec:	f9 cf       	rjmp	.-14     	; 0x5e0 <UartClass::write(unsigned char)+0x7a>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     5ee:	e8 8d       	ldd	r30, Y+24	; 0x18
     5f0:	ec 0f       	add	r30, r28
     5f2:	fd 2f       	mov	r31, r29
     5f4:	f1 1d       	adc	r31, r1
     5f6:	e3 5a       	subi	r30, 0xA3	; 163
     5f8:	ff 4f       	sbci	r31, 0xFF	; 255
     5fa:	f0 82       	st	Z, r15
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
     5fc:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     5fe:	ec 85       	ldd	r30, Y+12	; 0x0c
     600:	fd 85       	ldd	r31, Y+13	; 0x0d
     602:	85 81       	ldd	r24, Z+5	; 0x05
     604:	80 62       	ori	r24, 0x20	; 32
     606:	ce cf       	rjmp	.-100    	; 0x5a4 <UartClass::write(unsigned char)+0x3e>

00000608 <UartClass::flush()>:
flush():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     60c:	fc 01       	movw	r30, r24
     60e:	25 89       	ldd	r18, Z+21	; 0x15
     610:	22 23       	and	r18, r18
     612:	c9 f0       	breq	.+50     	; 0x646 <UartClass::flush()+0x3e>
     614:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     616:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x700111>
     61a:	80 ff       	sbrs	r24, 0
     61c:	08 c0       	rjmp	.+16     	; 0x62e <UartClass::flush()+0x26>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     61e:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x700113>
     622:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     624:	82 8d       	ldd	r24, Z+26	; 0x1a
     626:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x700113>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
     62e:	ec 85       	ldd	r30, Y+12	; 0x0c
     630:	fd 85       	ldd	r31, Y+13	; 0x0d
     632:	85 81       	ldd	r24, Z+5	; 0x05
     634:	85 fd       	sbrc	r24, 5
     636:	03 c0       	rjmp	.+6      	; 0x63e <UartClass::flush()+0x36>
     638:	84 81       	ldd	r24, Z+4	; 0x04
     63a:	86 fd       	sbrc	r24, 6
     63c:	04 c0       	rjmp	.+8      	; 0x646 <UartClass::flush()+0x3e>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
     63e:	ce 01       	movw	r24, r28
     640:	0e 94 a4 02 	call	0x548	; 0x548 <UartClass::_poll_tx_data_empty()>
     644:	f4 cf       	rjmp	.-24     	; 0x62e <UartClass::flush()+0x26>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
     646:	df 91       	pop	r29
     648:	cf 91       	pop	r28
     64a:	08 95       	ret

0000064c <serialEventRun()>:
serialEventRun():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	89 2b       	or	r24, r25
     652:	29 f0       	breq	.+10     	; 0x65e <serialEventRun()+0x12>
     654:	0e 94 1d 02 	call	0x43a	; 0x43a <Serial0_available()>
     658:	81 11       	cpse	r24, r1
     65a:	0e 94 00 00 	call	0	; 0x0 <__heap_end>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	89 2b       	or	r24, r25
     664:	49 f0       	breq	.+18     	; 0x678 <serialEventRun()+0x2c>
     666:	80 e0       	ldi	r24, 0x00	; 0
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	89 2b       	or	r24, r25
     66c:	29 f0       	breq	.+10     	; 0x678 <serialEventRun()+0x2c>
     66e:	0e 94 00 00 	call	0	; 0x0 <__heap_end>
     672:	81 11       	cpse	r24, r1
     674:	0e 94 00 00 	call	0	; 0x0 <__heap_end>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	89 2b       	or	r24, r25
     67e:	49 f0       	breq	.+18     	; 0x692 <serialEventRun()+0x46>
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	89 2b       	or	r24, r25
     686:	29 f0       	breq	.+10     	; 0x692 <serialEventRun()+0x46>
     688:	0e 94 00 00 	call	0	; 0x0 <__heap_end>
     68c:	81 11       	cpse	r24, r1
     68e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:77
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
     692:	08 95       	ret

00000694 <UartClass::operator bool()>:
operator 3():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	08 95       	ret

00000698 <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     698:	28 2f       	mov	r18, r24
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	f9 01       	movw	r30, r18
     69e:	e5 5f       	subi	r30, 0xF5	; 245
     6a0:	f3 4a       	sbci	r31, 0xA3	; 163
     6a2:	40 81       	ld	r20, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
     6a4:	4f 3f       	cpi	r20, 0xFF	; 255
     6a6:	09 f4       	brne	.+2      	; 0x6aa <digitalWrite.part.2+0x12>
     6a8:	50 c0       	rjmp	.+160    	; 0x74a <digitalWrite.part.2+0xb2>
turnOffPWM():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     6aa:	87 31       	cpi	r24, 0x17	; 23
     6ac:	58 f4       	brcc	.+22     	; 0x6c4 <digitalWrite.part.2+0x2c>
     6ae:	f9 01       	movw	r30, r18
     6b0:	ea 53       	subi	r30, 0x3A	; 58
     6b2:	f4 4a       	sbci	r31, 0xA4	; 164
     6b4:	e0 81       	ld	r30, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
     6b6:	ee 23       	and	r30, r30
     6b8:	29 f0       	breq	.+10     	; 0x6c4 <digitalWrite.part.2+0x2c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
     6ba:	e1 30       	cpi	r30, 0x01	; 1
     6bc:	99 f0       	breq	.+38     	; 0x6e4 <digitalWrite.part.2+0x4c>
     6be:	10 f0       	brcs	.+4      	; 0x6c4 <digitalWrite.part.2+0x2c>
     6c0:	e6 30       	cpi	r30, 0x06	; 6
     6c2:	20 f1       	brcs	.+72     	; 0x70c <digitalWrite.part.2+0x74>
digitalWrite.part.2():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
     6c4:	f9 01       	movw	r30, r18
     6c6:	ec 50       	subi	r30, 0x0C	; 12
     6c8:	f4 4a       	sbci	r31, 0xA4	; 164
     6ca:	e0 81       	ld	r30, Z
     6cc:	a0 e2       	ldi	r26, 0x20	; 32
     6ce:	ea 9f       	mul	r30, r26
     6d0:	f0 01       	movw	r30, r0
     6d2:	11 24       	eor	r1, r1
     6d4:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
     6d6:	80 81       	ld	r24, Z
     6d8:	84 23       	and	r24, r20
     6da:	21 f1       	breq	.+72     	; 0x724 <digitalWrite.part.2+0x8c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
     6dc:	61 11       	cpse	r22, r1
     6de:	20 c0       	rjmp	.+64     	; 0x720 <digitalWrite.part.2+0x88>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
     6e0:	46 83       	std	Z+6, r20	; 0x06
     6e2:	08 95       	ret
turnOffPWM():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:109
  switch (timer)
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
     6e4:	f9 01       	movw	r30, r18
     6e6:	e3 52       	subi	r30, 0x23	; 35
     6e8:	f4 4a       	sbci	r31, 0xA4	; 164
     6ea:	50 81       	ld	r21, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
     6ec:	53 30       	cpi	r21, 0x03	; 3
     6ee:	08 f0       	brcs	.+2      	; 0x6f2 <digitalWrite.part.2+0x5a>
     6f0:	5f 5f       	subi	r21, 0xFF	; 255
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
     6f2:	70 91 01 0a 	lds	r23, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x700a01>
     6f6:	81 e0       	ldi	r24, 0x01	; 1
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	01 c0       	rjmp	.+2      	; 0x6fe <digitalWrite.part.2+0x66>
     6fc:	88 0f       	add	r24, r24
     6fe:	5a 95       	dec	r21
     700:	ea f7       	brpl	.-6      	; 0x6fc <digitalWrite.part.2+0x64>
     702:	80 95       	com	r24
     704:	87 23       	and	r24, r23
     706:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x700a01>
     70a:	dc cf       	rjmp	.-72     	; 0x6c4 <digitalWrite.part.2+0x2c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
     70c:	80 e1       	ldi	r24, 0x10	; 16
     70e:	e8 9f       	mul	r30, r24
     710:	f0 01       	movw	r30, r0
     712:	11 24       	eor	r1, r1
     714:	e0 5a       	subi	r30, 0xA0	; 160
     716:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
     718:	81 81       	ldd	r24, Z+1	; 0x01
     71a:	8f 7e       	andi	r24, 0xEF	; 239
     71c:	81 83       	std	Z+1, r24	; 0x01
     71e:	d2 cf       	rjmp	.-92     	; 0x6c4 <digitalWrite.part.2+0x2c>
digitalWrite.part.2():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
     720:	45 83       	std	Z+5, r20	; 0x05
     722:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
     724:	23 52       	subi	r18, 0x23	; 35
     726:	34 4a       	sbci	r19, 0xA4	; 164
     728:	d9 01       	movw	r26, r18
     72a:	8c 91       	ld	r24, X
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     72c:	30 97       	sbiw	r30, 0x00	; 0
     72e:	71 f0       	breq	.+28     	; 0x74c <digitalWrite.part.2+0xb4>
     730:	8f 3f       	cpi	r24, 0xFF	; 255
     732:	61 f0       	breq	.+24     	; 0x74c <digitalWrite.part.2+0xb4>
     734:	70 96       	adiw	r30, 0x10	; 16
     736:	e8 0f       	add	r30, r24
     738:	f1 1d       	adc	r31, r1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
     73a:	9f b7       	in	r25, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:187
    cli();
     73c:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     73e:	80 81       	ld	r24, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
     740:	61 11       	cpse	r22, r1
     742:	07 c0       	rjmp	.+14     	; 0x752 <digitalWrite.part.2+0xba>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     744:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     746:	80 83       	st	Z, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
     748:	9f bf       	out	0x3f, r25	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:203
  }
}
     74a:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	e0 e0       	ldi	r30, 0x00	; 0
     750:	f4 cf       	rjmp	.-24     	; 0x73a <digitalWrite.part.2+0xa2>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     752:	88 60       	ori	r24, 0x08	; 8
     754:	f8 cf       	rjmp	.-16     	; 0x746 <digitalWrite.part.2+0xae>

00000756 <pinMode.part.1>:
pinMode.part.1():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	fc 01       	movw	r30, r24
     75e:	e5 5f       	subi	r30, 0xF5	; 245
     760:	f3 4a       	sbci	r31, 0xA3	; 163
     762:	20 81       	ld	r18, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     764:	2f 3f       	cpi	r18, 0xFF	; 255
     766:	61 f0       	breq	.+24     	; 0x780 <pinMode.part.1+0x2a>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     768:	fc 01       	movw	r30, r24
     76a:	ec 50       	subi	r30, 0x0C	; 12
     76c:	f4 4a       	sbci	r31, 0xA4	; 164
     76e:	e0 81       	ld	r30, Z
     770:	30 e2       	ldi	r19, 0x20	; 32
     772:	e3 9f       	mul	r30, r19
     774:	f0 01       	movw	r30, r0
     776:	11 24       	eor	r1, r1
     778:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     77a:	61 30       	cpi	r22, 0x01	; 1
     77c:	21 f4       	brne	.+8      	; 0x786 <pinMode.part.1+0x30>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     77e:	21 83       	std	Z+1, r18	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     786:	83 52       	subi	r24, 0x23	; 35
     788:	94 4a       	sbci	r25, 0xA4	; 164
     78a:	ec 01       	movw	r28, r24
     78c:	a8 81       	ld	r26, Y
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     78e:	af 3f       	cpi	r26, 0xFF	; 255
     790:	69 f0       	breq	.+26     	; 0x7ac <pinMode.part.1+0x56>
     792:	cf 01       	movw	r24, r30
     794:	40 96       	adiw	r24, 0x10	; 16
     796:	a8 0f       	add	r26, r24
     798:	b9 2f       	mov	r27, r25
     79a:	b1 1d       	adc	r27, r1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     79c:	9f b7       	in	r25, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     79e:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     7a0:	22 83       	std	Z+2, r18	; 0x02
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     7a2:	8c 91       	ld	r24, X
     7a4:	88 60       	ori	r24, 0x08	; 8
     7a6:	8c 93       	st	X, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:73
      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
    }

    /* Restore state */
    SREG = status;
     7a8:	9f bf       	out	0x3f, r25	; 63
     7aa:	ea cf       	rjmp	.-44     	; 0x780 <pinMode.part.1+0x2a>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     7ac:	b0 e0       	ldi	r27, 0x00	; 0
     7ae:	a0 e0       	ldi	r26, 0x00	; 0
     7b0:	f5 cf       	rjmp	.-22     	; 0x79c <pinMode.part.1+0x46>

000007b2 <UartClass::begin(unsigned long, unsigned int)>:
begin():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
     7b2:	af 92       	push	r10
     7b4:	bf 92       	push	r11
     7b6:	cf 92       	push	r12
     7b8:	df 92       	push	r13
     7ba:	ef 92       	push	r14
     7bc:	ff 92       	push	r15
     7be:	0f 93       	push	r16
     7c0:	1f 93       	push	r17
     7c2:	cf 93       	push	r28
     7c4:	df 93       	push	r29
     7c6:	ec 01       	movw	r28, r24
     7c8:	6a 01       	movw	r12, r20
     7ca:	7b 01       	movw	r14, r22
     7cc:	a2 2e       	mov	r10, r18
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
     7ce:	8d 89       	ldd	r24, Y+21	; 0x15
     7d0:	88 23       	and	r24, r24
     7d2:	39 f0       	breq	.+14     	; 0x7e2 <UartClass::begin(unsigned long, unsigned int)+0x30>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
     7d4:	e8 81       	ld	r30, Y
     7d6:	f9 81       	ldd	r31, Y+1	; 0x01
     7d8:	06 88       	ldd	r0, Z+22	; 0x16
     7da:	f7 89       	ldd	r31, Z+23	; 0x17
     7dc:	e0 2d       	mov	r30, r0
     7de:	ce 01       	movw	r24, r28
     7e0:	09 95       	icall
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
     7e2:	0c 89       	ldd	r16, Y+20	; 0x14
     7e4:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
     7e6:	bf b6       	in	r11, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:194
  cli();
     7e8:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	78 e6       	ldi	r23, 0x68	; 104
     7ee:	89 e8       	ldi	r24, 0x89	; 137
     7f0:	99 e0       	ldi	r25, 0x09	; 9
     7f2:	a7 01       	movw	r20, r14
     7f4:	96 01       	movw	r18, r12
     7f6:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__udivmodsi4>
     7fa:	69 01       	movw	r12, r18
     7fc:	7a 01       	movw	r14, r20
     7fe:	8f ef       	ldi	r24, 0xFF	; 255
     800:	c8 1a       	sub	r12, r24
     802:	d8 0a       	sbc	r13, r24
     804:	e8 0a       	sbc	r14, r24
     806:	f8 0a       	sbc	r15, r24
     808:	f6 94       	lsr	r15
     80a:	e7 94       	ror	r14
     80c:	d7 94       	ror	r13
     80e:	c7 94       	ror	r12
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
     810:	ec 85       	ldd	r30, Y+12	; 0x0c
     812:	fd 85       	ldd	r31, Y+13	; 0x0d
     814:	86 81       	ldd	r24, Z+6	; 0x06
     816:	8d 7f       	andi	r24, 0xFD	; 253
     818:	86 83       	std	Z+6, r24	; 0x06
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
     81a:	ec 85       	ldd	r30, Y+12	; 0x0c
     81c:	fd 85       	ldd	r31, Y+13	; 0x0d
     81e:	86 81       	ldd	r24, Z+6	; 0x06
     820:	86 83       	std	Z+6, r24	; 0x06
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:201

  _written = false;
     822:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:208
  int8_t sigrow_val = 0;

// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
     824:	a0 91 25 11 	lds	r26, 0x1125	; 0x801125 <__TEXT_REGION_LENGTH__+0x701125>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
     828:	0a 2e       	mov	r0, r26
     82a:	00 0c       	add	r0, r0
     82c:	bb 0b       	sbc	r27, r27
     82e:	a7 01       	movw	r20, r14
     830:	96 01       	movw	r18, r12
     832:	0e 94 aa 0b 	call	0x1754	; 0x1754 <__mulshisi3>
     836:	20 e0       	ldi	r18, 0x00	; 0
     838:	34 e0       	ldi	r19, 0x04	; 4
     83a:	40 e0       	ldi	r20, 0x00	; 0
     83c:	50 e0       	ldi	r21, 0x00	; 0
     83e:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__divmodsi4>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
     842:	ec 85       	ldd	r30, Y+12	; 0x0c
     844:	fd 85       	ldd	r31, Y+13	; 0x0d
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
     846:	c2 0e       	add	r12, r18
     848:	d3 1e       	adc	r13, r19
     84a:	e4 1e       	adc	r14, r20
     84c:	f5 1e       	adc	r15, r21
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
     84e:	c0 86       	std	Z+8, r12	; 0x08
     850:	d1 86       	std	Z+9, r13	; 0x09
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
     852:	ec 85       	ldd	r30, Y+12	; 0x0c
     854:	fd 85       	ldd	r31, Y+13	; 0x0d
     856:	a7 82       	std	Z+7, r10	; 0x07
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
     858:	ec 85       	ldd	r30, Y+12	; 0x0c
     85a:	fd 85       	ldd	r31, Y+13	; 0x0d
     85c:	86 81       	ldd	r24, Z+6	; 0x06
     85e:	80 6c       	ori	r24, 0xC0	; 192
     860:	86 83       	std	Z+6, r24	; 0x06
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
     862:	ec 85       	ldd	r30, Y+12	; 0x0c
     864:	fd 85       	ldd	r31, Y+13	; 0x0d
     866:	85 81       	ldd	r24, Z+5	; 0x05
     868:	80 68       	ori	r24, 0x80	; 128
     86a:	85 83       	std	Z+5, r24	; 0x05
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
     86c:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7005e2>
     870:	8b 89       	ldd	r24, Y+19	; 0x13
     872:	80 95       	com	r24
     874:	89 23       	and	r24, r25
     876:	78 01       	movw	r14, r16
     878:	ee 0c       	add	r14, r14
     87a:	ff 1c       	adc	r15, r15
     87c:	f7 01       	movw	r30, r14
     87e:	e0 0f       	add	r30, r16
     880:	f1 1f       	adc	r31, r17
     882:	ec 0f       	add	r30, r28
     884:	fd 1f       	adc	r31, r29
     886:	90 89       	ldd	r25, Z+16	; 0x10
     888:	89 2b       	or	r24, r25
     88a:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7005e2>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
     88e:	86 85       	ldd	r24, Z+14	; 0x0e
pinMode():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     890:	87 31       	cpi	r24, 0x17	; 23
     892:	18 f4       	brcc	.+6      	; 0x89a <UartClass::begin(unsigned long, unsigned int)+0xe8>
     894:	62 e0       	ldi	r22, 0x02	; 2
     896:	0e 94 ab 03 	call	0x756	; 0x756 <pinMode.part.1>
begin():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
     89a:	f7 01       	movw	r30, r14
     89c:	e0 0f       	add	r30, r16
     89e:	f1 1f       	adc	r31, r17
     8a0:	ec 0f       	add	r30, r28
     8a2:	fd 1f       	adc	r31, r29
     8a4:	87 85       	ldd	r24, Z+15	; 0x0f
digitalWrite():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     8a6:	87 31       	cpi	r24, 0x17	; 23
     8a8:	18 f4       	brcc	.+6      	; 0x8b0 <UartClass::begin(unsigned long, unsigned int)+0xfe>
     8aa:	61 e0       	ldi	r22, 0x01	; 1
     8ac:	0e 94 4c 03 	call	0x698	; 0x698 <digitalWrite.part.2>
begin():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
     8b0:	0e 0d       	add	r16, r14
     8b2:	1f 1d       	adc	r17, r15
     8b4:	c0 0f       	add	r28, r16
     8b6:	d1 1f       	adc	r29, r17
     8b8:	8f 85       	ldd	r24, Y+15	; 0x0f
pinMode():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     8ba:	87 31       	cpi	r24, 0x17	; 23
     8bc:	18 f4       	brcc	.+6      	; 0x8c4 <UartClass::begin(unsigned long, unsigned int)+0x112>
     8be:	61 e0       	ldi	r22, 0x01	; 1
     8c0:	0e 94 ab 03 	call	0x756	; 0x756 <pinMode.part.1>
begin():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
     8c4:	bf be       	out	0x3f, r11	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.cpp:237
}
     8c6:	df 91       	pop	r29
     8c8:	cf 91       	pop	r28
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	ff 90       	pop	r15
     8d0:	ef 90       	pop	r14
     8d2:	df 90       	pop	r13
     8d4:	cf 90       	pop	r12
     8d6:	bf 90       	pop	r11
     8d8:	af 90       	pop	r10
     8da:	08 95       	ret

000008dc <UartClass::begin(unsigned long)>:
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
     8dc:	dc 01       	movw	r26, r24
     8de:	ed 91       	ld	r30, X+
     8e0:	fc 91       	ld	r31, X
     8e2:	04 88       	ldd	r0, Z+20	; 0x14
     8e4:	f5 89       	ldd	r31, Z+21	; 0x15
     8e6:	e0 2d       	mov	r30, r0
     8e8:	23 e0       	ldi	r18, 0x03	; 3
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	09 94       	ijmp

000008ee <String::indexOf(String const&) const>:
indexOf():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:588
  if (temp == NULL) return -1;
  return temp - buffer;
}

int String::indexOf(const String &s2) const
{
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:594
  return indexOf(s2, 0);
}

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
  if (fromIndex >= len) return -1;
     8f2:	dc 01       	movw	r26, r24
     8f4:	14 96       	adiw	r26, 0x04	; 4
     8f6:	2d 91       	ld	r18, X+
     8f8:	3c 91       	ld	r19, X
     8fa:	15 97       	sbiw	r26, 0x05	; 5
     8fc:	23 2b       	or	r18, r19
     8fe:	79 f0       	breq	.+30     	; 0x91e <String::indexOf(String const&) const+0x30>
     900:	fb 01       	movw	r30, r22
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:595
  const char *found = strstr(buffer + fromIndex, s2.buffer);
     902:	cd 91       	ld	r28, X+
     904:	dc 91       	ld	r29, X
     906:	60 81       	ld	r22, Z
     908:	71 81       	ldd	r23, Z+1	; 0x01
     90a:	ce 01       	movw	r24, r28
     90c:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <strstr>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:596
  if (found == NULL) return -1;
     910:	00 97       	sbiw	r24, 0x00	; 0
     912:	29 f0       	breq	.+10     	; 0x91e <String::indexOf(String const&) const+0x30>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:597
  return found - buffer;
     914:	8c 1b       	sub	r24, r28
     916:	9d 0b       	sbc	r25, r29
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:590
}

int String::indexOf(const String &s2) const
{
  return indexOf(s2, 0);
}
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:594

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
  if (fromIndex >= len) return -1;
     91e:	8f ef       	ldi	r24, 0xFF	; 255
     920:	9f ef       	ldi	r25, 0xFF	; 255
     922:	fa cf       	rjmp	.-12     	; 0x918 <String::indexOf(String const&) const+0x2a>

00000924 <String::equals(char const*) const>:
equals():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:468
  return (len == s2.len && compareTo(s2) == 0);
}

unsigned char String::equals(const char *cstr) const
{
  if (len == 0) return (cstr == NULL || *cstr == 0);
     924:	fc 01       	movw	r30, r24
     926:	24 81       	ldd	r18, Z+4	; 0x04
     928:	35 81       	ldd	r19, Z+5	; 0x05
     92a:	23 2b       	or	r18, r19
     92c:	39 f4       	brne	.+14     	; 0x93c <String::equals(char const*) const+0x18>
     92e:	21 e0       	ldi	r18, 0x01	; 1
     930:	fb 01       	movw	r30, r22
     932:	80 81       	ld	r24, Z
     934:	88 23       	and	r24, r24
     936:	49 f0       	breq	.+18     	; 0x94a <String::equals(char const*) const+0x26>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:470
  if (cstr == NULL) return buffer[0] == 0;
  return strcmp(buffer, cstr) == 0;
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	07 c0       	rjmp	.+14     	; 0x94a <String::equals(char const*) const+0x26>
     93c:	80 81       	ld	r24, Z
     93e:	91 81       	ldd	r25, Z+1	; 0x01
     940:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <strcmp>
     944:	21 e0       	ldi	r18, 0x01	; 1
     946:	89 2b       	or	r24, r25
     948:	b9 f7       	brne	.-18     	; 0x938 <String::equals(char const*) const+0x14>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:471
}
     94a:	82 2f       	mov	r24, r18
     94c:	08 95       	ret

0000094e <String::reserve(unsigned int)>:
reserve():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:148
  buffer = NULL;
  capacity = len = 0;
}

unsigned char String::reserve(unsigned int size)
{
     94e:	0f 93       	push	r16
     950:	1f 93       	push	r17
     952:	cf 93       	push	r28
     954:	df 93       	push	r29
     956:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:149
  if (buffer && capacity >= size) return 1;
     958:	88 81       	ld	r24, Y
     95a:	99 81       	ldd	r25, Y+1	; 0x01
     95c:	00 97       	sbiw	r24, 0x00	; 0
     95e:	59 f0       	breq	.+22     	; 0x976 <String::reserve(unsigned int)+0x28>
     960:	2a 81       	ldd	r18, Y+2	; 0x02
     962:	3b 81       	ldd	r19, Y+3	; 0x03
     964:	26 17       	cp	r18, r22
     966:	37 07       	cpc	r19, r23
     968:	30 f0       	brcs	.+12     	; 0x976 <String::reserve(unsigned int)+0x28>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:152
  if (changeBuffer(size))
  {
    if (len == 0) buffer[0] = 0;
     96a:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:156
    return 1;
  }
  return 0;
}
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	08 95       	ret
     976:	8b 01       	movw	r16, r22
changeBuffer():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:160

unsigned char String::changeBuffer(unsigned int maxStrLen)
{
  char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
     978:	6f 5f       	subi	r22, 0xFF	; 255
     97a:	7f 4f       	sbci	r23, 0xFF	; 255
     97c:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <realloc>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:161
  if (newbuffer)
     980:	00 97       	sbiw	r24, 0x00	; 0
     982:	59 f0       	breq	.+22     	; 0x99a <String::reserve(unsigned int)+0x4c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:163
  {
    buffer = newbuffer;
     984:	88 83       	st	Y, r24
     986:	99 83       	std	Y+1, r25	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:164
    capacity = maxStrLen;
     988:	0a 83       	std	Y+2, r16	; 0x02
     98a:	1b 83       	std	Y+3, r17	; 0x03
reserve():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:152
unsigned char String::reserve(unsigned int size)
{
  if (buffer && capacity >= size) return 1;
  if (changeBuffer(size))
  {
    if (len == 0) buffer[0] = 0;
     98c:	2c 81       	ldd	r18, Y+4	; 0x04
     98e:	3d 81       	ldd	r19, Y+5	; 0x05
     990:	23 2b       	or	r18, r19
     992:	59 f7       	brne	.-42     	; 0x96a <String::reserve(unsigned int)+0x1c>
     994:	fc 01       	movw	r30, r24
     996:	10 82       	st	Z, r1
     998:	e8 cf       	rjmp	.-48     	; 0x96a <String::reserve(unsigned int)+0x1c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:155
    return 1;
  }
  return 0;
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	e7 cf       	rjmp	.-50     	; 0x96c <String::reserve(unsigned int)+0x1e>

0000099e <String::concat(char const*, unsigned int)>:
concat():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:280
{
  return concat(s.buffer, s.len);
}

unsigned char String::concat(const char *cstr, unsigned int length)
{
     99e:	ef 92       	push	r14
     9a0:	ff 92       	push	r15
     9a2:	0f 93       	push	r16
     9a4:	1f 93       	push	r17
     9a6:	cf 93       	push	r28
     9a8:	df 93       	push	r29
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:282
  unsigned int newlen = len + length;
  if (!cstr) return 0;
     9aa:	61 15       	cp	r22, r1
     9ac:	71 05       	cpc	r23, r1
     9ae:	41 f4       	brne	.+16     	; 0x9c0 <String::concat(char const*, unsigned int)+0x22>
     9b0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:288
  if (length == 0) return 1;
  if (!reserve(newlen)) return 0;
  strcpy(buffer + len, cstr);
  len = newlen;
  return 1;
}
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	ff 90       	pop	r15
     9bc:	ef 90       	pop	r14
     9be:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:283

unsigned char String::concat(const char *cstr, unsigned int length)
{
  unsigned int newlen = len + length;
  if (!cstr) return 0;
  if (length == 0) return 1;
     9c0:	41 15       	cp	r20, r1
     9c2:	51 05       	cpc	r21, r1
     9c4:	b1 f0       	breq	.+44     	; 0x9f2 <String::concat(char const*, unsigned int)+0x54>
     9c6:	7b 01       	movw	r14, r22
     9c8:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:281
  return concat(s.buffer, s.len);
}

unsigned char String::concat(const char *cstr, unsigned int length)
{
  unsigned int newlen = len + length;
     9ca:	0c 81       	ldd	r16, Y+4	; 0x04
     9cc:	1d 81       	ldd	r17, Y+5	; 0x05
     9ce:	04 0f       	add	r16, r20
     9d0:	15 1f       	adc	r17, r21
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:284
  if (!cstr) return 0;
  if (length == 0) return 1;
  if (!reserve(newlen)) return 0;
     9d2:	b8 01       	movw	r22, r16
     9d4:	0e 94 a7 04 	call	0x94e	; 0x94e <String::reserve(unsigned int)>
     9d8:	88 23       	and	r24, r24
     9da:	51 f3       	breq	.-44     	; 0x9b0 <String::concat(char const*, unsigned int)+0x12>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:285
  strcpy(buffer + len, cstr);
     9dc:	28 81       	ld	r18, Y
     9de:	39 81       	ldd	r19, Y+1	; 0x01
     9e0:	8c 81       	ldd	r24, Y+4	; 0x04
     9e2:	9d 81       	ldd	r25, Y+5	; 0x05
     9e4:	b7 01       	movw	r22, r14
     9e6:	82 0f       	add	r24, r18
     9e8:	93 1f       	adc	r25, r19
     9ea:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <strcpy>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:286
  len = newlen;
     9ee:	0c 83       	std	Y+4, r16	; 0x04
     9f0:	1d 83       	std	Y+5, r17	; 0x05
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:283

unsigned char String::concat(const char *cstr, unsigned int length)
{
  unsigned int newlen = len + length;
  if (!cstr) return 0;
  if (length == 0) return 1;
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	de cf       	rjmp	.-68     	; 0x9b2 <String::concat(char const*, unsigned int)+0x14>

000009f6 <String::invalidate()>:
invalidate():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:141
  capacity = 0;
  len = 0;
}

void String::invalidate(void)
{
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:142
  if (buffer) free(buffer);
     9fc:	88 81       	ld	r24, Y
     9fe:	99 81       	ldd	r25, Y+1	; 0x01
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	11 f0       	breq	.+4      	; 0xa08 <String::invalidate()+0x12>
     a04:	0e 94 68 0c 	call	0x18d0	; 0x18d0 <free>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:143
  buffer = NULL;
     a08:	18 82       	st	Y, r1
     a0a:	19 82       	std	Y+1, r1	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:144
  capacity = len = 0;
     a0c:	1c 82       	std	Y+4, r1	; 0x04
     a0e:	1d 82       	std	Y+5, r1	; 0x05
     a10:	1a 82       	std	Y+2, r1	; 0x02
     a12:	1b 82       	std	Y+3, r1	; 0x03
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:145
}
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	08 95       	ret

00000a1a <operator+(StringSumHelper const&, char const*)>:
operator+():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:377
  if (!a.concat(rhs.buffer, rhs.len)) a.invalidate();
  return a;
}

StringSumHelper &operator+(const StringSumHelper &lhs, const char *cstr)
{
     a1a:	cf 93       	push	r28
     a1c:	df 93       	push	r29
     a1e:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:379
  StringSumHelper &a = const_cast<StringSumHelper &>(lhs);
  if (!cstr || !a.concat(cstr, strlen(cstr))) a.invalidate();
     a20:	fb 01       	movw	r30, r22
     a22:	01 90       	ld	r0, Z+
     a24:	00 20       	and	r0, r0
     a26:	e9 f7       	brne	.-6      	; 0xa22 <operator+(StringSumHelper const&, char const*)+0x8>
     a28:	31 97       	sbiw	r30, 0x01	; 1
     a2a:	af 01       	movw	r20, r30
     a2c:	46 1b       	sub	r20, r22
     a2e:	57 0b       	sbc	r21, r23
     a30:	0e 94 cf 04 	call	0x99e	; 0x99e <String::concat(char const*, unsigned int)>
     a34:	81 11       	cpse	r24, r1
     a36:	03 c0       	rjmp	.+6      	; 0xa3e <operator+(StringSumHelper const&, char const*)+0x24>
     a38:	ce 01       	movw	r24, r28
     a3a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <String::invalidate()>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:381
  return a;
}
     a3e:	ce 01       	movw	r24, r28
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	08 95       	ret

00000a46 <operator+(StringSumHelper const&, String const&)>:
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:370
/*********************************************/
/*  Concatenate                              */
/*********************************************/

StringSumHelper &operator+(const StringSumHelper &lhs, const String &rhs)
{
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	ec 01       	movw	r28, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:372
  StringSumHelper &a = const_cast<StringSumHelper &>(lhs);
  if (!a.concat(rhs.buffer, rhs.len)) a.invalidate();
     a4c:	fb 01       	movw	r30, r22
     a4e:	44 81       	ldd	r20, Z+4	; 0x04
     a50:	55 81       	ldd	r21, Z+5	; 0x05
     a52:	60 81       	ld	r22, Z
     a54:	71 81       	ldd	r23, Z+1	; 0x01
     a56:	0e 94 cf 04 	call	0x99e	; 0x99e <String::concat(char const*, unsigned int)>
     a5a:	81 11       	cpse	r24, r1
     a5c:	03 c0       	rjmp	.+6      	; 0xa64 <operator+(StringSumHelper const&, String const&)+0x1e>
     a5e:	ce 01       	movw	r24, r28
     a60:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <String::invalidate()>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:374
  return a;
}
     a64:	ce 01       	movw	r24, r28
     a66:	df 91       	pop	r29
     a68:	cf 91       	pop	r28
     a6a:	08 95       	ret

00000a6c <String::copy(char const*, unsigned int)>:
copy():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:175
/*********************************************/
/*  Copy and Move                            */
/*********************************************/

String &String::copy(const char *cstr, unsigned int length)
{
     a6c:	ef 92       	push	r14
     a6e:	ff 92       	push	r15
     a70:	0f 93       	push	r16
     a72:	1f 93       	push	r17
     a74:	cf 93       	push	r28
     a76:	df 93       	push	r29
     a78:	ec 01       	movw	r28, r24
     a7a:	7b 01       	movw	r14, r22
     a7c:	8a 01       	movw	r16, r20
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:176
  if (!reserve(length))
     a7e:	ba 01       	movw	r22, r20
     a80:	0e 94 a7 04 	call	0x94e	; 0x94e <String::reserve(unsigned int)>
     a84:	81 11       	cpse	r24, r1
     a86:	0b c0       	rjmp	.+22     	; 0xa9e <String::copy(char const*, unsigned int)+0x32>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:178
  {
    invalidate();
     a88:	ce 01       	movw	r24, r28
     a8a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <String::invalidate()>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:184
    return *this;
  }
  len = length;
  strcpy(buffer, cstr);
  return *this;
}
     a8e:	ce 01       	movw	r24, r28
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	1f 91       	pop	r17
     a96:	0f 91       	pop	r16
     a98:	ff 90       	pop	r15
     a9a:	ef 90       	pop	r14
     a9c:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:181
  if (!reserve(length))
  {
    invalidate();
    return *this;
  }
  len = length;
     a9e:	0c 83       	std	Y+4, r16	; 0x04
     aa0:	1d 83       	std	Y+5, r17	; 0x05
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:182
  strcpy(buffer, cstr);
     aa2:	b7 01       	movw	r22, r14
     aa4:	88 81       	ld	r24, Y
     aa6:	99 81       	ldd	r25, Y+1	; 0x01
     aa8:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <strcpy>
     aac:	f0 cf       	rjmp	.-32     	; 0xa8e <String::copy(char const*, unsigned int)+0x22>

00000aae <String::operator=(char const*) [clone .part.3]>:
_ZN6StringaSEPKc.part.3():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:253
#endif

String &String::operator=(const char *cstr)
{
  if (cstr)
    copy(cstr, strlen(cstr));
     aae:	fb 01       	movw	r30, r22
     ab0:	01 90       	ld	r0, Z+
     ab2:	00 20       	and	r0, r0
     ab4:	e9 f7       	brne	.-6      	; 0xab0 <String::operator=(char const*) [clone .part.3]+0x2>
     ab6:	31 97       	sbiw	r30, 0x01	; 1
     ab8:	af 01       	movw	r20, r30
     aba:	46 1b       	sub	r20, r22
     abc:	57 0b       	sbc	r21, r23
     abe:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <String::copy(char const*, unsigned int)>

00000ac2 <String::String(unsigned long, unsigned char) [clone .constprop.8]>:
__base_ctor ():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:102
  char buf[2 + 8 * sizeof(long)];
  ltoa(value, buf, base);
  *this = buf;
}

String::String(unsigned long value, unsigned char base)
     ac2:	0f 93       	push	r16
     ac4:	1f 93       	push	r17
     ac6:	cf 93       	push	r28
     ac8:	df 93       	push	r29
     aca:	cd b7       	in	r28, 0x3d	; 61
     acc:	de b7       	in	r29, 0x3e	; 62
     ace:	a1 97       	sbiw	r28, 0x21	; 33
     ad0:	cd bf       	out	0x3d, r28	; 61
     ad2:	de bf       	out	0x3e, r29	; 62
     ad4:	8c 01       	movw	r16, r24
     ad6:	cb 01       	movw	r24, r22
     ad8:	ba 01       	movw	r22, r20
_ZN6String4initEv():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:135
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
     ada:	f8 01       	movw	r30, r16
     adc:	10 82       	st	Z, r1
     ade:	11 82       	std	Z+1, r1	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:136
  capacity = 0;
     ae0:	12 82       	std	Z+2, r1	; 0x02
     ae2:	13 82       	std	Z+3, r1	; 0x03
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:137
  len = 0;
     ae4:	14 82       	std	Z+4, r1	; 0x04
     ae6:	15 82       	std	Z+5, r1	; 0x05
ultoa():
c:\users\ko07xiqa\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino5\avr\include/stdlib.h:569
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ultoa_ncheck (unsigned long, char *, unsigned char);
	return __ultoa_ncheck (__val, __s, __radix);
     ae8:	2a e0       	ldi	r18, 0x0A	; 10
     aea:	ae 01       	movw	r20, r28
     aec:	4f 5f       	subi	r20, 0xFF	; 255
     aee:	5f 4f       	sbci	r21, 0xFF	; 255
     af0:	0e 94 be 0a 	call	0x157c	; 0x157c <__ultoa_ncheck>
operator=():
     af4:	be 01       	movw	r22, r28
     af6:	6f 5f       	subi	r22, 0xFF	; 255
     af8:	7f 4f       	sbci	r23, 0xFF	; 255
     afa:	c8 01       	movw	r24, r16
     afc:	0e 94 57 05 	call	0xaae	; 0xaae <String::operator=(char const*) [clone .part.3]>
__base_ctor ():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:108
{
  init();
  char buf[1 + 8 * sizeof(unsigned long)];
  ultoa(value, buf, base);
  *this = buf;
}
     b00:	a1 96       	adiw	r28, 0x21	; 33
     b02:	cd bf       	out	0x3d, r28	; 61
     b04:	de bf       	out	0x3e, r29	; 62
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	1f 91       	pop	r17
     b0c:	0f 91       	pop	r16
     b0e:	08 95       	ret

00000b10 <String::String(int, unsigned char) [clone .constprop.6]>:
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:78
  char buf[1 + 8 * sizeof(unsigned char)];
  utoa(value, buf, base);
  *this = buf;
}

String::String(int value, unsigned char base)
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	cd b7       	in	r28, 0x3d	; 61
     b1a:	de b7       	in	r29, 0x3e	; 62
     b1c:	62 97       	sbiw	r28, 0x12	; 18
     b1e:	cd bf       	out	0x3d, r28	; 61
     b20:	de bf       	out	0x3e, r29	; 62
     b22:	8c 01       	movw	r16, r24
     b24:	cb 01       	movw	r24, r22
_ZN6String4initEv():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:135
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
     b26:	f8 01       	movw	r30, r16
     b28:	10 82       	st	Z, r1
     b2a:	11 82       	std	Z+1, r1	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:136
  capacity = 0;
     b2c:	12 82       	std	Z+2, r1	; 0x02
     b2e:	13 82       	std	Z+3, r1	; 0x03
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:137
  len = 0;
     b30:	14 82       	std	Z+4, r1	; 0x04
     b32:	15 82       	std	Z+5, r1	; 0x05
itoa():
c:\users\ko07xiqa\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino5\avr\include/stdlib.h:439
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     b34:	4a e0       	ldi	r20, 0x0A	; 10
     b36:	be 01       	movw	r22, r28
     b38:	6f 5f       	subi	r22, 0xFF	; 255
     b3a:	7f 4f       	sbci	r23, 0xFF	; 255
     b3c:	0e 94 8f 0a 	call	0x151e	; 0x151e <__itoa_ncheck>
operator=():
     b40:	be 01       	movw	r22, r28
     b42:	6f 5f       	subi	r22, 0xFF	; 255
     b44:	7f 4f       	sbci	r23, 0xFF	; 255
     b46:	c8 01       	movw	r24, r16
     b48:	0e 94 57 05 	call	0xaae	; 0xaae <String::operator=(char const*) [clone .part.3]>
__base_ctor ():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:84
{
  init();
  char buf[2 + 8 * sizeof(int)];
  itoa(value, buf, base);
  *this = buf;
}
     b4c:	62 96       	adiw	r28, 0x12	; 18
     b4e:	cd bf       	out	0x3d, r28	; 61
     b50:	de bf       	out	0x3e, r29	; 62
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	08 95       	ret

00000b5c <String::String(long, unsigned char) [clone .constprop.5]>:
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:94
  char buf[1 + 8 * sizeof(unsigned int)];
  utoa(value, buf, base);
  *this = buf;
}

String::String(long value, unsigned char base)
     b5c:	0f 93       	push	r16
     b5e:	1f 93       	push	r17
     b60:	cf 93       	push	r28
     b62:	df 93       	push	r29
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	a2 97       	sbiw	r28, 0x22	; 34
     b6a:	cd bf       	out	0x3d, r28	; 61
     b6c:	de bf       	out	0x3e, r29	; 62
     b6e:	8c 01       	movw	r16, r24
     b70:	cb 01       	movw	r24, r22
     b72:	ba 01       	movw	r22, r20
_ZN6String4initEv():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:135
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
     b74:	f8 01       	movw	r30, r16
     b76:	10 82       	st	Z, r1
     b78:	11 82       	std	Z+1, r1	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:136
  capacity = 0;
     b7a:	12 82       	std	Z+2, r1	; 0x02
     b7c:	13 82       	std	Z+3, r1	; 0x03
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:137
  len = 0;
     b7e:	14 82       	std	Z+4, r1	; 0x04
     b80:	15 82       	std	Z+5, r1	; 0x05
ltoa():
c:\users\ko07xiqa\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino5\avr\include/stdlib.h:484
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
     b82:	2a e0       	ldi	r18, 0x0A	; 10
     b84:	ae 01       	movw	r20, r28
     b86:	4f 5f       	subi	r20, 0xFF	; 255
     b88:	5f 4f       	sbci	r21, 0xFF	; 255
     b8a:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__ltoa_ncheck>
operator=():
     b8e:	be 01       	movw	r22, r28
     b90:	6f 5f       	subi	r22, 0xFF	; 255
     b92:	7f 4f       	sbci	r23, 0xFF	; 255
     b94:	c8 01       	movw	r24, r16
     b96:	0e 94 57 05 	call	0xaae	; 0xaae <String::operator=(char const*) [clone .part.3]>
__base_ctor ():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:100
{
  init();
  char buf[2 + 8 * sizeof(long)];
  ltoa(value, buf, base);
  *this = buf;
}
     b9a:	a2 96       	adiw	r28, 0x22	; 34
     b9c:	cd bf       	out	0x3d, r28	; 61
     b9e:	de bf       	out	0x3e, r29	; 62
     ba0:	df 91       	pop	r29
     ba2:	cf 91       	pop	r28
     ba4:	1f 91       	pop	r17
     ba6:	0f 91       	pop	r16
     ba8:	08 95       	ret

00000baa <String::operator=(String const&)>:
operator=():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:225
  rhs.len = 0;
}
#endif

String &String::operator=(const String &rhs)
{
     baa:	cf 93       	push	r28
     bac:	df 93       	push	r29
     bae:	ec 01       	movw	r28, r24
     bb0:	fb 01       	movw	r30, r22
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:226
  if (this == &rhs) return *this;
     bb2:	86 17       	cp	r24, r22
     bb4:	97 07       	cpc	r25, r23
     bb6:	49 f0       	breq	.+18     	; 0xbca <String::operator=(String const&)+0x20>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:228

  if (rhs.buffer)
     bb8:	60 81       	ld	r22, Z
     bba:	71 81       	ldd	r23, Z+1	; 0x01
     bbc:	61 15       	cp	r22, r1
     bbe:	71 05       	cpc	r23, r1
     bc0:	41 f0       	breq	.+16     	; 0xbd2 <String::operator=(String const&)+0x28>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:229
    copy(rhs.buffer, rhs.len);
     bc2:	44 81       	ldd	r20, Z+4	; 0x04
     bc4:	55 81       	ldd	r21, Z+5	; 0x05
     bc6:	0e 94 36 05 	call	0xa6c	; 0xa6c <String::copy(char const*, unsigned int)>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:234
  else
    invalidate();

  return *this;
}
     bca:	ce 01       	movw	r24, r28
     bcc:	df 91       	pop	r29
     bce:	cf 91       	pop	r28
     bd0:	08 95       	ret
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:231
  if (this == &rhs) return *this;

  if (rhs.buffer)
    copy(rhs.buffer, rhs.len);
  else
    invalidate();
     bd2:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <String::invalidate()>
     bd6:	f9 cf       	rjmp	.-14     	; 0xbca <String::operator=(String const&)+0x20>

00000bd8 <String::String(char const*)>:
_ZN6String4initEv():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:135
/*  Memory Management                        */
/*********************************************/

inline void String::init(void)
{
  buffer = NULL;
     bd8:	fc 01       	movw	r30, r24
     bda:	10 82       	st	Z, r1
     bdc:	11 82       	std	Z+1, r1	; 0x01
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:136
  capacity = 0;
     bde:	12 82       	std	Z+2, r1	; 0x02
     be0:	13 82       	std	Z+3, r1	; 0x03
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:137
  len = 0;
     be2:	14 82       	std	Z+4, r1	; 0x04
     be4:	15 82       	std	Z+5, r1	; 0x05
__base_ctor ():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:33
/*********************************************/

String::String(const char *cstr)
{
  init();
  if (cstr) copy(cstr, strlen(cstr));
     be6:	fb 01       	movw	r30, r22
     be8:	01 90       	ld	r0, Z+
     bea:	00 20       	and	r0, r0
     bec:	e9 f7       	brne	.-6      	; 0xbe8 <String::String(char const*)+0x10>
     bee:	31 97       	sbiw	r30, 0x01	; 1
     bf0:	af 01       	movw	r20, r30
     bf2:	46 1b       	sub	r20, r22
     bf4:	57 0b       	sbc	r21, r23
     bf6:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <String::copy(char const*, unsigned int)>

00000bfa <String::substring(unsigned int, unsigned int) const>:
substring():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:636
  }
  return found;
}

String String::substring(unsigned int left, unsigned int right) const
{
     bfa:	af 92       	push	r10
     bfc:	bf 92       	push	r11
     bfe:	cf 92       	push	r12
     c00:	df 92       	push	r13
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	6c 01       	movw	r12, r24
     c10:	5b 01       	movw	r10, r22
     c12:	7a 01       	movw	r14, r20
     c14:	89 01       	movw	r16, r18
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:637
  if (left > right)
     c16:	24 17       	cp	r18, r20
     c18:	35 07       	cpc	r19, r21
     c1a:	20 f4       	brcc	.+8      	; 0xc24 <String::substring(unsigned int, unsigned int) const+0x2a>
     c1c:	8f 2d       	mov	r24, r15
     c1e:	79 01       	movw	r14, r18
     c20:	04 2f       	mov	r16, r20
     c22:	18 2f       	mov	r17, r24
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:643
  {
    unsigned int temp = right;
    right = left;
    left = temp;
  }
  String out;
     c24:	6d e5       	ldi	r22, 0x5D	; 93
     c26:	7c e5       	ldi	r23, 0x5C	; 92
     c28:	c6 01       	movw	r24, r12
     c2a:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:644
  if (left >= len) return out;
     c2e:	d5 01       	movw	r26, r10
     c30:	14 96       	adiw	r26, 0x04	; 4
     c32:	cd 91       	ld	r28, X+
     c34:	dc 91       	ld	r29, X
     c36:	ec 16       	cp	r14, r28
     c38:	fd 06       	cpc	r15, r29
     c3a:	e0 f4       	brcc	.+56     	; 0xc74 <String::substring(unsigned int, unsigned int) const+0x7a>
     c3c:	0c 17       	cp	r16, r28
     c3e:	1d 07       	cpc	r17, r29
     c40:	08 f4       	brcc	.+2      	; 0xc44 <String::substring(unsigned int, unsigned int) const+0x4a>
     c42:	e8 01       	movw	r28, r16
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:646
  if (right > len) right = len;
  char temp = buffer[right]; // save the replaced character
     c44:	d5 01       	movw	r26, r10
     c46:	ed 91       	ld	r30, X+
     c48:	fc 91       	ld	r31, X
     c4a:	11 97       	sbiw	r26, 0x01	; 1
     c4c:	ec 0f       	add	r30, r28
     c4e:	fd 1f       	adc	r31, r29
     c50:	10 81       	ld	r17, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:647
  buffer[right] = '\0';
     c52:	10 82       	st	Z, r1
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:648
  out = buffer + left;  // pointer arithmetic
     c54:	6d 91       	ld	r22, X+
     c56:	7c 91       	ld	r23, X
     c58:	6e 0d       	add	r22, r14
     c5a:	7f 1d       	adc	r23, r15
operator=():
     c5c:	c6 01       	movw	r24, r12
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:252
}
#endif

String &String::operator=(const char *cstr)
{
  if (cstr)
     c5e:	61 15       	cp	r22, r1
     c60:	71 05       	cpc	r23, r1
     c62:	a1 f0       	breq	.+40     	; 0xc8c <String::substring(unsigned int, unsigned int) const+0x92>
     c64:	0e 94 57 05 	call	0xaae	; 0xaae <String::operator=(char const*) [clone .part.3]>
substring():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:649
  if (left >= len) return out;
  if (right > len) right = len;
  char temp = buffer[right]; // save the replaced character
  buffer[right] = '\0';
  out = buffer + left;  // pointer arithmetic
  buffer[right] = temp; //restore character
     c68:	f5 01       	movw	r30, r10
     c6a:	80 81       	ld	r24, Z
     c6c:	91 81       	ldd	r25, Z+1	; 0x01
     c6e:	c8 0f       	add	r28, r24
     c70:	d9 1f       	adc	r29, r25
     c72:	18 83       	st	Y, r17
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:651
  return out;
}
     c74:	c6 01       	movw	r24, r12
     c76:	df 91       	pop	r29
     c78:	cf 91       	pop	r28
     c7a:	1f 91       	pop	r17
     c7c:	0f 91       	pop	r16
     c7e:	ff 90       	pop	r15
     c80:	ef 90       	pop	r14
     c82:	df 90       	pop	r13
     c84:	cf 90       	pop	r12
     c86:	bf 90       	pop	r11
     c88:	af 90       	pop	r10
     c8a:	08 95       	ret
operator=():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:255
String &String::operator=(const char *cstr)
{
  if (cstr)
    copy(cstr, strlen(cstr));
  else
    invalidate();
     c8c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <String::invalidate()>
     c90:	eb cf       	rjmp	.-42     	; 0xc68 <String::substring(unsigned int, unsigned int) const+0x6e>

00000c92 <String::~String()>:
__base_dtor ():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:126
  *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::~String()
{
  free(buffer);
     c92:	fc 01       	movw	r30, r24
     c94:	80 81       	ld	r24, Z
     c96:	91 81       	ldd	r25, Z+1	; 0x01
     c98:	0c 94 68 0c 	jmp	0x18d0	; 0x18d0 <free>

00000c9c <__vector_18>:
__vector_18():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:50
#error "Don't know what the Data Received interrupt vector is called for Serial"
#endif

#if defined(HWSERIAL0_DRE_VECTOR)
ISR(HWSERIAL0_DRE_VECTOR)
{
     c9c:	1f 92       	push	r1
     c9e:	0f 92       	push	r0
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	0f 92       	push	r0
     ca4:	11 24       	eor	r1, r1
     ca6:	2f 93       	push	r18
     ca8:	3f 93       	push	r19
     caa:	4f 93       	push	r20
     cac:	5f 93       	push	r21
     cae:	6f 93       	push	r22
     cb0:	7f 93       	push	r23
     cb2:	8f 93       	push	r24
     cb4:	9f 93       	push	r25
     cb6:	af 93       	push	r26
     cb8:	bf 93       	push	r27
     cba:	ef 93       	push	r30
     cbc:	ff 93       	push	r31
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:51
  Serial._tx_data_empty_irq();
     cbe:	86 e1       	ldi	r24, 0x16	; 22
     cc0:	98 e2       	ldi	r25, 0x28	; 40
     cc2:	0e 94 6e 02 	call	0x4dc	; 0x4dc <UartClass::_tx_data_empty_irq()>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:52
}
     cc6:	ff 91       	pop	r31
     cc8:	ef 91       	pop	r30
     cca:	bf 91       	pop	r27
     ccc:	af 91       	pop	r26
     cce:	9f 91       	pop	r25
     cd0:	8f 91       	pop	r24
     cd2:	7f 91       	pop	r23
     cd4:	6f 91       	pop	r22
     cd6:	5f 91       	pop	r21
     cd8:	4f 91       	pop	r20
     cda:	3f 91       	pop	r19
     cdc:	2f 91       	pop	r18
     cde:	0f 90       	pop	r0
     ce0:	0f be       	out	0x3f, r0	; 63
     ce2:	0f 90       	pop	r0
     ce4:	1f 90       	pop	r1
     ce6:	18 95       	reti

00000ce8 <__vector_17>:
__vector_17():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:41

#if defined(HAVE_HWSERIAL0)

#if defined(HWSERIAL0_RXC_VECTOR)
ISR(HWSERIAL0_RXC_VECTOR)
{
     ce8:	1f 92       	push	r1
     cea:	0f 92       	push	r0
     cec:	0f b6       	in	r0, 0x3f	; 63
     cee:	0f 92       	push	r0
     cf0:	11 24       	eor	r1, r1
     cf2:	2f 93       	push	r18
     cf4:	8f 93       	push	r24
     cf6:	9f 93       	push	r25
     cf8:	ef 93       	push	r30
     cfa:	ff 93       	push	r31
_rx_complete_irq():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:59
// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_rx_complete_irq(void)
{
  //if (bit_is_clear(*_rxdatah, USART_PERR_bp)) {
  if (!(((*_hwserial_module).RXDATAH) & USART_PERR_bm)) {
     cfc:	e0 91 22 28 	lds	r30, 0x2822	; 0x802822 <Serial+0xc>
     d00:	f0 91 23 28 	lds	r31, 0x2823	; 0x802823 <Serial+0xd>
     d04:	81 81       	ldd	r24, Z+1	; 0x01
     d06:	81 fd       	sbrc	r24, 1
     d08:	1b c0       	rjmp	.+54     	; 0xd40 <__vector_17+0x58>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:62
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = (*_hwserial_module).RXDATAL;
     d0a:	90 81       	ld	r25, Z
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:63
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
     d0c:	80 91 2c 28 	lds	r24, 0x282C	; 0x80282c <Serial+0x16>
     d10:	8f 5f       	subi	r24, 0xFF	; 255
     d12:	8f 73       	andi	r24, 0x3F	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:69

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail)
     d14:	20 91 2d 28 	lds	r18, 0x282D	; 0x80282d <Serial+0x17>
     d18:	82 17       	cp	r24, r18
     d1a:	41 f0       	breq	.+16     	; 0xd2c <__vector_17+0x44>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:71
    {
      _rx_buffer[_rx_buffer_head] = c;
     d1c:	e0 91 2c 28 	lds	r30, 0x282C	; 0x80282c <Serial+0x16>
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	ea 5e       	subi	r30, 0xEA	; 234
     d24:	f7 4d       	sbci	r31, 0xD7	; 215
     d26:	95 8f       	std	Z+29, r25	; 0x1d
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:72
      _rx_buffer_head = i;
     d28:	80 93 2c 28 	sts	0x282C, r24	; 0x80282c <Serial+0x16>
__vector_17():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:43
  Serial._rx_complete_irq();
}
     d2c:	ff 91       	pop	r31
     d2e:	ef 91       	pop	r30
     d30:	9f 91       	pop	r25
     d32:	8f 91       	pop	r24
     d34:	2f 91       	pop	r18
     d36:	0f 90       	pop	r0
     d38:	0f be       	out	0x3f, r0	; 63
     d3a:	0f 90       	pop	r0
     d3c:	1f 90       	pop	r1
     d3e:	18 95       	reti
_rx_complete_irq():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:78
    }
  } 
  else
  {
    // Parity error, read byte but discard it
    (*_hwserial_module).RXDATAL;
     d40:	80 81       	ld	r24, Z
     d42:	f4 cf       	rjmp	.-24     	; 0xd2c <__vector_17+0x44>

00000d44 <__vector_25>:
__vector_25():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:74
#elif defined(MILLIS_USE_TIMERB2)
ISR(TCB2_INT_vect)
#else // fallback or defined(MILLIS_USE_TIMERB3)
ISR(TCB3_INT_vect)
#endif
{
     d44:	1f 92       	push	r1
     d46:	0f 92       	push	r0
     d48:	0f b6       	in	r0, 0x3f	; 63
     d4a:	0f 92       	push	r0
     d4c:	11 24       	eor	r1, r1
     d4e:	8f 93       	push	r24
     d50:	9f 93       	push	r25
     d52:	af 93       	push	r26
     d54:	bf 93       	push	r27
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:75
  timer_millis++;
     d56:	80 91 12 28 	lds	r24, 0x2812	; 0x802812 <timer_millis>
     d5a:	90 91 13 28 	lds	r25, 0x2813	; 0x802813 <timer_millis+0x1>
     d5e:	a0 91 14 28 	lds	r26, 0x2814	; 0x802814 <timer_millis+0x2>
     d62:	b0 91 15 28 	lds	r27, 0x2815	; 0x802815 <timer_millis+0x3>
     d66:	01 96       	adiw	r24, 0x01	; 1
     d68:	a1 1d       	adc	r26, r1
     d6a:	b1 1d       	adc	r27, r1
     d6c:	80 93 12 28 	sts	0x2812, r24	; 0x802812 <timer_millis>
     d70:	90 93 13 28 	sts	0x2813, r25	; 0x802813 <timer_millis+0x1>
     d74:	a0 93 14 28 	sts	0x2814, r26	; 0x802814 <timer_millis+0x2>
     d78:	b0 93 15 28 	sts	0x2815, r27	; 0x802815 <timer_millis+0x3>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:78

  /* Clear flag */
  _timer->INTFLAGS = TCB_CAPT_bm;
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x700aa6>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:79
}
     d82:	bf 91       	pop	r27
     d84:	af 91       	pop	r26
     d86:	9f 91       	pop	r25
     d88:	8f 91       	pop	r24
     d8a:	0f 90       	pop	r0
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	0f 90       	pop	r0
     d90:	1f 90       	pop	r1
     d92:	18 95       	reti

00000d94 <main>:
main():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/main.cpp:29

void setupUSB() __attribute__((weak));
void setupUSB() {}

int main(void)
{
     d94:	cf 93       	push	r28
     d96:	df 93       	push	r29
     d98:	cd b7       	in	r28, 0x3d	; 61
     d9a:	de b7       	in	r29, 0x3e	; 62
     d9c:	a4 97       	sbiw	r28, 0x24	; 36
     d9e:	cd bf       	out	0x3d, r28	; 61
     da0:	de bf       	out	0x3e, r29	; 62
init():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:331
// Use internal oscillator if not defined. No need to manipulate the MCLKCTRLA register here
// because it's already done in the SYSCFG0 fuse byte
#else
#if (F_CPU == 20000000L)
  /* No division on clock */
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, 0x00);
     da2:	88 ed       	ldi	r24, 0xD8	; 216
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	84 bf       	out	0x34, r24	; 52
     da8:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:359
#if defined(ADC0)

  /* ADC clock between 50-200 kHz */

#if (F_CPU >= 20000000L) // 20 MHz / 128 = 156.250 kHz
  ADC0.CTRLC |= ADC_PRESC_DIV128_gc;
     dac:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
     db0:	86 60       	ori	r24, 0x06	; 6
     db2:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:375
#else                      // 128 kHz / 2 = 64 kHz -> This is the closest you can get, the prescaler is 2
  ADC0.CTRLC |= ADC_PRESC_DIV2_gc;
#endif

  /* Enable ADC */
  ADC0.CTRLA |= ADC_ENABLE_bm;
     db6:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
     dba:	81 60       	ori	r24, 0x01	; 1
     dbc:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
analogReference():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring_analog.c:35
{
  switch (mode)
  {
    case EXTERNAL:
    case VDD:
      ADC0.CTRLC = (ADC0.CTRLC & ~(ADC_REFSEL_gm)) | mode | ADC_SAMPCAP_bm; // Per datasheet, recommended SAMPCAP=1 at ref > 1v - we don't *KNOW* the external reference will be >1v, but it's probably more likely...
     dc0:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
     dc4:	8f 7c       	andi	r24, 0xCF	; 207
     dc6:	80 65       	ori	r24, 0x50	; 80
     dc8:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
init():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:380
  analogReference(VDD);

#endif

  PORTMUX.USARTROUTEA = 0;
     dcc:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7005e2>
setup_timers():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:419
void setup_timers()
{
  //  TYPE A TIMER

  // PORTMUX setting for TCA (defined in pins_arduino.h)
  PORTMUX.TCAROUTEA = TCA0_PINS;
     dd0:	83 e0       	ldi	r24, 0x03	; 3
     dd2:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7005e4>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:422

  // Enable split mode before anything else
  TCA0.SPLIT.CTRLD = TCA_SINGLE_SPLITM_bm;
     dd6:	81 e0       	ldi	r24, 0x01	; 1
     dd8:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x700a03>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:426

  // Period setting, two 8 bit registers
  TCA0.SPLIT.LPER =
      TCA0.SPLIT.HPER = PWM_TIMER_PERIOD;
     ddc:	9e ef       	ldi	r25, 0xFE	; 254
     dde:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x700a27>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:425

  // Enable split mode before anything else
  TCA0.SPLIT.CTRLD = TCA_SINGLE_SPLITM_bm;

  // Period setting, two 8 bit registers
  TCA0.SPLIT.LPER =
     de2:	90 93 26 0a 	sts	0x0A26, r25	; 0x800a26 <__TEXT_REGION_LENGTH__+0x700a26>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:434
  TCA0.SPLIT.LCMP0 =
      TCA0.SPLIT.LCMP1 =
          TCA0.SPLIT.LCMP2 =
              TCA0.SPLIT.HCMP0 =
                  TCA0.SPLIT.HCMP1 =
                      TCA0.SPLIT.HCMP2 = PWM_TIMER_COMPARE;
     de6:	80 e8       	ldi	r24, 0x80	; 128
     de8:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x700a2d>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:433
  // Default duty 50%, will re-assign in analogWrite()
  TCA0.SPLIT.LCMP0 =
      TCA0.SPLIT.LCMP1 =
          TCA0.SPLIT.LCMP2 =
              TCA0.SPLIT.HCMP0 =
                  TCA0.SPLIT.HCMP1 =
     dec:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x700a2b>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:432

  // Default duty 50%, will re-assign in analogWrite()
  TCA0.SPLIT.LCMP0 =
      TCA0.SPLIT.LCMP1 =
          TCA0.SPLIT.LCMP2 =
              TCA0.SPLIT.HCMP0 =
     df0:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:431
      TCA0.SPLIT.HPER = PWM_TIMER_PERIOD;

  // Default duty 50%, will re-assign in analogWrite()
  TCA0.SPLIT.LCMP0 =
      TCA0.SPLIT.LCMP1 =
          TCA0.SPLIT.LCMP2 =
     df4:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x700a2c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:430
  TCA0.SPLIT.LPER =
      TCA0.SPLIT.HPER = PWM_TIMER_PERIOD;

  // Default duty 50%, will re-assign in analogWrite()
  TCA0.SPLIT.LCMP0 =
      TCA0.SPLIT.LCMP1 =
     df8:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x700a2a>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:429
  // Period setting, two 8 bit registers
  TCA0.SPLIT.LPER =
      TCA0.SPLIT.HPER = PWM_TIMER_PERIOD;

  // Default duty 50%, will re-assign in analogWrite()
  TCA0.SPLIT.LCMP0 =
     dfc:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:447
#elif F_CPU <= 8000000L
  // Use DIV16 prescaler (giving 250kHz clocke on 4MHz, 500kHz clock on 8MHz), enable TCA timer
  TCA0.SPLIT.CTRLA = (TCA_SPLIT_CLKSEL_DIV16_gc) | (TCA_SPLIT_ENABLE_bm);
#else
  // Use DIV64 prescaler (giving 250kHz clock on 16MHz), enable TCA timer
  TCA0.SPLIT.CTRLA = (TCA_SPLIT_CLKSEL_DIV64_gc) | (TCA_SPLIT_ENABLE_bm);
     e00:	2b e0       	ldi	r18, 0x0B	; 11
     e02:	20 93 00 0a 	sts	0x0A00, r18	; 0x800a00 <__TEXT_REGION_LENGTH__+0x700a00>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:453
#endif

  //  TYPE B TIMERS

  // Set up routing (defined in pins_arduino.h)
  PORTMUX.TCBROUTEA = 0
     e06:	10 92 e5 05 	sts	0x05E5, r1	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7005e5>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:486

  // Timer B Setup loop for TCB[0:end]
  do
  {
    // 8 bit PWM mode, but do not enable output yet, will do in analogWrite()
    timer_B->CTRLB = (TCB_CNTMODE_PWM8_gc);
     e0a:	37 e0       	ldi	r19, 0x07	; 7
     e0c:	30 93 81 0a 	sts	0x0A81, r19	; 0x800a81 <__TEXT_REGION_LENGTH__+0x700a81>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:489

    // Assign 8-bit period
    timer_B->CCMPL = PWM_TIMER_PERIOD;
     e10:	90 93 8c 0a 	sts	0x0A8C, r25	; 0x800a8c <__TEXT_REGION_LENGTH__+0x700a8c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:492

    // default duty 50%, set when output enabled
    timer_B->CCMPH = PWM_TIMER_COMPARE;
     e14:	80 93 8d 0a 	sts	0x0A8D, r24	; 0x800a8d <__TEXT_REGION_LENGTH__+0x700a8d>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:496

    // Use TCA clock (250kHz) and enable
    // (sync update commented out, might try to synchronize later
    timer_B->CTRLA = (TCB_CLKSEL_CLKTCA_gc)
     e18:	25 e0       	ldi	r18, 0x05	; 5
     e1a:	20 93 80 0a 	sts	0x0A80, r18	; 0x800a80 <__TEXT_REGION_LENGTH__+0x700a80>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:486

  // Timer B Setup loop for TCB[0:end]
  do
  {
    // 8 bit PWM mode, but do not enable output yet, will do in analogWrite()
    timer_B->CTRLB = (TCB_CNTMODE_PWM8_gc);
     e1e:	30 93 91 0a 	sts	0x0A91, r19	; 0x800a91 <__TEXT_REGION_LENGTH__+0x700a91>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:489

    // Assign 8-bit period
    timer_B->CCMPL = PWM_TIMER_PERIOD;
     e22:	90 93 9c 0a 	sts	0x0A9C, r25	; 0x800a9c <__TEXT_REGION_LENGTH__+0x700a9c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:492

    // default duty 50%, set when output enabled
    timer_B->CCMPH = PWM_TIMER_COMPARE;
     e26:	80 93 9d 0a 	sts	0x0A9D, r24	; 0x800a9d <__TEXT_REGION_LENGTH__+0x700a9d>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:496

    // Use TCA clock (250kHz) and enable
    // (sync update commented out, might try to synchronize later
    timer_B->CTRLA = (TCB_CLKSEL_CLKTCA_gc)
     e2a:	20 93 90 0a 	sts	0x0A90, r18	; 0x800a90 <__TEXT_REGION_LENGTH__+0x700a90>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:486

  // Timer B Setup loop for TCB[0:end]
  do
  {
    // 8 bit PWM mode, but do not enable output yet, will do in analogWrite()
    timer_B->CTRLB = (TCB_CNTMODE_PWM8_gc);
     e2e:	30 93 a1 0a 	sts	0x0AA1, r19	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x700aa1>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:489

    // Assign 8-bit period
    timer_B->CCMPL = PWM_TIMER_PERIOD;
     e32:	90 93 ac 0a 	sts	0x0AAC, r25	; 0x800aac <__TEXT_REGION_LENGTH__+0x700aac>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:492

    // default duty 50%, set when output enabled
    timer_B->CCMPH = PWM_TIMER_COMPARE;
     e36:	80 93 ad 0a 	sts	0x0AAD, r24	; 0x800aad <__TEXT_REGION_LENGTH__+0x700aad>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:496

    // Use TCA clock (250kHz) and enable
    // (sync update commented out, might try to synchronize later
    timer_B->CTRLA = (TCB_CLKSEL_CLKTCA_gc)
     e3a:	20 93 a0 0a 	sts	0x0AA0, r18	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
init():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:389
  /********************* TCB for system time tracking **************************/

  // BUG: we can compensate for F_CPU by fine tuning value of TIME_TRACKING_TIMER_COUNT

  /* Select vanilla 16 bit periodic interrupt mode */
  _timer->CTRLB = TCB_CNTMODE_INT_gc;
     e3e:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x700aa1>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:392

  /* TOP value for overflow every N clock cycles */
  _timer->CCMP = TIME_TRACKING_TIMER_COUNT - 1;
     e42:	8f e1       	ldi	r24, 0x1F	; 31
     e44:	9e e4       	ldi	r25, 0x4E	; 78
     e46:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x700aac>
     e4a:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x700aad>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:395

  /* Enable TCB interrupt */
  _timer->INTCTRL |= TCB_CAPT_bm;
     e4e:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x700aa5>
     e52:	81 60       	ori	r24, 0x01	; 1
     e54:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x700aa5>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:399

  /* Clock selection is F_CPU/N -- which is independent of TCA */
#if TIME_TRACKING_TIMER_DIVIDER == 1
  _timer->CTRLA = TCB_CLKSEL_CLKDIV1_gc; /* F_CPU */
     e58:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:407
#else
#assert "TIME_TRACKING_TIMER_DIVIDER not supported"
#endif

  /* Enable & start */
  _timer->CTRLA |= TCB_ENABLE_bm; /* Keep this last before enabling interrupts to ensure tracking as accurate as possible */
     e5c:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
     e60:	81 60       	ori	r24, 0x01	; 1
     e62:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:411

  /*************************** ENABLE GLOBAL INTERRUPTS *************************/

  sei();
     e66:	78 94       	sei
pinMode():
     e68:	61 e0       	ldi	r22, 0x01	; 1
     e6a:	84 e1       	ldi	r24, 0x14	; 20
     e6c:	0e 94 ab 03 	call	0x756	; 0x756 <pinMode.part.1>
     e70:	61 e0       	ldi	r22, 0x01	; 1
     e72:	85 e1       	ldi	r24, 0x15	; 21
     e74:	0e 94 ab 03 	call	0x756	; 0x756 <pinMode.part.1>
setup():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:16


void setup() {
  pinMode(led_blink_pin, OUTPUT);
  pinMode(led_sec_pin, OUTPUT);
  Serial.pins(0, 1);
     e78:	41 e0       	ldi	r20, 0x01	; 1
     e7a:	60 e0       	ldi	r22, 0x00	; 0
     e7c:	86 e1       	ldi	r24, 0x16	; 22
     e7e:	98 e2       	ldi	r25, 0x28	; 40
     e80:	0e 94 4b 02 	call	0x496	; 0x496 <UartClass::pins(unsigned char, unsigned char)>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:17
  Serial.begin(115200);
     e84:	40 e0       	ldi	r20, 0x00	; 0
     e86:	52 ec       	ldi	r21, 0xC2	; 194
     e88:	61 e0       	ldi	r22, 0x01	; 1
     e8a:	70 e0       	ldi	r23, 0x00	; 0
     e8c:	86 e1       	ldi	r24, 0x16	; 22
     e8e:	98 e2       	ldi	r25, 0x28	; 40
     e90:	0e 94 6e 04 	call	0x8dc	; 0x8dc <UartClass::begin(unsigned long)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:25
void loop() {

  // systime with 1h roll-over
  long unsigned int systime = millis() + toff;
  if (systime > 3600000) {
    long unsigned int systime_mod1h = systime % 3600000;
     e94:	80 e8       	ldi	r24, 0x80	; 128
     e96:	48 2e       	mov	r4, r24
     e98:	8e ee       	ldi	r24, 0xEE	; 238
     e9a:	58 2e       	mov	r5, r24
     e9c:	86 e3       	ldi	r24, 0x36	; 54
     e9e:	68 2e       	mov	r6, r24
     ea0:	71 2c       	mov	r7, r1
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:36
  int led_time = systime % 2000;      // 2sec period: led_time counts from 0ms to 1999ms
  int led_cycle = led_time / 100 + 1; // devide in 20 slots to blink: led_cycle counts from 1 to 20
  if ((led_cycle <= led_blink) && (led_time % 100 < 50)) {
    if (led_state == 0)
      digitalWrite(led_blink_pin, 1);
    led_state = 1;
     ea2:	22 24       	eor	r2, r2
     ea4:	23 94       	inc	r2
     ea6:	31 2c       	mov	r3, r1
millis():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
     ea8:	8f b7       	in	r24, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:88
  cli();
     eaa:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
     eac:	c0 90 12 28 	lds	r12, 0x2812	; 0x802812 <timer_millis>
     eb0:	d0 90 13 28 	lds	r13, 0x2813	; 0x802813 <timer_millis+0x1>
     eb4:	e0 90 14 28 	lds	r14, 0x2814	; 0x802814 <timer_millis+0x2>
     eb8:	f0 90 15 28 	lds	r15, 0x2815	; 0x802815 <timer_millis+0x3>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:92

  SREG = status;
     ebc:	8f bf       	out	0x3f, r24	; 63
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:23
}

void loop() {

  // systime with 1h roll-over
  long unsigned int systime = millis() + toff;
     ebe:	80 90 0e 28 	lds	r8, 0x280E	; 0x80280e <toff>
     ec2:	90 90 0f 28 	lds	r9, 0x280F	; 0x80280f <toff+0x1>
     ec6:	a0 90 10 28 	lds	r10, 0x2810	; 0x802810 <toff+0x2>
     eca:	b0 90 11 28 	lds	r11, 0x2811	; 0x802811 <toff+0x3>
     ece:	c8 0c       	add	r12, r8
     ed0:	d9 1c       	adc	r13, r9
     ed2:	ea 1c       	adc	r14, r10
     ed4:	fb 1c       	adc	r15, r11
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:24
  if (systime > 3600000) {
     ed6:	21 e8       	ldi	r18, 0x81	; 129
     ed8:	c2 16       	cp	r12, r18
     eda:	2e ee       	ldi	r18, 0xEE	; 238
     edc:	d2 06       	cpc	r13, r18
     ede:	26 e3       	ldi	r18, 0x36	; 54
     ee0:	e2 06       	cpc	r14, r18
     ee2:	f1 04       	cpc	r15, r1
     ee4:	d0 f0       	brcs	.+52     	; 0xf1a <main+0x186>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:25
    long unsigned int systime_mod1h = systime % 3600000;
     ee6:	c7 01       	movw	r24, r14
     ee8:	b6 01       	movw	r22, r12
     eea:	a3 01       	movw	r20, r6
     eec:	92 01       	movw	r18, r4
     eee:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__udivmodsi4>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:26
    toff -= systime - systime_mod1h;
     ef2:	8b 01       	movw	r16, r22
     ef4:	9c 01       	movw	r18, r24
     ef6:	0c 19       	sub	r16, r12
     ef8:	1d 09       	sbc	r17, r13
     efa:	2e 09       	sbc	r18, r14
     efc:	3f 09       	sbc	r19, r15
     efe:	80 0e       	add	r8, r16
     f00:	91 1e       	adc	r9, r17
     f02:	a2 1e       	adc	r10, r18
     f04:	b3 1e       	adc	r11, r19
     f06:	80 92 0e 28 	sts	0x280E, r8	; 0x80280e <toff>
     f0a:	90 92 0f 28 	sts	0x280F, r9	; 0x80280f <toff+0x1>
     f0e:	a0 92 10 28 	sts	0x2810, r10	; 0x802810 <toff+0x2>
     f12:	b0 92 11 28 	sts	0x2811, r11	; 0x802811 <toff+0x3>
main():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:27
    systime = systime_mod1h;
     f16:	6b 01       	movw	r12, r22
     f18:	7c 01       	movw	r14, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:31
  }

  // blink my led, fixed 2sec period with “led_blink” the  number of 1Hz flashes
  int led_time = systime % 2000;      // 2sec period: led_time counts from 0ms to 1999ms
     f1a:	c7 01       	movw	r24, r14
     f1c:	b6 01       	movw	r22, r12
     f1e:	20 ed       	ldi	r18, 0xD0	; 208
     f20:	37 e0       	ldi	r19, 0x07	; 7
     f22:	40 e0       	ldi	r20, 0x00	; 0
     f24:	50 e0       	ldi	r21, 0x00	; 0
     f26:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__udivmodsi4>
     f2a:	20 91 0c 28 	lds	r18, 0x280C	; 0x80280c <led_state>
     f2e:	30 91 0d 28 	lds	r19, 0x280D	; 0x80280d <led_state+0x1>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:32
  int led_cycle = led_time / 100 + 1; // devide in 20 slots to blink: led_cycle counts from 1 to 20
     f32:	cb 01       	movw	r24, r22
     f34:	64 e6       	ldi	r22, 0x64	; 100
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__divmodhi4>
     f3c:	6f 5f       	subi	r22, 0xFF	; 255
     f3e:	7f 4f       	sbci	r23, 0xFF	; 255
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:33
  if ((led_cycle <= led_blink) && (led_time % 100 < 50)) {
     f40:	ab 01       	movw	r20, r22
     f42:	77 0f       	add	r23, r23
     f44:	66 0b       	sbc	r22, r22
     f46:	77 0b       	sbc	r23, r23
     f48:	80 90 00 28 	lds	r8, 0x2800	; 0x802800 <__data_start>
     f4c:	90 90 01 28 	lds	r9, 0x2801	; 0x802801 <__data_start+0x1>
     f50:	a0 90 02 28 	lds	r10, 0x2802	; 0x802802 <__data_start+0x2>
     f54:	b0 90 03 28 	lds	r11, 0x2803	; 0x802803 <__data_start+0x3>
     f58:	84 16       	cp	r8, r20
     f5a:	95 06       	cpc	r9, r21
     f5c:	a6 06       	cpc	r10, r22
     f5e:	b7 06       	cpc	r11, r23
     f60:	dc f1       	brlt	.+118    	; 0xfd8 <main+0x244>
     f62:	c2 97       	sbiw	r24, 0x32	; 50
     f64:	cc f5       	brge	.+114    	; 0xfd8 <main+0x244>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:34
    if (led_state == 0)
     f66:	23 2b       	or	r18, r19
     f68:	21 f4       	brne	.+8      	; 0xf72 <main+0x1de>
digitalWrite():
     f6a:	61 e0       	ldi	r22, 0x01	; 1
     f6c:	84 e1       	ldi	r24, 0x14	; 20
     f6e:	0e 94 4c 03 	call	0x698	; 0x698 <digitalWrite.part.2>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:36
      digitalWrite(led_blink_pin, 1);
    led_state = 1;
     f72:	20 92 0c 28 	sts	0x280C, r2	; 0x80280c <led_state>
     f76:	30 92 0d 28 	sts	0x280D, r3	; 0x80280d <led_state+0x1>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:42
  } else {
    if (led_state == 1)
      digitalWrite(led_blink_pin, 0);
    led_state = 0;
  }
  if (led_sec_state == 0) {
     f7a:	00 91 0a 28 	lds	r16, 0x280A	; 0x80280a <__data_end>
     f7e:	10 91 0b 28 	lds	r17, 0x280B	; 0x80280b <__data_end+0x1>
digitalWrite():
     f82:	60 e0       	ldi	r22, 0x00	; 0
loop():
     f84:	01 15       	cp	r16, r1
     f86:	11 05       	cpc	r17, r1
     f88:	21 f0       	breq	.+8      	; 0xf92 <main+0x1fe>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:45
    digitalWrite(led_sec_pin, 0);
  }
  if (led_sec_state == 1) {
     f8a:	01 30       	cpi	r16, 0x01	; 1
     f8c:	11 05       	cpc	r17, r1
     f8e:	21 f4       	brne	.+8      	; 0xf98 <main+0x204>
digitalWrite():
     f90:	61 e0       	ldi	r22, 0x01	; 1
     f92:	85 e1       	ldi	r24, 0x15	; 21
     f94:	0e 94 4c 03 	call	0x698	; 0x698 <digitalWrite.part.2>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:51
    digitalWrite(led_sec_pin, 1);
  }


  // if there is serial input, read line and pares
  if (Serial.available()) {
     f98:	86 e1       	ldi	r24, 0x16	; 22
     f9a:	98 e2       	ldi	r25, 0x28	; 40
     f9c:	0e 94 11 02 	call	0x422	; 0x422 <UartClass::available()>
     fa0:	89 2b       	or	r24, r25
     fa2:	09 f4       	brne	.+2      	; 0xfa6 <main+0x212>
     fa4:	6a c2       	rjmp	.+1236   	; 0x147a <main+0x6e6>
readStringUntil():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:259
  return ret;
}

String Stream::readStringUntil(char terminator)
{
  String ret;
     fa6:	6d e5       	ldi	r22, 0x5D	; 93
     fa8:	7c e5       	ldi	r23, 0x5C	; 92
     faa:	ce 01       	movw	r24, r28
     fac:	4f 96       	adiw	r24, 0x1f	; 31
     fae:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:260
  int c = timedRead();
     fb2:	0e 94 c3 01 	call	0x386	; 0x386 <Stream::timedRead() [clone .constprop.4]>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:261
  while (c >= 0 && c != terminator)
     fb6:	97 fd       	sbrc	r25, 7
     fb8:	1b c0       	rjmp	.+54     	; 0xff0 <main+0x25c>
     fba:	8a 30       	cpi	r24, 0x0A	; 10
     fbc:	91 05       	cpc	r25, r1
     fbe:	c1 f0       	breq	.+48     	; 0xff0 <main+0x25c>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.cpp:263
  {
    ret += (char)c;
     fc0:	89 83       	std	Y+1, r24	; 0x01
concat():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:300

unsigned char String::concat(char c)
{
  char buf[2];
  buf[0] = c;
  buf[1] = 0;
     fc2:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:301
  return concat(buf, 1);
     fc4:	41 e0       	ldi	r20, 0x01	; 1
     fc6:	50 e0       	ldi	r21, 0x00	; 0
     fc8:	be 01       	movw	r22, r28
     fca:	6f 5f       	subi	r22, 0xFF	; 255
     fcc:	7f 4f       	sbci	r23, 0xFF	; 255
     fce:	ce 01       	movw	r24, r28
     fd0:	4f 96       	adiw	r24, 0x1f	; 31
     fd2:	0e 94 cf 04 	call	0x99e	; 0x99e <String::concat(char const*, unsigned int)>
     fd6:	ed cf       	rjmp	.-38     	; 0xfb2 <main+0x21e>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:38
  if ((led_cycle <= led_blink) && (led_time % 100 < 50)) {
    if (led_state == 0)
      digitalWrite(led_blink_pin, 1);
    led_state = 1;
  } else {
    if (led_state == 1)
     fd8:	21 30       	cpi	r18, 0x01	; 1
     fda:	31 05       	cpc	r19, r1
     fdc:	21 f4       	brne	.+8      	; 0xfe6 <main+0x252>
digitalWrite():
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	84 e1       	ldi	r24, 0x14	; 20
     fe2:	0e 94 4c 03 	call	0x698	; 0x698 <digitalWrite.part.2>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:40
      digitalWrite(led_blink_pin, 0);
    led_state = 0;
     fe6:	10 92 0c 28 	sts	0x280C, r1	; 0x80280c <led_state>
     fea:	10 92 0d 28 	sts	0x280D, r1	; 0x80280d <led_state+0x1>
     fee:	c5 cf       	rjmp	.-118    	; 0xf7a <main+0x1e6>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:53


  // if there is serial input, read line and pares
  if (Serial.available()) {
    String mesg = Serial.readStringUntil('\n');
    String reply;
     ff0:	6d e5       	ldi	r22, 0x5D	; 93
     ff2:	7c e5       	ldi	r23, 0x5C	; 92
     ff4:	ce 01       	movw	r24, r28
     ff6:	49 96       	adiw	r24, 0x19	; 25
     ff8:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:55
    // is it a status req?
    int lpos = mesg.indexOf("??");
     ffc:	60 e4       	ldi	r22, 0x40	; 64
     ffe:	7c e5       	ldi	r23, 0x5C	; 92
    1000:	ce 01       	movw	r24, r28
    1002:	01 96       	adiw	r24, 0x01	; 1
    1004:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
    1008:	be 01       	movw	r22, r28
    100a:	6f 5f       	subi	r22, 0xFF	; 255
    100c:	7f 4f       	sbci	r23, 0xFF	; 255
    100e:	ce 01       	movw	r24, r28
    1010:	4f 96       	adiw	r24, 0x1f	; 31
    1012:	0e 94 77 04 	call	0x8ee	; 0x8ee <String::indexOf(String const&) const>
    1016:	5c 01       	movw	r10, r24
    1018:	ce 01       	movw	r24, r28
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:56
    if (lpos >= 0) {
    1020:	b7 fc       	sbrc	r11, 7
    1022:	57 c0       	rjmp	.+174    	; 0x10d2 <main+0x33e>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:57
      reply = "Status report: \r\n time=" + String(systime) + "\r\n" + "blink=" + String(led_blink) + "\r\n" + "led_sec=" + String(led_sec_state) + "\r\n";
    1024:	b8 01       	movw	r22, r16
    1026:	ce 01       	movw	r24, r28
    1028:	01 96       	adiw	r24, 0x01	; 1
    102a:	0e 94 88 05 	call	0xb10	; 0xb10 <String::String(int, unsigned char) [clone .constprop.6]>
    102e:	40 91 00 28 	lds	r20, 0x2800	; 0x802800 <__data_start>
    1032:	50 91 01 28 	lds	r21, 0x2801	; 0x802801 <__data_start+0x1>
    1036:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <__data_start+0x2>
    103a:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <__data_start+0x3>
    103e:	ce 01       	movw	r24, r28
    1040:	07 96       	adiw	r24, 0x07	; 7
    1042:	0e 94 ae 05 	call	0xb5c	; 0xb5c <String::String(long, unsigned char) [clone .constprop.5]>
    1046:	b7 01       	movw	r22, r14
    1048:	a6 01       	movw	r20, r12
    104a:	ce 01       	movw	r24, r28
    104c:	0d 96       	adiw	r24, 0x0d	; 13
    104e:	0e 94 61 05 	call	0xac2	; 0xac2 <String::String(unsigned long, unsigned char) [clone .constprop.8]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    1052:	63 e4       	ldi	r22, 0x43	; 67
    1054:	7c e5       	ldi	r23, 0x5C	; 92
    1056:	ce 01       	movw	r24, r28
    1058:	43 96       	adiw	r24, 0x13	; 19
    105a:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:57
    105e:	be 01       	movw	r22, r28
    1060:	63 5f       	subi	r22, 0xF3	; 243
    1062:	7f 4f       	sbci	r23, 0xFF	; 255
    1064:	ce 01       	movw	r24, r28
    1066:	43 96       	adiw	r24, 0x13	; 19
    1068:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    106c:	6b e5       	ldi	r22, 0x5B	; 91
    106e:	7c e5       	ldi	r23, 0x5C	; 92
    1070:	0e 94 0d 05 	call	0xa1a	; 0xa1a <operator+(StringSumHelper const&, char const*)>
    1074:	6e e5       	ldi	r22, 0x5E	; 94
    1076:	7c e5       	ldi	r23, 0x5C	; 92
    1078:	0e 94 0d 05 	call	0xa1a	; 0xa1a <operator+(StringSumHelper const&, char const*)>
    107c:	be 01       	movw	r22, r28
    107e:	69 5f       	subi	r22, 0xF9	; 249
    1080:	7f 4f       	sbci	r23, 0xFF	; 255
    1082:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    1086:	6b e5       	ldi	r22, 0x5B	; 91
    1088:	7c e5       	ldi	r23, 0x5C	; 92
    108a:	0e 94 0d 05 	call	0xa1a	; 0xa1a <operator+(StringSumHelper const&, char const*)>
    108e:	65 e6       	ldi	r22, 0x65	; 101
    1090:	7c e5       	ldi	r23, 0x5C	; 92
    1092:	0e 94 0d 05 	call	0xa1a	; 0xa1a <operator+(StringSumHelper const&, char const*)>
    1096:	be 01       	movw	r22, r28
    1098:	6f 5f       	subi	r22, 0xFF	; 255
    109a:	7f 4f       	sbci	r23, 0xFF	; 255
    109c:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    10a0:	6b e5       	ldi	r22, 0x5B	; 91
    10a2:	7c e5       	ldi	r23, 0x5C	; 92
    10a4:	0e 94 0d 05 	call	0xa1a	; 0xa1a <operator+(StringSumHelper const&, char const*)>
    10a8:	bc 01       	movw	r22, r24
    10aa:	ce 01       	movw	r24, r28
    10ac:	49 96       	adiw	r24, 0x19	; 25
    10ae:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    10b2:	ce 01       	movw	r24, r28
    10b4:	43 96       	adiw	r24, 0x13	; 19
    10b6:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:57
    10ba:	ce 01       	movw	r24, r28
    10bc:	0d 96       	adiw	r24, 0x0d	; 13
    10be:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    10c2:	ce 01       	movw	r24, r28
    10c4:	07 96       	adiw	r24, 0x07	; 7
    10c6:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    10ca:	ce 01       	movw	r24, r28
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:60
    }
    // is it a get?
    int qpos = mesg.indexOf("?");
    10d2:	61 e4       	ldi	r22, 0x41	; 65
    10d4:	7c e5       	ldi	r23, 0x5C	; 92
    10d6:	ce 01       	movw	r24, r28
    10d8:	01 96       	adiw	r24, 0x01	; 1
    10da:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
    10de:	be 01       	movw	r22, r28
    10e0:	6f 5f       	subi	r22, 0xFF	; 255
    10e2:	7f 4f       	sbci	r23, 0xFF	; 255
    10e4:	ce 01       	movw	r24, r28
    10e6:	4f 96       	adiw	r24, 0x1f	; 31
    10e8:	0e 94 77 04 	call	0x8ee	; 0x8ee <String::indexOf(String const&) const>
    10ec:	8c 01       	movw	r16, r24
    10ee:	ce 01       	movw	r24, r28
    10f0:	01 96       	adiw	r24, 0x01	; 1
    10f2:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:61
    if (qpos >= 0) {
    10f6:	17 fd       	sbrc	r17, 7
    10f8:	ad c0       	rjmp	.+346    	; 0x1254 <main+0x4c0>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:63
      // “*?*\n"
      if (mesg.substring(0, qpos) == "blink") {
    10fa:	98 01       	movw	r18, r16
    10fc:	50 e0       	ldi	r21, 0x00	; 0
    10fe:	40 e0       	ldi	r20, 0x00	; 0
    1100:	be 01       	movw	r22, r28
    1102:	61 5e       	subi	r22, 0xE1	; 225
    1104:	7f 4f       	sbci	r23, 0xFF	; 255
    1106:	ce 01       	movw	r24, r28
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
_ZNK6StringeqEPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:191
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator==(const String &rhs) const { return equals(rhs); }
  unsigned char operator==(const char *cstr) const { return equals(cstr); }
    110e:	6e e6       	ldi	r22, 0x6E	; 110
    1110:	7c e5       	ldi	r23, 0x5C	; 92
    1112:	ce 01       	movw	r24, r28
    1114:	01 96       	adiw	r24, 0x01	; 1
    1116:	0e 94 92 04 	call	0x924	; 0x924 <String::equals(char const*) const>
    111a:	b8 2e       	mov	r11, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:63
    111c:	ce 01       	movw	r24, r28
    111e:	01 96       	adiw	r24, 0x01	; 1
    1120:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    1124:	bb 20       	and	r11, r11
    1126:	31 f1       	breq	.+76     	; 0x1174 <main+0x3e0>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:65
        // “blink?*\n"
        reply = "blink=" + String(led_blink);
    1128:	40 91 00 28 	lds	r20, 0x2800	; 0x802800 <__data_start>
    112c:	50 91 01 28 	lds	r21, 0x2801	; 0x802801 <__data_start+0x1>
    1130:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <__data_start+0x2>
    1134:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <__data_start+0x3>
    1138:	ce 01       	movw	r24, r28
    113a:	01 96       	adiw	r24, 0x01	; 1
    113c:	0e 94 ae 05 	call	0xb5c	; 0xb5c <String::String(long, unsigned char) [clone .constprop.5]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    1140:	6e e5       	ldi	r22, 0x5E	; 94
    1142:	7c e5       	ldi	r23, 0x5C	; 92
    1144:	ce 01       	movw	r24, r28
    1146:	07 96       	adiw	r24, 0x07	; 7
    1148:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:65
    114c:	be 01       	movw	r22, r28
    114e:	6f 5f       	subi	r22, 0xFF	; 255
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	ce 01       	movw	r24, r28
    1154:	07 96       	adiw	r24, 0x07	; 7
    1156:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    115a:	bc 01       	movw	r22, r24
    115c:	ce 01       	movw	r24, r28
    115e:	49 96       	adiw	r24, 0x19	; 25
    1160:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    1164:	ce 01       	movw	r24, r28
    1166:	07 96       	adiw	r24, 0x07	; 7
    1168:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:65
    116c:	ce 01       	movw	r24, r28
    116e:	01 96       	adiw	r24, 0x01	; 1
    1170:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:67
      }
      if (mesg.substring(0, qpos) == "time") {
    1174:	98 01       	movw	r18, r16
    1176:	50 e0       	ldi	r21, 0x00	; 0
    1178:	40 e0       	ldi	r20, 0x00	; 0
    117a:	be 01       	movw	r22, r28
    117c:	61 5e       	subi	r22, 0xE1	; 225
    117e:	7f 4f       	sbci	r23, 0xFF	; 255
    1180:	ce 01       	movw	r24, r28
    1182:	01 96       	adiw	r24, 0x01	; 1
    1184:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
_ZNK6StringeqEPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:191
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator==(const String &rhs) const { return equals(rhs); }
  unsigned char operator==(const char *cstr) const { return equals(cstr); }
    1188:	64 e7       	ldi	r22, 0x74	; 116
    118a:	7c e5       	ldi	r23, 0x5C	; 92
    118c:	ce 01       	movw	r24, r28
    118e:	01 96       	adiw	r24, 0x01	; 1
    1190:	0e 94 92 04 	call	0x924	; 0x924 <String::equals(char const*) const>
    1194:	b8 2e       	mov	r11, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:67
    1196:	ce 01       	movw	r24, r28
    1198:	01 96       	adiw	r24, 0x01	; 1
    119a:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    119e:	bb 20       	and	r11, r11
    11a0:	01 f1       	breq	.+64     	; 0x11e2 <main+0x44e>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:69
        // “time?*\n"
        reply = "time=" + String(systime);
    11a2:	b7 01       	movw	r22, r14
    11a4:	a6 01       	movw	r20, r12
    11a6:	ce 01       	movw	r24, r28
    11a8:	01 96       	adiw	r24, 0x01	; 1
    11aa:	0e 94 61 05 	call	0xac2	; 0xac2 <String::String(unsigned long, unsigned char) [clone .constprop.8]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    11ae:	65 e5       	ldi	r22, 0x55	; 85
    11b0:	7c e5       	ldi	r23, 0x5C	; 92
    11b2:	ce 01       	movw	r24, r28
    11b4:	07 96       	adiw	r24, 0x07	; 7
    11b6:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:69
    11ba:	be 01       	movw	r22, r28
    11bc:	6f 5f       	subi	r22, 0xFF	; 255
    11be:	7f 4f       	sbci	r23, 0xFF	; 255
    11c0:	ce 01       	movw	r24, r28
    11c2:	07 96       	adiw	r24, 0x07	; 7
    11c4:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    11c8:	bc 01       	movw	r22, r24
    11ca:	ce 01       	movw	r24, r28
    11cc:	49 96       	adiw	r24, 0x19	; 25
    11ce:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    11d2:	ce 01       	movw	r24, r28
    11d4:	07 96       	adiw	r24, 0x07	; 7
    11d6:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:69
    11da:	ce 01       	movw	r24, r28
    11dc:	01 96       	adiw	r24, 0x01	; 1
    11de:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:71
      }
      if (mesg.substring(0, qpos) == "led_sec") {
    11e2:	98 01       	movw	r18, r16
    11e4:	50 e0       	ldi	r21, 0x00	; 0
    11e6:	40 e0       	ldi	r20, 0x00	; 0
    11e8:	be 01       	movw	r22, r28
    11ea:	61 5e       	subi	r22, 0xE1	; 225
    11ec:	7f 4f       	sbci	r23, 0xFF	; 255
    11ee:	ce 01       	movw	r24, r28
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
_ZNK6StringeqEPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:191
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator==(const String &rhs) const { return equals(rhs); }
  unsigned char operator==(const char *cstr) const { return equals(cstr); }
    11f6:	69 e7       	ldi	r22, 0x79	; 121
    11f8:	7c e5       	ldi	r23, 0x5C	; 92
    11fa:	ce 01       	movw	r24, r28
    11fc:	01 96       	adiw	r24, 0x01	; 1
    11fe:	0e 94 92 04 	call	0x924	; 0x924 <String::equals(char const*) const>
    1202:	18 2f       	mov	r17, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:71
    1204:	ce 01       	movw	r24, r28
    1206:	01 96       	adiw	r24, 0x01	; 1
    1208:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    120c:	11 23       	and	r17, r17
    120e:	11 f1       	breq	.+68     	; 0x1254 <main+0x4c0>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:73
        // “time?*\n"
        reply = "led_sec=" + String(led_sec_state);
    1210:	60 91 0a 28 	lds	r22, 0x280A	; 0x80280a <__data_end>
    1214:	70 91 0b 28 	lds	r23, 0x280B	; 0x80280b <__data_end+0x1>
    1218:	ce 01       	movw	r24, r28
    121a:	01 96       	adiw	r24, 0x01	; 1
    121c:	0e 94 88 05 	call	0xb10	; 0xb10 <String::String(int, unsigned char) [clone .constprop.6]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    1220:	65 e6       	ldi	r22, 0x65	; 101
    1222:	7c e5       	ldi	r23, 0x5C	; 92
    1224:	ce 01       	movw	r24, r28
    1226:	07 96       	adiw	r24, 0x07	; 7
    1228:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:73
    122c:	be 01       	movw	r22, r28
    122e:	6f 5f       	subi	r22, 0xFF	; 255
    1230:	7f 4f       	sbci	r23, 0xFF	; 255
    1232:	ce 01       	movw	r24, r28
    1234:	07 96       	adiw	r24, 0x07	; 7
    1236:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    123a:	bc 01       	movw	r22, r24
    123c:	ce 01       	movw	r24, r28
    123e:	49 96       	adiw	r24, 0x19	; 25
    1240:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    1244:	ce 01       	movw	r24, r28
    1246:	07 96       	adiw	r24, 0x07	; 7
    1248:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:73
    124c:	ce 01       	movw	r24, r28
    124e:	01 96       	adiw	r24, 0x01	; 1
    1250:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:77
      }
    }
    // is it a set?
    int epos = mesg.indexOf("=");
    1254:	6c e6       	ldi	r22, 0x6C	; 108
    1256:	7c e5       	ldi	r23, 0x5C	; 92
    1258:	ce 01       	movw	r24, r28
    125a:	01 96       	adiw	r24, 0x01	; 1
    125c:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
    1260:	be 01       	movw	r22, r28
    1262:	6f 5f       	subi	r22, 0xFF	; 255
    1264:	7f 4f       	sbci	r23, 0xFF	; 255
    1266:	ce 01       	movw	r24, r28
    1268:	4f 96       	adiw	r24, 0x1f	; 31
    126a:	0e 94 77 04 	call	0x8ee	; 0x8ee <String::indexOf(String const&) const>
    126e:	8c 01       	movw	r16, r24
    1270:	ce 01       	movw	r24, r28
    1272:	01 96       	adiw	r24, 0x01	; 1
    1274:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:78
    if (epos >= 0) {
    1278:	17 fd       	sbrc	r17, 7
    127a:	e7 c0       	rjmp	.+462    	; 0x144a <main+0x6b6>
substring():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:228
  int indexOf(const String &str, unsigned int fromIndex) const;
  int lastIndexOf(char ch) const;
  int lastIndexOf(char ch, unsigned int fromIndex) const;
  int lastIndexOf(const String &str) const;
  int lastIndexOf(const String &str, unsigned int fromIndex) const;
  String substring(unsigned int beginIndex) const { return substring(beginIndex, len); };
    127c:	2b a1       	ldd	r18, Y+35	; 0x23
    127e:	3c a1       	ldd	r19, Y+36	; 0x24
    1280:	a8 01       	movw	r20, r16
    1282:	4f 5f       	subi	r20, 0xFF	; 255
    1284:	5f 4f       	sbci	r21, 0xFF	; 255
    1286:	be 01       	movw	r22, r28
    1288:	61 5e       	subi	r22, 0xE1	; 225
    128a:	7f 4f       	sbci	r23, 0xFF	; 255
    128c:	ce 01       	movw	r24, r28
    128e:	01 96       	adiw	r24, 0x01	; 1
    1290:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
toInt():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:782
/*  Parsing / Conversion                     */
/*********************************************/

long String::toInt(void) const
{
  if (buffer) return atol(buffer);
    1294:	89 81       	ldd	r24, Y+1	; 0x01
    1296:	9a 81       	ldd	r25, Y+2	; 0x02
main():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:783
  return 0;
    1298:	c1 2c       	mov	r12, r1
    129a:	d1 2c       	mov	r13, r1
    129c:	76 01       	movw	r14, r12
toInt():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.cpp:782
/*  Parsing / Conversion                     */
/*********************************************/

long String::toInt(void) const
{
  if (buffer) return atol(buffer);
    129e:	00 97       	sbiw	r24, 0x00	; 0
    12a0:	21 f0       	breq	.+8      	; 0x12aa <main+0x516>
    12a2:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <atol>
    12a6:	6b 01       	movw	r12, r22
    12a8:	7c 01       	movw	r14, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:80
      // *=*\n"
      unsigned long val = mesg.substring(epos + 1).toInt();
    12aa:	ce 01       	movw	r24, r28
    12ac:	01 96       	adiw	r24, 0x01	; 1
    12ae:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:82
      //*=<VAL>*\n  (should check conversion errors)
      if (mesg.substring(0, epos) == "blink") {
    12b2:	98 01       	movw	r18, r16
    12b4:	50 e0       	ldi	r21, 0x00	; 0
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	be 01       	movw	r22, r28
    12ba:	61 5e       	subi	r22, 0xE1	; 225
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255
    12be:	ce 01       	movw	r24, r28
    12c0:	01 96       	adiw	r24, 0x01	; 1
    12c2:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
_ZNK6StringeqEPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:191
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator==(const String &rhs) const { return equals(rhs); }
  unsigned char operator==(const char *cstr) const { return equals(cstr); }
    12c6:	6e e6       	ldi	r22, 0x6E	; 110
    12c8:	7c e5       	ldi	r23, 0x5C	; 92
    12ca:	ce 01       	movw	r24, r28
    12cc:	01 96       	adiw	r24, 0x01	; 1
    12ce:	0e 94 92 04 	call	0x924	; 0x924 <String::equals(char const*) const>
    12d2:	b8 2e       	mov	r11, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:82
    12d4:	ce 01       	movw	r24, r28
    12d6:	01 96       	adiw	r24, 0x01	; 1
    12d8:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    12dc:	bb 20       	and	r11, r11
    12de:	41 f1       	breq	.+80     	; 0x1330 <main+0x59c>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:84
        //blink=<VAL>*\n
        reply = "led=" + String(val);
    12e0:	b7 01       	movw	r22, r14
    12e2:	a6 01       	movw	r20, r12
    12e4:	ce 01       	movw	r24, r28
    12e6:	01 96       	adiw	r24, 0x01	; 1
    12e8:	0e 94 61 05 	call	0xac2	; 0xac2 <String::String(unsigned long, unsigned char) [clone .constprop.8]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    12ec:	61 e8       	ldi	r22, 0x81	; 129
    12ee:	7c e5       	ldi	r23, 0x5C	; 92
    12f0:	ce 01       	movw	r24, r28
    12f2:	07 96       	adiw	r24, 0x07	; 7
    12f4:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:84
    12f8:	be 01       	movw	r22, r28
    12fa:	6f 5f       	subi	r22, 0xFF	; 255
    12fc:	7f 4f       	sbci	r23, 0xFF	; 255
    12fe:	ce 01       	movw	r24, r28
    1300:	07 96       	adiw	r24, 0x07	; 7
    1302:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    1306:	bc 01       	movw	r22, r24
    1308:	ce 01       	movw	r24, r28
    130a:	49 96       	adiw	r24, 0x19	; 25
    130c:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    1310:	ce 01       	movw	r24, r28
    1312:	07 96       	adiw	r24, 0x07	; 7
    1314:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:84
    1318:	ce 01       	movw	r24, r28
    131a:	01 96       	adiw	r24, 0x01	; 1
    131c:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:85
        led_blink = val;
    1320:	c0 92 00 28 	sts	0x2800, r12	; 0x802800 <__data_start>
    1324:	d0 92 01 28 	sts	0x2801, r13	; 0x802801 <__data_start+0x1>
    1328:	e0 92 02 28 	sts	0x2802, r14	; 0x802802 <__data_start+0x2>
    132c:	f0 92 03 28 	sts	0x2803, r15	; 0x802803 <__data_start+0x3>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:87
      }
      if (mesg.substring(0, epos) == "time") {
    1330:	98 01       	movw	r18, r16
    1332:	50 e0       	ldi	r21, 0x00	; 0
    1334:	40 e0       	ldi	r20, 0x00	; 0
    1336:	be 01       	movw	r22, r28
    1338:	61 5e       	subi	r22, 0xE1	; 225
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	ce 01       	movw	r24, r28
    133e:	01 96       	adiw	r24, 0x01	; 1
    1340:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
_ZNK6StringeqEPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:191
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator==(const String &rhs) const { return equals(rhs); }
  unsigned char operator==(const char *cstr) const { return equals(cstr); }
    1344:	64 e7       	ldi	r22, 0x74	; 116
    1346:	7c e5       	ldi	r23, 0x5C	; 92
    1348:	ce 01       	movw	r24, r28
    134a:	01 96       	adiw	r24, 0x01	; 1
    134c:	0e 94 92 04 	call	0x924	; 0x924 <String::equals(char const*) const>
    1350:	b8 2e       	mov	r11, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:87
    1352:	ce 01       	movw	r24, r28
    1354:	01 96       	adiw	r24, 0x01	; 1
    1356:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    135a:	bb 20       	and	r11, r11
    135c:	d9 f1       	breq	.+118    	; 0x13d4 <main+0x640>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:89
        //time=<VAL>*\n
        reply = "time=" + String(val);
    135e:	b7 01       	movw	r22, r14
    1360:	a6 01       	movw	r20, r12
    1362:	ce 01       	movw	r24, r28
    1364:	01 96       	adiw	r24, 0x01	; 1
    1366:	0e 94 61 05 	call	0xac2	; 0xac2 <String::String(unsigned long, unsigned char) [clone .constprop.8]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    136a:	65 e5       	ldi	r22, 0x55	; 85
    136c:	7c e5       	ldi	r23, 0x5C	; 92
    136e:	ce 01       	movw	r24, r28
    1370:	07 96       	adiw	r24, 0x07	; 7
    1372:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:89
    1376:	be 01       	movw	r22, r28
    1378:	6f 5f       	subi	r22, 0xFF	; 255
    137a:	7f 4f       	sbci	r23, 0xFF	; 255
    137c:	ce 01       	movw	r24, r28
    137e:	07 96       	adiw	r24, 0x07	; 7
    1380:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    1384:	bc 01       	movw	r22, r24
    1386:	ce 01       	movw	r24, r28
    1388:	49 96       	adiw	r24, 0x19	; 25
    138a:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    138e:	ce 01       	movw	r24, r28
    1390:	07 96       	adiw	r24, 0x07	; 7
    1392:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:89
    1396:	ce 01       	movw	r24, r28
    1398:	01 96       	adiw	r24, 0x01	; 1
    139a:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
millis():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    139e:	2f b7       	in	r18, 0x3f	; 63
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:88
  cli();
    13a0:	f8 94       	cli
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
    13a2:	80 91 12 28 	lds	r24, 0x2812	; 0x802812 <timer_millis>
    13a6:	90 91 13 28 	lds	r25, 0x2813	; 0x802813 <timer_millis+0x1>
    13aa:	a0 91 14 28 	lds	r26, 0x2814	; 0x802814 <timer_millis+0x2>
    13ae:	b0 91 15 28 	lds	r27, 0x2815	; 0x802815 <timer_millis+0x3>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    13b2:	2f bf       	out	0x3f, r18	; 63
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:90
        toff = val - millis();
    13b4:	a7 01       	movw	r20, r14
    13b6:	96 01       	movw	r18, r12
    13b8:	28 1b       	sub	r18, r24
    13ba:	39 0b       	sbc	r19, r25
    13bc:	4a 0b       	sbc	r20, r26
    13be:	5b 0b       	sbc	r21, r27
    13c0:	da 01       	movw	r26, r20
    13c2:	c9 01       	movw	r24, r18
    13c4:	80 93 0e 28 	sts	0x280E, r24	; 0x80280e <toff>
    13c8:	90 93 0f 28 	sts	0x280F, r25	; 0x80280f <toff+0x1>
    13cc:	a0 93 10 28 	sts	0x2810, r26	; 0x802810 <toff+0x2>
    13d0:	b0 93 11 28 	sts	0x2811, r27	; 0x802811 <toff+0x3>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:92
      }
      if (mesg.substring(0, epos) == "led_sec") {
    13d4:	98 01       	movw	r18, r16
    13d6:	50 e0       	ldi	r21, 0x00	; 0
    13d8:	40 e0       	ldi	r20, 0x00	; 0
    13da:	be 01       	movw	r22, r28
    13dc:	61 5e       	subi	r22, 0xE1	; 225
    13de:	7f 4f       	sbci	r23, 0xFF	; 255
    13e0:	ce 01       	movw	r24, r28
    13e2:	01 96       	adiw	r24, 0x01	; 1
    13e4:	0e 94 fd 05 	call	0xbfa	; 0xbfa <String::substring(unsigned int, unsigned int) const>
_ZNK6StringeqEPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:191
  operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
  int compareTo(const String &s) const;
  unsigned char equals(const String &s) const;
  unsigned char equals(const char *cstr) const;
  unsigned char operator==(const String &rhs) const { return equals(rhs); }
  unsigned char operator==(const char *cstr) const { return equals(cstr); }
    13e8:	69 e7       	ldi	r22, 0x79	; 121
    13ea:	7c e5       	ldi	r23, 0x5C	; 92
    13ec:	ce 01       	movw	r24, r28
    13ee:	01 96       	adiw	r24, 0x01	; 1
    13f0:	0e 94 92 04 	call	0x924	; 0x924 <String::equals(char const*) const>
    13f4:	18 2f       	mov	r17, r24
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:92
    13f6:	ce 01       	movw	r24, r28
    13f8:	01 96       	adiw	r24, 0x01	; 1
    13fa:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
    13fe:	11 23       	and	r17, r17
    1400:	21 f1       	breq	.+72     	; 0x144a <main+0x6b6>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:94
        //blink=<VAL>*\n
        reply = "led_sec=" + String(val);
    1402:	b7 01       	movw	r22, r14
    1404:	a6 01       	movw	r20, r12
    1406:	ce 01       	movw	r24, r28
    1408:	01 96       	adiw	r24, 0x01	; 1
    140a:	0e 94 61 05 	call	0xac2	; 0xac2 <String::String(unsigned long, unsigned char) [clone .constprop.8]>
_ZN15StringSumHelperC2EPKc():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:267

class StringSumHelper : public String
{
 public:
  StringSumHelper(const String &s) : String(s) {}
  StringSumHelper(const char *p) : String(p) {}
    140e:	65 e6       	ldi	r22, 0x65	; 101
    1410:	7c e5       	ldi	r23, 0x5C	; 92
    1412:	ce 01       	movw	r24, r28
    1414:	07 96       	adiw	r24, 0x07	; 7
    1416:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <String::String(char const*)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:94
    141a:	be 01       	movw	r22, r28
    141c:	6f 5f       	subi	r22, 0xFF	; 255
    141e:	7f 4f       	sbci	r23, 0xFF	; 255
    1420:	ce 01       	movw	r24, r28
    1422:	07 96       	adiw	r24, 0x07	; 7
    1424:	0e 94 23 05 	call	0xa46	; 0xa46 <operator+(StringSumHelper const&, String const&)>
    1428:	bc 01       	movw	r22, r24
    142a:	ce 01       	movw	r24, r28
    142c:	49 96       	adiw	r24, 0x19	; 25
    142e:	0e 94 d5 05 	call	0xbaa	; 0xbaa <String::operator=(String const&)>
_ZN15StringSumHelperD2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/String.h:263
#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
  void move(String &rhs);
#endif
};

class StringSumHelper : public String
    1432:	ce 01       	movw	r24, r28
    1434:	07 96       	adiw	r24, 0x07	; 7
    1436:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:94
    143a:	ce 01       	movw	r24, r28
    143c:	01 96       	adiw	r24, 0x01	; 1
    143e:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:95
        led_sec_state = val;
    1442:	c0 92 0a 28 	sts	0x280A, r12	; 0x80280a <__data_end>
    1446:	d0 92 0b 28 	sts	0x280B, r13	; 0x80280b <__data_end+0x1>
write():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.h:53
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    144a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    144c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    144e:	69 8d       	ldd	r22, Y+25	; 0x19
    1450:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1452:	86 e1       	ldi	r24, 0x16	; 22
    1454:	98 e2       	ldi	r25, 0x28	; 40
    1456:	0e 94 73 01 	call	0x2e6	; 0x2e6 <Print::write(unsigned char const*, unsigned int)>
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.h:49
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    145a:	42 e0       	ldi	r20, 0x02	; 2
    145c:	50 e0       	ldi	r21, 0x00	; 0
    145e:	6b e5       	ldi	r22, 0x5B	; 91
    1460:	7c e5       	ldi	r23, 0x5C	; 92
    1462:	86 e1       	ldi	r24, 0x16	; 22
    1464:	98 e2       	ldi	r25, 0x28	; 40
    1466:	0e 94 73 01 	call	0x2e6	; 0x2e6 <Print::write(unsigned char const*, unsigned int)>
loop():
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:53


  // if there is serial input, read line and pares
  if (Serial.available()) {
    String mesg = Serial.readStringUntil('\n');
    String reply;
    146a:	ce 01       	movw	r24, r28
    146c:	49 96       	adiw	r24, 0x19	; 25
    146e:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
W:\git\ba-atmevse\code\arduino\protocol_test_status/protocol_test_status.ino:52
  }


  // if there is serial input, read line and pares
  if (Serial.available()) {
    String mesg = Serial.readStringUntil('\n');
    1472:	ce 01       	movw	r24, r28
    1474:	4f 96       	adiw	r24, 0x1f	; 31
    1476:	0e 94 49 06 	call	0xc92	; 0xc92 <String::~String()>
main():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/main.cpp:43
  setup();

  for (;;)
  {
    loop();
    if (serialEventRun) serialEventRun();
    147a:	0e 94 26 03 	call	0x64c	; 0x64c <serialEventRun()>
    147e:	14 cd       	rjmp	.-1496   	; 0xea8 <main+0x114>

00001480 <_GLOBAL__sub_I___vector_17>:
_ZN5PrintC2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Print.h:41
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    1480:	e6 e1       	ldi	r30, 0x16	; 22
    1482:	f8 e2       	ldi	r31, 0x28	; 40
    1484:	12 82       	std	Z+2, r1	; 0x02
    1486:	13 82       	std	Z+3, r1	; 0x03
_ZN6StreamC2Ev():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles\api/Stream.h:64
 public:
  virtual int available() = 0;
  virtual int read() = 0;
  virtual int peek() = 0;

  Stream() { _timeout = 1000; }
    1488:	88 ee       	ldi	r24, 0xE8	; 232
    148a:	93 e0       	ldi	r25, 0x03	; 3
    148c:	a0 e0       	ldi	r26, 0x00	; 0
    148e:	b0 e0       	ldi	r27, 0x00	; 0
    1490:	84 83       	std	Z+4, r24	; 0x04
    1492:	95 83       	std	Z+5, r25	; 0x05
    1494:	a6 83       	std	Z+6, r26	; 0x06
    1496:	b7 83       	std	Z+7, r27	; 0x07
_ZN9UartClassC2EPV12USART_structhhhhhhh():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART_private.h:50
    _written(false),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0),
    _hwserial_dre_interrupt_vect_num(hwserial_dre_interrupt_vect_num),
    _hwserial_dre_interrupt_elevated(0),
    _prev_lvl1_interrupt_vect(0)
    1498:	86 e2       	ldi	r24, 0x26	; 38
    149a:	9c e5       	ldi	r25, 0x5C	; 92
    149c:	80 83       	st	Z, r24
    149e:	91 83       	std	Z+1, r25	; 0x01
    14a0:	80 e0       	ldi	r24, 0x00	; 0
    14a2:	98 e0       	ldi	r25, 0x08	; 8
    14a4:	84 87       	std	Z+12, r24	; 0x0c
    14a6:	95 87       	std	Z+13, r25	; 0x0d
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	86 87       	std	Z+14, r24	; 0x0e
    14ac:	17 86       	std	Z+15, r1	; 0x0f
    14ae:	10 8a       	std	Z+16, r1	; 0x10
    14b0:	95 e0       	ldi	r25, 0x05	; 5
    14b2:	91 8b       	std	Z+17, r25	; 0x11
    14b4:	94 e0       	ldi	r25, 0x04	; 4
    14b6:	92 8b       	std	Z+18, r25	; 0x12
    14b8:	83 8b       	std	Z+19, r24	; 0x13
    14ba:	14 8a       	std	Z+20, r1	; 0x14
    14bc:	15 8a       	std	Z+21, r1	; 0x15
    14be:	16 8a       	std	Z+22, r1	; 0x16
    14c0:	17 8a       	std	Z+23, r1	; 0x17
    14c2:	10 8e       	std	Z+24, r1	; 0x18
    14c4:	11 8e       	std	Z+25, r1	; 0x19
    14c6:	82 e1       	ldi	r24, 0x12	; 18
    14c8:	82 8f       	std	Z+26, r24	; 0x1a
    14ca:	13 8e       	std	Z+27, r1	; 0x1b
    14cc:	14 8e       	std	Z+28, r1	; 0x1c
_GLOBAL__sub_I___vector_17():
C:\Users\ko07xiqa\AppData\Local\Arduino15\packages\MegaCoreX\hardware\megaavr\1.0.4\cores\coreX-corefiles/UART0.cpp:66
// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available()
{
  return Serial.available();
}
    14ce:	08 95       	ret

000014d0 <atol>:
atol():
    14d0:	1f 93       	push	r17
    14d2:	fc 01       	movw	r30, r24
    14d4:	99 27       	eor	r25, r25
    14d6:	88 27       	eor	r24, r24
    14d8:	bc 01       	movw	r22, r24
    14da:	e8 94       	clt
    14dc:	11 91       	ld	r17, Z+
    14de:	10 32       	cpi	r17, 0x20	; 32
    14e0:	e9 f3       	breq	.-6      	; 0x14dc <atol+0xc>
    14e2:	19 30       	cpi	r17, 0x09	; 9
    14e4:	10 f0       	brcs	.+4      	; 0x14ea <atol+0x1a>
    14e6:	1e 30       	cpi	r17, 0x0E	; 14
    14e8:	c8 f3       	brcs	.-14     	; 0x14dc <atol+0xc>
    14ea:	1b 32       	cpi	r17, 0x2B	; 43
    14ec:	51 f0       	breq	.+20     	; 0x1502 <atol+0x32>
    14ee:	1d 32       	cpi	r17, 0x2D	; 45
    14f0:	49 f4       	brne	.+18     	; 0x1504 <atol+0x34>
    14f2:	68 94       	set
    14f4:	06 c0       	rjmp	.+12     	; 0x1502 <atol+0x32>
    14f6:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__mulsi_const_10>
    14fa:	61 0f       	add	r22, r17
    14fc:	71 1d       	adc	r23, r1
    14fe:	81 1d       	adc	r24, r1
    1500:	91 1d       	adc	r25, r1
    1502:	11 91       	ld	r17, Z+
    1504:	10 53       	subi	r17, 0x30	; 48
    1506:	1a 30       	cpi	r17, 0x0A	; 10
    1508:	b0 f3       	brcs	.-20     	; 0x14f6 <atol+0x26>
    150a:	3e f4       	brtc	.+14     	; 0x151a <atol+0x4a>
    150c:	90 95       	com	r25
    150e:	80 95       	com	r24
    1510:	70 95       	com	r23
    1512:	61 95       	neg	r22
    1514:	7f 4f       	sbci	r23, 0xFF	; 255
    1516:	8f 4f       	sbci	r24, 0xFF	; 255
    1518:	9f 4f       	sbci	r25, 0xFF	; 255
    151a:	1f 91       	pop	r17
    151c:	08 95       	ret

0000151e <__itoa_ncheck>:
__itoa_ncheck():
    151e:	bb 27       	eor	r27, r27
    1520:	4a 30       	cpi	r20, 0x0A	; 10
    1522:	31 f4       	brne	.+12     	; 0x1530 <__itoa_ncheck+0x12>
    1524:	99 23       	and	r25, r25
    1526:	22 f4       	brpl	.+8      	; 0x1530 <__itoa_ncheck+0x12>
    1528:	bd e2       	ldi	r27, 0x2D	; 45
    152a:	90 95       	com	r25
    152c:	81 95       	neg	r24
    152e:	9f 4f       	sbci	r25, 0xFF	; 255
    1530:	0c 94 e1 0a 	jmp	0x15c2	; 0x15c2 <__utoa_common>

00001534 <__ltoa_ncheck>:
__ltoa_ncheck():
    1534:	bb 27       	eor	r27, r27
    1536:	2a 30       	cpi	r18, 0x0A	; 10
    1538:	51 f4       	brne	.+20     	; 0x154e <__ltoa_ncheck+0x1a>
    153a:	99 23       	and	r25, r25
    153c:	42 f4       	brpl	.+16     	; 0x154e <__ltoa_ncheck+0x1a>
    153e:	bd e2       	ldi	r27, 0x2D	; 45
    1540:	90 95       	com	r25
    1542:	80 95       	com	r24
    1544:	70 95       	com	r23
    1546:	61 95       	neg	r22
    1548:	7f 4f       	sbci	r23, 0xFF	; 255
    154a:	8f 4f       	sbci	r24, 0xFF	; 255
    154c:	9f 4f       	sbci	r25, 0xFF	; 255
    154e:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__ultoa_common>

00001552 <__mulsi_const_10>:
__mulsi_const_10():
    1552:	59 2f       	mov	r21, r25
    1554:	48 2f       	mov	r20, r24
    1556:	37 2f       	mov	r19, r23
    1558:	26 2f       	mov	r18, r22
    155a:	66 0f       	add	r22, r22
    155c:	77 1f       	adc	r23, r23
    155e:	88 1f       	adc	r24, r24
    1560:	99 1f       	adc	r25, r25
    1562:	66 0f       	add	r22, r22
    1564:	77 1f       	adc	r23, r23
    1566:	88 1f       	adc	r24, r24
    1568:	99 1f       	adc	r25, r25
    156a:	62 0f       	add	r22, r18
    156c:	73 1f       	adc	r23, r19
    156e:	84 1f       	adc	r24, r20
    1570:	95 1f       	adc	r25, r21
    1572:	66 0f       	add	r22, r22
    1574:	77 1f       	adc	r23, r23
    1576:	88 1f       	adc	r24, r24
    1578:	99 1f       	adc	r25, r25
    157a:	08 95       	ret

0000157c <__ultoa_ncheck>:
__ultoa_ncheck():
    157c:	bb 27       	eor	r27, r27

0000157e <__ultoa_common>:
    157e:	fa 01       	movw	r30, r20
    1580:	a6 2f       	mov	r26, r22
    1582:	62 17       	cp	r22, r18
    1584:	71 05       	cpc	r23, r1
    1586:	81 05       	cpc	r24, r1
    1588:	91 05       	cpc	r25, r1
    158a:	33 0b       	sbc	r19, r19
    158c:	30 fb       	bst	r19, 0
    158e:	66 f0       	brts	.+24     	; 0x15a8 <__ultoa_common+0x2a>
    1590:	aa 27       	eor	r26, r26
    1592:	66 0f       	add	r22, r22
    1594:	77 1f       	adc	r23, r23
    1596:	88 1f       	adc	r24, r24
    1598:	99 1f       	adc	r25, r25
    159a:	aa 1f       	adc	r26, r26
    159c:	a2 17       	cp	r26, r18
    159e:	10 f0       	brcs	.+4      	; 0x15a4 <__ultoa_common+0x26>
    15a0:	a2 1b       	sub	r26, r18
    15a2:	63 95       	inc	r22
    15a4:	38 50       	subi	r19, 0x08	; 8
    15a6:	a9 f7       	brne	.-22     	; 0x1592 <__ultoa_common+0x14>
    15a8:	a0 5d       	subi	r26, 0xD0	; 208
    15aa:	aa 33       	cpi	r26, 0x3A	; 58
    15ac:	08 f0       	brcs	.+2      	; 0x15b0 <__ultoa_common+0x32>
    15ae:	a9 5d       	subi	r26, 0xD9	; 217
    15b0:	a1 93       	st	Z+, r26
    15b2:	36 f7       	brtc	.-52     	; 0x1580 <__ultoa_common+0x2>
    15b4:	b1 11       	cpse	r27, r1
    15b6:	b1 93       	st	Z+, r27
    15b8:	10 82       	st	Z, r1
    15ba:	ca 01       	movw	r24, r20
    15bc:	0c 94 fa 0a 	jmp	0x15f4	; 0x15f4 <strrev>

000015c0 <__utoa_ncheck>:
__utoa_ncheck():
    15c0:	bb 27       	eor	r27, r27

000015c2 <__utoa_common>:
    15c2:	fb 01       	movw	r30, r22
    15c4:	55 27       	eor	r21, r21
    15c6:	aa 27       	eor	r26, r26
    15c8:	88 0f       	add	r24, r24
    15ca:	99 1f       	adc	r25, r25
    15cc:	aa 1f       	adc	r26, r26
    15ce:	a4 17       	cp	r26, r20
    15d0:	10 f0       	brcs	.+4      	; 0x15d6 <__utoa_common+0x14>
    15d2:	a4 1b       	sub	r26, r20
    15d4:	83 95       	inc	r24
    15d6:	50 51       	subi	r21, 0x10	; 16
    15d8:	b9 f7       	brne	.-18     	; 0x15c8 <__utoa_common+0x6>
    15da:	a0 5d       	subi	r26, 0xD0	; 208
    15dc:	aa 33       	cpi	r26, 0x3A	; 58
    15de:	08 f0       	brcs	.+2      	; 0x15e2 <__utoa_common+0x20>
    15e0:	a9 5d       	subi	r26, 0xD9	; 217
    15e2:	a1 93       	st	Z+, r26
    15e4:	00 97       	sbiw	r24, 0x00	; 0
    15e6:	79 f7       	brne	.-34     	; 0x15c6 <__utoa_common+0x4>
    15e8:	b1 11       	cpse	r27, r1
    15ea:	b1 93       	st	Z+, r27
    15ec:	11 92       	st	Z+, r1
    15ee:	cb 01       	movw	r24, r22
    15f0:	0c 94 fa 0a 	jmp	0x15f4	; 0x15f4 <strrev>

000015f4 <strrev>:
strrev():
    15f4:	dc 01       	movw	r26, r24
    15f6:	fc 01       	movw	r30, r24
    15f8:	67 2f       	mov	r22, r23
    15fa:	71 91       	ld	r23, Z+
    15fc:	77 23       	and	r23, r23
    15fe:	e1 f7       	brne	.-8      	; 0x15f8 <strrev+0x4>
    1600:	32 97       	sbiw	r30, 0x02	; 2
    1602:	04 c0       	rjmp	.+8      	; 0x160c <strrev+0x18>
    1604:	7c 91       	ld	r23, X
    1606:	6d 93       	st	X+, r22
    1608:	70 83       	st	Z, r23
    160a:	62 91       	ld	r22, -Z
    160c:	ae 17       	cp	r26, r30
    160e:	bf 07       	cpc	r27, r31
    1610:	c8 f3       	brcs	.-14     	; 0x1604 <strrev+0x10>
    1612:	08 95       	ret

00001614 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    1614:	0e 94 46 0b 	call	0x168c	; 0x168c <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    1618:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    161a:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    161c:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    161e:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    1620:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    1622:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    1624:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    1626:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    1628:	08 95       	ret

0000162a <__prologue_saves__>:
__prologue_saves__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2169
    162a:	2f 92       	push	r2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2170
    162c:	3f 92       	push	r3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2171
    162e:	4f 92       	push	r4
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2172
    1630:	5f 92       	push	r5
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2173
    1632:	6f 92       	push	r6
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2174
    1634:	7f 92       	push	r7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2175
    1636:	8f 92       	push	r8
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2176
    1638:	9f 92       	push	r9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2177
    163a:	af 92       	push	r10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2178
    163c:	bf 92       	push	r11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2179
    163e:	cf 92       	push	r12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2180
    1640:	df 92       	push	r13
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2181
    1642:	ef 92       	push	r14
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2182
    1644:	ff 92       	push	r15
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2183
    1646:	0f 93       	push	r16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2184
    1648:	1f 93       	push	r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2185
    164a:	cf 93       	push	r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2186
    164c:	df 93       	push	r29
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2193
    164e:	cd b7       	in	r28, 0x3d	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2194
    1650:	de b7       	in	r29, 0x3e	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2195
    1652:	ca 1b       	sub	r28, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2196
    1654:	db 0b       	sbc	r29, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2197
    1656:	cd bf       	out	0x3d, r28	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2198
    1658:	de bf       	out	0x3e, r29	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2211
    165a:	09 94       	ijmp

0000165c <__epilogue_restores__>:
__epilogue_restores__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2222
    165c:	2a 88       	ldd	r2, Y+18	; 0x12
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2223
    165e:	39 88       	ldd	r3, Y+17	; 0x11
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2224
    1660:	48 88       	ldd	r4, Y+16	; 0x10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2225
    1662:	5f 84       	ldd	r5, Y+15	; 0x0f
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2226
    1664:	6e 84       	ldd	r6, Y+14	; 0x0e
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2227
    1666:	7d 84       	ldd	r7, Y+13	; 0x0d
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2228
    1668:	8c 84       	ldd	r8, Y+12	; 0x0c
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2229
    166a:	9b 84       	ldd	r9, Y+11	; 0x0b
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2230
    166c:	aa 84       	ldd	r10, Y+10	; 0x0a
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2231
    166e:	b9 84       	ldd	r11, Y+9	; 0x09
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2232
    1670:	c8 84       	ldd	r12, Y+8	; 0x08
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2233
    1672:	df 80       	ldd	r13, Y+7	; 0x07
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2234
    1674:	ee 80       	ldd	r14, Y+6	; 0x06
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2235
    1676:	fd 80       	ldd	r15, Y+5	; 0x05
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2236
    1678:	0c 81       	ldd	r16, Y+4	; 0x04
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2237
    167a:	1b 81       	ldd	r17, Y+3	; 0x03
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2238
    167c:	aa 81       	ldd	r26, Y+2	; 0x02
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2245
    167e:	b9 81       	ldd	r27, Y+1	; 0x01
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2246
    1680:	ce 0f       	add	r28, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2247
    1682:	d1 1d       	adc	r29, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2248
    1684:	cd bf       	out	0x3d, r28	; 61
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2249
    1686:	de bf       	out	0x3e, r29	; 62
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2250
    1688:	ed 01       	movw	r28, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2263
    168a:	08 95       	ret

0000168c <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    168c:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    168e:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    1690:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    1692:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    1694:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    1696:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    1698:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    169a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    169c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    169e:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    16a0:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    16a2:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    16a4:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    16a6:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    16a8:	08 95       	ret

000016aa <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    16aa:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    16ac:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    16ae:	16 f4       	brtc	.+4      	; 0x16b4 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    16b0:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    16b2:	07 d0       	rcall	.+14     	; 0x16c2 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    16b4:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    16b6:	09 d0       	rcall	.+18     	; 0x16ca <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    16b8:	0e 94 b2 0b 	call	0x1764	; 0x1764 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    16bc:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    16be:	05 d0       	rcall	.+10     	; 0x16ca <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    16c0:	3e f4       	brtc	.+14     	; 0x16d0 <__divmodhi4_exit>

000016c2 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    16c2:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    16c4:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    16c6:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    16c8:	08 95       	ret

000016ca <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    16ca:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    16cc:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    16ce:	7f 4f       	sbci	r23, 0xFF	; 255

000016d0 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    16d0:	08 95       	ret

000016d2 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    16d2:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    16d4:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    16d6:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    16d8:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    16da:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    16dc:	0d c0       	rjmp	.+26     	; 0x16f8 <__udivmodsi4_ep>

000016de <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    16de:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    16e0:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    16e2:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    16e4:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    16e6:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    16e8:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    16ea:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    16ec:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    16ee:	20 f0       	brcs	.+8      	; 0x16f8 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    16f0:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    16f2:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    16f4:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    16f6:	f5 0b       	sbc	r31, r21

000016f8 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    16f8:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    16fa:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    16fc:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    16fe:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    1700:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    1702:	69 f7       	brne	.-38     	; 0x16de <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    1704:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    1706:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    1708:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    170a:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    170c:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    170e:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    1710:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    1712:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    1714:	08 95       	ret

00001716 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    1716:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    1718:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    171a:	1e f4       	brtc	.+6      	; 0x1722 <__divmodsi4+0xc>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    171c:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    171e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    1722:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    1724:	07 d0       	rcall	.+14     	; 0x1734 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    1726:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    172a:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    172c:	03 d0       	rcall	.+6      	; 0x1734 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    172e:	4e f4       	brtc	.+18     	; 0x1742 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    1730:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <__negsi2>

00001734 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    1734:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    1736:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    1738:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    173a:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    173c:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    173e:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    1740:	5f 4f       	sbci	r21, 0xFF	; 255

00001742 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    1742:	08 95       	ret

00001744 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    1744:	90 95       	com	r25
    1746:	80 95       	com	r24
    1748:	70 95       	com	r23
    174a:	61 95       	neg	r22
    174c:	7f 4f       	sbci	r23, 0xFF	; 255
    174e:	8f 4f       	sbci	r24, 0xFF	; 255
    1750:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    1752:	08 95       	ret

00001754 <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    1754:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    1756:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__muluhisi3>

0000175a <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    175a:	0e 94 0a 0b 	call	0x1614	; 0x1614 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    175e:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    1760:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    1762:	08 95       	ret

00001764 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    1764:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    1766:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    1768:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    176a:	07 c0       	rjmp	.+14     	; 0x177a <__udivmodhi4_ep>

0000176c <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    176c:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    176e:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    1770:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    1772:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    1774:	10 f0       	brcs	.+4      	; 0x177a <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    1776:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    1778:	b7 0b       	sbc	r27, r23

0000177a <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    177a:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    177c:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    177e:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    1780:	a9 f7       	brne	.-22     	; 0x176c <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    1782:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    1784:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    1786:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    1788:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    178a:	08 95       	ret

0000178c <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    178c:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    178e:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    1790:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    1792:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    1794:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1796:	09 94       	ijmp

00001798 <malloc>:
malloc():
    1798:	0f 93       	push	r16
    179a:	1f 93       	push	r17
    179c:	cf 93       	push	r28
    179e:	df 93       	push	r29
    17a0:	82 30       	cpi	r24, 0x02	; 2
    17a2:	91 05       	cpc	r25, r1
    17a4:	10 f4       	brcc	.+4      	; 0x17aa <malloc+0x12>
    17a6:	82 e0       	ldi	r24, 0x02	; 2
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	e0 91 b5 28 	lds	r30, 0x28B5	; 0x8028b5 <__flp>
    17ae:	f0 91 b6 28 	lds	r31, 0x28B6	; 0x8028b6 <__flp+0x1>
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	b0 e0       	ldi	r27, 0x00	; 0
    17b8:	a0 e0       	ldi	r26, 0x00	; 0
    17ba:	30 97       	sbiw	r30, 0x00	; 0
    17bc:	99 f4       	brne	.+38     	; 0x17e4 <malloc+0x4c>
    17be:	21 15       	cp	r18, r1
    17c0:	31 05       	cpc	r19, r1
    17c2:	09 f4       	brne	.+2      	; 0x17c6 <malloc+0x2e>
    17c4:	4a c0       	rjmp	.+148    	; 0x185a <malloc+0xc2>
    17c6:	28 1b       	sub	r18, r24
    17c8:	39 0b       	sbc	r19, r25
    17ca:	24 30       	cpi	r18, 0x04	; 4
    17cc:	31 05       	cpc	r19, r1
    17ce:	d8 f5       	brcc	.+118    	; 0x1846 <malloc+0xae>
    17d0:	8a 81       	ldd	r24, Y+2	; 0x02
    17d2:	9b 81       	ldd	r25, Y+3	; 0x03
    17d4:	61 15       	cp	r22, r1
    17d6:	71 05       	cpc	r23, r1
    17d8:	89 f1       	breq	.+98     	; 0x183c <malloc+0xa4>
    17da:	fb 01       	movw	r30, r22
    17dc:	82 83       	std	Z+2, r24	; 0x02
    17de:	93 83       	std	Z+3, r25	; 0x03
    17e0:	fe 01       	movw	r30, r28
    17e2:	11 c0       	rjmp	.+34     	; 0x1806 <malloc+0x6e>
    17e4:	40 81       	ld	r20, Z
    17e6:	51 81       	ldd	r21, Z+1	; 0x01
    17e8:	02 81       	ldd	r16, Z+2	; 0x02
    17ea:	13 81       	ldd	r17, Z+3	; 0x03
    17ec:	48 17       	cp	r20, r24
    17ee:	59 07       	cpc	r21, r25
    17f0:	e0 f0       	brcs	.+56     	; 0x182a <malloc+0x92>
    17f2:	48 17       	cp	r20, r24
    17f4:	59 07       	cpc	r21, r25
    17f6:	99 f4       	brne	.+38     	; 0x181e <malloc+0x86>
    17f8:	10 97       	sbiw	r26, 0x00	; 0
    17fa:	61 f0       	breq	.+24     	; 0x1814 <malloc+0x7c>
    17fc:	12 96       	adiw	r26, 0x02	; 2
    17fe:	0c 93       	st	X, r16
    1800:	12 97       	sbiw	r26, 0x02	; 2
    1802:	13 96       	adiw	r26, 0x03	; 3
    1804:	1c 93       	st	X, r17
    1806:	32 96       	adiw	r30, 0x02	; 2
    1808:	cf 01       	movw	r24, r30
    180a:	df 91       	pop	r29
    180c:	cf 91       	pop	r28
    180e:	1f 91       	pop	r17
    1810:	0f 91       	pop	r16
    1812:	08 95       	ret
    1814:	00 93 b5 28 	sts	0x28B5, r16	; 0x8028b5 <__flp>
    1818:	10 93 b6 28 	sts	0x28B6, r17	; 0x8028b6 <__flp+0x1>
    181c:	f4 cf       	rjmp	.-24     	; 0x1806 <malloc+0x6e>
    181e:	21 15       	cp	r18, r1
    1820:	31 05       	cpc	r19, r1
    1822:	51 f0       	breq	.+20     	; 0x1838 <malloc+0xa0>
    1824:	42 17       	cp	r20, r18
    1826:	53 07       	cpc	r21, r19
    1828:	38 f0       	brcs	.+14     	; 0x1838 <malloc+0xa0>
    182a:	a9 01       	movw	r20, r18
    182c:	db 01       	movw	r26, r22
    182e:	9a 01       	movw	r18, r20
    1830:	bd 01       	movw	r22, r26
    1832:	df 01       	movw	r26, r30
    1834:	f8 01       	movw	r30, r16
    1836:	c1 cf       	rjmp	.-126    	; 0x17ba <malloc+0x22>
    1838:	ef 01       	movw	r28, r30
    183a:	f9 cf       	rjmp	.-14     	; 0x182e <malloc+0x96>
    183c:	80 93 b5 28 	sts	0x28B5, r24	; 0x8028b5 <__flp>
    1840:	90 93 b6 28 	sts	0x28B6, r25	; 0x8028b6 <__flp+0x1>
    1844:	cd cf       	rjmp	.-102    	; 0x17e0 <malloc+0x48>
    1846:	fe 01       	movw	r30, r28
    1848:	e2 0f       	add	r30, r18
    184a:	f3 1f       	adc	r31, r19
    184c:	81 93       	st	Z+, r24
    184e:	91 93       	st	Z+, r25
    1850:	22 50       	subi	r18, 0x02	; 2
    1852:	31 09       	sbc	r19, r1
    1854:	28 83       	st	Y, r18
    1856:	39 83       	std	Y+1, r19	; 0x01
    1858:	d7 cf       	rjmp	.-82     	; 0x1808 <malloc+0x70>
    185a:	20 91 b3 28 	lds	r18, 0x28B3	; 0x8028b3 <__brkval>
    185e:	30 91 b4 28 	lds	r19, 0x28B4	; 0x8028b4 <__brkval+0x1>
    1862:	23 2b       	or	r18, r19
    1864:	41 f4       	brne	.+16     	; 0x1876 <malloc+0xde>
    1866:	20 91 06 28 	lds	r18, 0x2806	; 0x802806 <__malloc_heap_start>
    186a:	30 91 07 28 	lds	r19, 0x2807	; 0x802807 <__malloc_heap_start+0x1>
    186e:	20 93 b3 28 	sts	0x28B3, r18	; 0x8028b3 <__brkval>
    1872:	30 93 b4 28 	sts	0x28B4, r19	; 0x8028b4 <__brkval+0x1>
    1876:	20 91 04 28 	lds	r18, 0x2804	; 0x802804 <__malloc_heap_end>
    187a:	30 91 05 28 	lds	r19, 0x2805	; 0x802805 <__malloc_heap_end+0x1>
    187e:	21 15       	cp	r18, r1
    1880:	31 05       	cpc	r19, r1
    1882:	41 f4       	brne	.+16     	; 0x1894 <malloc+0xfc>
    1884:	2d b7       	in	r18, 0x3d	; 61
    1886:	3e b7       	in	r19, 0x3e	; 62
    1888:	40 91 08 28 	lds	r20, 0x2808	; 0x802808 <__malloc_margin>
    188c:	50 91 09 28 	lds	r21, 0x2809	; 0x802809 <__malloc_margin+0x1>
    1890:	24 1b       	sub	r18, r20
    1892:	35 0b       	sbc	r19, r21
    1894:	e0 91 b3 28 	lds	r30, 0x28B3	; 0x8028b3 <__brkval>
    1898:	f0 91 b4 28 	lds	r31, 0x28B4	; 0x8028b4 <__brkval+0x1>
    189c:	e2 17       	cp	r30, r18
    189e:	f3 07       	cpc	r31, r19
    18a0:	a0 f4       	brcc	.+40     	; 0x18ca <malloc+0x132>
    18a2:	2e 1b       	sub	r18, r30
    18a4:	3f 0b       	sbc	r19, r31
    18a6:	28 17       	cp	r18, r24
    18a8:	39 07       	cpc	r19, r25
    18aa:	78 f0       	brcs	.+30     	; 0x18ca <malloc+0x132>
    18ac:	ac 01       	movw	r20, r24
    18ae:	4e 5f       	subi	r20, 0xFE	; 254
    18b0:	5f 4f       	sbci	r21, 0xFF	; 255
    18b2:	24 17       	cp	r18, r20
    18b4:	35 07       	cpc	r19, r21
    18b6:	48 f0       	brcs	.+18     	; 0x18ca <malloc+0x132>
    18b8:	4e 0f       	add	r20, r30
    18ba:	5f 1f       	adc	r21, r31
    18bc:	40 93 b3 28 	sts	0x28B3, r20	; 0x8028b3 <__brkval>
    18c0:	50 93 b4 28 	sts	0x28B4, r21	; 0x8028b4 <__brkval+0x1>
    18c4:	81 93       	st	Z+, r24
    18c6:	91 93       	st	Z+, r25
    18c8:	9f cf       	rjmp	.-194    	; 0x1808 <malloc+0x70>
    18ca:	f0 e0       	ldi	r31, 0x00	; 0
    18cc:	e0 e0       	ldi	r30, 0x00	; 0
    18ce:	9c cf       	rjmp	.-200    	; 0x1808 <malloc+0x70>

000018d0 <free>:
free():
    18d0:	cf 93       	push	r28
    18d2:	df 93       	push	r29
    18d4:	00 97       	sbiw	r24, 0x00	; 0
    18d6:	e9 f0       	breq	.+58     	; 0x1912 <free+0x42>
    18d8:	fc 01       	movw	r30, r24
    18da:	32 97       	sbiw	r30, 0x02	; 2
    18dc:	12 82       	std	Z+2, r1	; 0x02
    18de:	13 82       	std	Z+3, r1	; 0x03
    18e0:	a0 91 b5 28 	lds	r26, 0x28B5	; 0x8028b5 <__flp>
    18e4:	b0 91 b6 28 	lds	r27, 0x28B6	; 0x8028b6 <__flp+0x1>
    18e8:	ed 01       	movw	r28, r26
    18ea:	30 e0       	ldi	r19, 0x00	; 0
    18ec:	20 e0       	ldi	r18, 0x00	; 0
    18ee:	10 97       	sbiw	r26, 0x00	; 0
    18f0:	a1 f4       	brne	.+40     	; 0x191a <free+0x4a>
    18f2:	20 81       	ld	r18, Z
    18f4:	31 81       	ldd	r19, Z+1	; 0x01
    18f6:	82 0f       	add	r24, r18
    18f8:	93 1f       	adc	r25, r19
    18fa:	20 91 b3 28 	lds	r18, 0x28B3	; 0x8028b3 <__brkval>
    18fe:	30 91 b4 28 	lds	r19, 0x28B4	; 0x8028b4 <__brkval+0x1>
    1902:	28 17       	cp	r18, r24
    1904:	39 07       	cpc	r19, r25
    1906:	09 f0       	breq	.+2      	; 0x190a <free+0x3a>
    1908:	61 c0       	rjmp	.+194    	; 0x19cc <free+0xfc>
    190a:	e0 93 b3 28 	sts	0x28B3, r30	; 0x8028b3 <__brkval>
    190e:	f0 93 b4 28 	sts	0x28B4, r31	; 0x8028b4 <__brkval+0x1>
    1912:	df 91       	pop	r29
    1914:	cf 91       	pop	r28
    1916:	08 95       	ret
    1918:	ea 01       	movw	r28, r20
    191a:	ce 17       	cp	r28, r30
    191c:	df 07       	cpc	r29, r31
    191e:	e8 f5       	brcc	.+122    	; 0x199a <free+0xca>
    1920:	4a 81       	ldd	r20, Y+2	; 0x02
    1922:	5b 81       	ldd	r21, Y+3	; 0x03
    1924:	9e 01       	movw	r18, r28
    1926:	41 15       	cp	r20, r1
    1928:	51 05       	cpc	r21, r1
    192a:	b1 f7       	brne	.-20     	; 0x1918 <free+0x48>
    192c:	e9 01       	movw	r28, r18
    192e:	ea 83       	std	Y+2, r30	; 0x02
    1930:	fb 83       	std	Y+3, r31	; 0x03
    1932:	49 91       	ld	r20, Y+
    1934:	59 91       	ld	r21, Y+
    1936:	c4 0f       	add	r28, r20
    1938:	d5 1f       	adc	r29, r21
    193a:	ec 17       	cp	r30, r28
    193c:	fd 07       	cpc	r31, r29
    193e:	61 f4       	brne	.+24     	; 0x1958 <free+0x88>
    1940:	80 81       	ld	r24, Z
    1942:	91 81       	ldd	r25, Z+1	; 0x01
    1944:	02 96       	adiw	r24, 0x02	; 2
    1946:	84 0f       	add	r24, r20
    1948:	95 1f       	adc	r25, r21
    194a:	e9 01       	movw	r28, r18
    194c:	88 83       	st	Y, r24
    194e:	99 83       	std	Y+1, r25	; 0x01
    1950:	82 81       	ldd	r24, Z+2	; 0x02
    1952:	93 81       	ldd	r25, Z+3	; 0x03
    1954:	8a 83       	std	Y+2, r24	; 0x02
    1956:	9b 83       	std	Y+3, r25	; 0x03
    1958:	f0 e0       	ldi	r31, 0x00	; 0
    195a:	e0 e0       	ldi	r30, 0x00	; 0
    195c:	12 96       	adiw	r26, 0x02	; 2
    195e:	8d 91       	ld	r24, X+
    1960:	9c 91       	ld	r25, X
    1962:	13 97       	sbiw	r26, 0x03	; 3
    1964:	00 97       	sbiw	r24, 0x00	; 0
    1966:	b9 f5       	brne	.+110    	; 0x19d6 <free+0x106>
    1968:	2d 91       	ld	r18, X+
    196a:	3c 91       	ld	r19, X
    196c:	11 97       	sbiw	r26, 0x01	; 1
    196e:	cd 01       	movw	r24, r26
    1970:	02 96       	adiw	r24, 0x02	; 2
    1972:	82 0f       	add	r24, r18
    1974:	93 1f       	adc	r25, r19
    1976:	20 91 b3 28 	lds	r18, 0x28B3	; 0x8028b3 <__brkval>
    197a:	30 91 b4 28 	lds	r19, 0x28B4	; 0x8028b4 <__brkval+0x1>
    197e:	28 17       	cp	r18, r24
    1980:	39 07       	cpc	r19, r25
    1982:	39 f6       	brne	.-114    	; 0x1912 <free+0x42>
    1984:	30 97       	sbiw	r30, 0x00	; 0
    1986:	51 f5       	brne	.+84     	; 0x19dc <free+0x10c>
    1988:	10 92 b5 28 	sts	0x28B5, r1	; 0x8028b5 <__flp>
    198c:	10 92 b6 28 	sts	0x28B6, r1	; 0x8028b6 <__flp+0x1>
    1990:	a0 93 b3 28 	sts	0x28B3, r26	; 0x8028b3 <__brkval>
    1994:	b0 93 b4 28 	sts	0x28B4, r27	; 0x8028b4 <__brkval+0x1>
    1998:	bc cf       	rjmp	.-136    	; 0x1912 <free+0x42>
    199a:	c2 83       	std	Z+2, r28	; 0x02
    199c:	d3 83       	std	Z+3, r29	; 0x03
    199e:	40 81       	ld	r20, Z
    19a0:	51 81       	ldd	r21, Z+1	; 0x01
    19a2:	84 0f       	add	r24, r20
    19a4:	95 1f       	adc	r25, r21
    19a6:	c8 17       	cp	r28, r24
    19a8:	d9 07       	cpc	r29, r25
    19aa:	61 f4       	brne	.+24     	; 0x19c4 <free+0xf4>
    19ac:	4e 5f       	subi	r20, 0xFE	; 254
    19ae:	5f 4f       	sbci	r21, 0xFF	; 255
    19b0:	88 81       	ld	r24, Y
    19b2:	99 81       	ldd	r25, Y+1	; 0x01
    19b4:	48 0f       	add	r20, r24
    19b6:	59 1f       	adc	r21, r25
    19b8:	40 83       	st	Z, r20
    19ba:	51 83       	std	Z+1, r21	; 0x01
    19bc:	8a 81       	ldd	r24, Y+2	; 0x02
    19be:	9b 81       	ldd	r25, Y+3	; 0x03
    19c0:	82 83       	std	Z+2, r24	; 0x02
    19c2:	93 83       	std	Z+3, r25	; 0x03
    19c4:	21 15       	cp	r18, r1
    19c6:	31 05       	cpc	r19, r1
    19c8:	09 f0       	breq	.+2      	; 0x19cc <free+0xfc>
    19ca:	b0 cf       	rjmp	.-160    	; 0x192c <free+0x5c>
    19cc:	e0 93 b5 28 	sts	0x28B5, r30	; 0x8028b5 <__flp>
    19d0:	f0 93 b6 28 	sts	0x28B6, r31	; 0x8028b6 <__flp+0x1>
    19d4:	9e cf       	rjmp	.-196    	; 0x1912 <free+0x42>
    19d6:	fd 01       	movw	r30, r26
    19d8:	dc 01       	movw	r26, r24
    19da:	c0 cf       	rjmp	.-128    	; 0x195c <free+0x8c>
    19dc:	12 82       	std	Z+2, r1	; 0x02
    19de:	13 82       	std	Z+3, r1	; 0x03
    19e0:	d7 cf       	rjmp	.-82     	; 0x1990 <free+0xc0>

000019e2 <realloc>:
realloc():
    19e2:	b0 e0       	ldi	r27, 0x00	; 0
    19e4:	a0 e0       	ldi	r26, 0x00	; 0
    19e6:	e7 ef       	ldi	r30, 0xF7	; 247
    19e8:	fc e0       	ldi	r31, 0x0C	; 12
    19ea:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__prologue_saves__+0x4>
    19ee:	8c 01       	movw	r16, r24
    19f0:	00 97       	sbiw	r24, 0x00	; 0
    19f2:	51 f4       	brne	.+20     	; 0x1a08 <realloc+0x26>
    19f4:	cb 01       	movw	r24, r22
    19f6:	0e 94 cc 0b 	call	0x1798	; 0x1798 <malloc>
    19fa:	8c 01       	movw	r16, r24
    19fc:	c8 01       	movw	r24, r16
    19fe:	cd b7       	in	r28, 0x3d	; 61
    1a00:	de b7       	in	r29, 0x3e	; 62
    1a02:	e0 e1       	ldi	r30, 0x10	; 16
    1a04:	0c 94 30 0b 	jmp	0x1660	; 0x1660 <__epilogue_restores__+0x4>
    1a08:	fc 01       	movw	r30, r24
    1a0a:	e6 0f       	add	r30, r22
    1a0c:	f7 1f       	adc	r31, r23
    1a0e:	9c 01       	movw	r18, r24
    1a10:	22 50       	subi	r18, 0x02	; 2
    1a12:	31 09       	sbc	r19, r1
    1a14:	e2 17       	cp	r30, r18
    1a16:	f3 07       	cpc	r31, r19
    1a18:	08 f4       	brcc	.+2      	; 0x1a1c <realloc+0x3a>
    1a1a:	9d c0       	rjmp	.+314    	; 0x1b56 <realloc+0x174>
    1a1c:	d9 01       	movw	r26, r18
    1a1e:	cd 91       	ld	r28, X+
    1a20:	dc 91       	ld	r29, X
    1a22:	11 97       	sbiw	r26, 0x01	; 1
    1a24:	c6 17       	cp	r28, r22
    1a26:	d7 07       	cpc	r29, r23
    1a28:	98 f0       	brcs	.+38     	; 0x1a50 <realloc+0x6e>
    1a2a:	c5 30       	cpi	r28, 0x05	; 5
    1a2c:	d1 05       	cpc	r29, r1
    1a2e:	30 f3       	brcs	.-52     	; 0x19fc <realloc+0x1a>
    1a30:	ce 01       	movw	r24, r28
    1a32:	04 97       	sbiw	r24, 0x04	; 4
    1a34:	86 17       	cp	r24, r22
    1a36:	97 07       	cpc	r25, r23
    1a38:	08 f3       	brcs	.-62     	; 0x19fc <realloc+0x1a>
    1a3a:	c6 1b       	sub	r28, r22
    1a3c:	d7 0b       	sbc	r29, r23
    1a3e:	22 97       	sbiw	r28, 0x02	; 2
    1a40:	c1 93       	st	Z+, r28
    1a42:	d1 93       	st	Z+, r29
    1a44:	6d 93       	st	X+, r22
    1a46:	7c 93       	st	X, r23
    1a48:	cf 01       	movw	r24, r30
    1a4a:	0e 94 68 0c 	call	0x18d0	; 0x18d0 <free>
    1a4e:	d6 cf       	rjmp	.-84     	; 0x19fc <realloc+0x1a>
    1a50:	5b 01       	movw	r10, r22
    1a52:	ac 1a       	sub	r10, r28
    1a54:	bd 0a       	sbc	r11, r29
    1a56:	4c 01       	movw	r8, r24
    1a58:	8c 0e       	add	r8, r28
    1a5a:	9d 1e       	adc	r9, r29
    1a5c:	a0 91 b5 28 	lds	r26, 0x28B5	; 0x8028b5 <__flp>
    1a60:	b0 91 b6 28 	lds	r27, 0x28B6	; 0x8028b6 <__flp+0x1>
    1a64:	51 2c       	mov	r5, r1
    1a66:	41 2c       	mov	r4, r1
    1a68:	f1 2c       	mov	r15, r1
    1a6a:	e1 2c       	mov	r14, r1
    1a6c:	10 97       	sbiw	r26, 0x00	; 0
    1a6e:	31 f5       	brne	.+76     	; 0x1abc <realloc+0xda>
    1a70:	80 91 b3 28 	lds	r24, 0x28B3	; 0x8028b3 <__brkval>
    1a74:	90 91 b4 28 	lds	r25, 0x28B4	; 0x8028b4 <__brkval+0x1>
    1a78:	88 15       	cp	r24, r8
    1a7a:	99 05       	cpc	r25, r9
    1a7c:	09 f0       	breq	.+2      	; 0x1a80 <realloc+0x9e>
    1a7e:	5c c0       	rjmp	.+184    	; 0x1b38 <realloc+0x156>
    1a80:	46 16       	cp	r4, r22
    1a82:	57 06       	cpc	r5, r23
    1a84:	08 f0       	brcs	.+2      	; 0x1a88 <realloc+0xa6>
    1a86:	58 c0       	rjmp	.+176    	; 0x1b38 <realloc+0x156>
    1a88:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <__malloc_heap_end>
    1a8c:	90 91 05 28 	lds	r25, 0x2805	; 0x802805 <__malloc_heap_end+0x1>
    1a90:	00 97       	sbiw	r24, 0x00	; 0
    1a92:	41 f4       	brne	.+16     	; 0x1aa4 <realloc+0xc2>
    1a94:	8d b7       	in	r24, 0x3d	; 61
    1a96:	9e b7       	in	r25, 0x3e	; 62
    1a98:	40 91 08 28 	lds	r20, 0x2808	; 0x802808 <__malloc_margin>
    1a9c:	50 91 09 28 	lds	r21, 0x2809	; 0x802809 <__malloc_margin+0x1>
    1aa0:	84 1b       	sub	r24, r20
    1aa2:	95 0b       	sbc	r25, r21
    1aa4:	e8 17       	cp	r30, r24
    1aa6:	f9 07       	cpc	r31, r25
    1aa8:	08 f0       	brcs	.+2      	; 0x1aac <realloc+0xca>
    1aaa:	55 c0       	rjmp	.+170    	; 0x1b56 <realloc+0x174>
    1aac:	e0 93 b3 28 	sts	0x28B3, r30	; 0x8028b3 <__brkval>
    1ab0:	f0 93 b4 28 	sts	0x28B4, r31	; 0x8028b4 <__brkval+0x1>
    1ab4:	f9 01       	movw	r30, r18
    1ab6:	60 83       	st	Z, r22
    1ab8:	71 83       	std	Z+1, r23	; 0x01
    1aba:	a0 cf       	rjmp	.-192    	; 0x19fc <realloc+0x1a>
    1abc:	8d 91       	ld	r24, X+
    1abe:	9c 91       	ld	r25, X
    1ac0:	11 97       	sbiw	r26, 0x01	; 1
    1ac2:	12 96       	adiw	r26, 0x02	; 2
    1ac4:	6c 90       	ld	r6, X
    1ac6:	12 97       	sbiw	r26, 0x02	; 2
    1ac8:	13 96       	adiw	r26, 0x03	; 3
    1aca:	7c 90       	ld	r7, X
    1acc:	13 97       	sbiw	r26, 0x03	; 3
    1ace:	a8 15       	cp	r26, r8
    1ad0:	b9 05       	cpc	r27, r9
    1ad2:	59 f5       	brne	.+86     	; 0x1b2a <realloc+0x148>
    1ad4:	6c 01       	movw	r12, r24
    1ad6:	42 e0       	ldi	r20, 0x02	; 2
    1ad8:	c4 0e       	add	r12, r20
    1ada:	d1 1c       	adc	r13, r1
    1adc:	ca 14       	cp	r12, r10
    1ade:	db 04       	cpc	r13, r11
    1ae0:	20 f1       	brcs	.+72     	; 0x1b2a <realloc+0x148>
    1ae2:	ac 01       	movw	r20, r24
    1ae4:	4a 19       	sub	r20, r10
    1ae6:	5b 09       	sbc	r21, r11
    1ae8:	da 01       	movw	r26, r20
    1aea:	12 96       	adiw	r26, 0x02	; 2
    1aec:	15 97       	sbiw	r26, 0x05	; 5
    1aee:	80 f0       	brcs	.+32     	; 0x1b10 <realloc+0x12e>
    1af0:	62 82       	std	Z+2, r6	; 0x02
    1af2:	73 82       	std	Z+3, r7	; 0x03
    1af4:	40 83       	st	Z, r20
    1af6:	51 83       	std	Z+1, r21	; 0x01
    1af8:	d9 01       	movw	r26, r18
    1afa:	6d 93       	st	X+, r22
    1afc:	7c 93       	st	X, r23
    1afe:	e1 14       	cp	r14, r1
    1b00:	f1 04       	cpc	r15, r1
    1b02:	71 f0       	breq	.+28     	; 0x1b20 <realloc+0x13e>
    1b04:	d7 01       	movw	r26, r14
    1b06:	12 96       	adiw	r26, 0x02	; 2
    1b08:	ed 93       	st	X+, r30
    1b0a:	fc 93       	st	X, r31
    1b0c:	13 97       	sbiw	r26, 0x03	; 3
    1b0e:	76 cf       	rjmp	.-276    	; 0x19fc <realloc+0x1a>
    1b10:	22 96       	adiw	r28, 0x02	; 2
    1b12:	8c 0f       	add	r24, r28
    1b14:	9d 1f       	adc	r25, r29
    1b16:	f9 01       	movw	r30, r18
    1b18:	80 83       	st	Z, r24
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	f3 01       	movw	r30, r6
    1b1e:	ef cf       	rjmp	.-34     	; 0x1afe <realloc+0x11c>
    1b20:	e0 93 b5 28 	sts	0x28B5, r30	; 0x8028b5 <__flp>
    1b24:	f0 93 b6 28 	sts	0x28B6, r31	; 0x8028b6 <__flp+0x1>
    1b28:	69 cf       	rjmp	.-302    	; 0x19fc <realloc+0x1a>
    1b2a:	48 16       	cp	r4, r24
    1b2c:	59 06       	cpc	r5, r25
    1b2e:	08 f4       	brcc	.+2      	; 0x1b32 <realloc+0x150>
    1b30:	2c 01       	movw	r4, r24
    1b32:	7d 01       	movw	r14, r26
    1b34:	d3 01       	movw	r26, r6
    1b36:	9a cf       	rjmp	.-204    	; 0x1a6c <realloc+0x8a>
    1b38:	cb 01       	movw	r24, r22
    1b3a:	0e 94 cc 0b 	call	0x1798	; 0x1798 <malloc>
    1b3e:	7c 01       	movw	r14, r24
    1b40:	00 97       	sbiw	r24, 0x00	; 0
    1b42:	49 f0       	breq	.+18     	; 0x1b56 <realloc+0x174>
    1b44:	ae 01       	movw	r20, r28
    1b46:	b8 01       	movw	r22, r16
    1b48:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <memcpy>
    1b4c:	c8 01       	movw	r24, r16
    1b4e:	0e 94 68 0c 	call	0x18d0	; 0x18d0 <free>
    1b52:	87 01       	movw	r16, r14
    1b54:	53 cf       	rjmp	.-346    	; 0x19fc <realloc+0x1a>
    1b56:	10 e0       	ldi	r17, 0x00	; 0
    1b58:	00 e0       	ldi	r16, 0x00	; 0
    1b5a:	50 cf       	rjmp	.-352    	; 0x19fc <realloc+0x1a>

00001b5c <memcpy>:
memcpy():
    1b5c:	fb 01       	movw	r30, r22
    1b5e:	dc 01       	movw	r26, r24
    1b60:	02 c0       	rjmp	.+4      	; 0x1b66 <memcpy+0xa>
    1b62:	01 90       	ld	r0, Z+
    1b64:	0d 92       	st	X+, r0
    1b66:	41 50       	subi	r20, 0x01	; 1
    1b68:	50 40       	sbci	r21, 0x00	; 0
    1b6a:	d8 f7       	brcc	.-10     	; 0x1b62 <memcpy+0x6>
    1b6c:	08 95       	ret

00001b6e <strcmp>:
strcmp():
    1b6e:	fb 01       	movw	r30, r22
    1b70:	dc 01       	movw	r26, r24
    1b72:	8d 91       	ld	r24, X+
    1b74:	01 90       	ld	r0, Z+
    1b76:	80 19       	sub	r24, r0
    1b78:	01 10       	cpse	r0, r1
    1b7a:	d9 f3       	breq	.-10     	; 0x1b72 <strcmp+0x4>
    1b7c:	99 0b       	sbc	r25, r25
    1b7e:	08 95       	ret

00001b80 <strcpy>:
strcpy():
    1b80:	fb 01       	movw	r30, r22
    1b82:	dc 01       	movw	r26, r24
    1b84:	01 90       	ld	r0, Z+
    1b86:	0d 92       	st	X+, r0
    1b88:	00 20       	and	r0, r0
    1b8a:	e1 f7       	brne	.-8      	; 0x1b84 <strcpy+0x4>
    1b8c:	08 95       	ret

00001b8e <strstr>:
strstr():
    1b8e:	fb 01       	movw	r30, r22
    1b90:	51 91       	ld	r21, Z+
    1b92:	55 23       	and	r21, r21
    1b94:	a9 f0       	breq	.+42     	; 0x1bc0 <strstr+0x32>
    1b96:	bf 01       	movw	r22, r30
    1b98:	dc 01       	movw	r26, r24
    1b9a:	4d 91       	ld	r20, X+
    1b9c:	45 17       	cp	r20, r21
    1b9e:	41 11       	cpse	r20, r1
    1ba0:	e1 f7       	brne	.-8      	; 0x1b9a <strstr+0xc>
    1ba2:	59 f4       	brne	.+22     	; 0x1bba <strstr+0x2c>
    1ba4:	cd 01       	movw	r24, r26
    1ba6:	01 90       	ld	r0, Z+
    1ba8:	00 20       	and	r0, r0
    1baa:	49 f0       	breq	.+18     	; 0x1bbe <strstr+0x30>
    1bac:	4d 91       	ld	r20, X+
    1bae:	40 15       	cp	r20, r0
    1bb0:	41 11       	cpse	r20, r1
    1bb2:	c9 f3       	breq	.-14     	; 0x1ba6 <strstr+0x18>
    1bb4:	fb 01       	movw	r30, r22
    1bb6:	41 11       	cpse	r20, r1
    1bb8:	ef cf       	rjmp	.-34     	; 0x1b98 <strstr+0xa>
    1bba:	81 e0       	ldi	r24, 0x01	; 1
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	01 97       	sbiw	r24, 0x01	; 1
    1bc0:	08 95       	ret

00001bc2 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    1bc2:	f8 94       	cli

00001bc4 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    1bc4:	ff cf       	rjmp	.-2      	; 0x1bc4 <__stop_program>
